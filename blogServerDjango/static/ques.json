{
    "1": {
        "id": "1",
        "Title": "Two Sum::Link-https://leetcode.com/problems/two-sum,",
        "Difficulty": "E",
        "freq": "10.00",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=KLlXCFG5TnA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0001-two-sum.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "hash-table"
        ],
        "companies": [
            "accenture",
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "doordash",
            "facebook",
            "goldman-sachs",
            "google",
            "ibm",
            "infosys",
            "microsoft",
            "oracle",
            "salesforce",
            "tcs",
            "tiktok",
            "uber",
            "yahoo",
            "yandex",
            "zoho"
        ]
    },
    "2": {
        "id": "2",
        "Title": "LRU Cache::Link-https://leetcode.com/problems/lru-cache,",
        "Difficulty": "M",
        "freq": "6.49",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=7ABFKPK2hD4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0146-lru-cache.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "design",
            "hash-table",
            "linked-list"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "bytedance",
            "cisco",
            "coupang",
            "facebook",
            "goldman-sachs",
            "google",
            "intuit",
            "microsoft",
            "nvidia",
            "oracle",
            "salesforce",
            "servicenow",
            "snapchat",
            "tiktok",
            "walmart-labs",
            "yahoo",
            "yandex"
        ]
    },
    "3": {
        "id": "3",
        "Title": "Merge Intervals::Link-https://leetcode.com/problems/merge-intervals,",
        "Difficulty": "M",
        "freq": "5.78",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "atlassian",
            "bloomberg",
            "cisco",
            "facebook",
            "google",
            "ixl",
            "jpmorgan",
            "linkedin",
            "microsoft",
            "oracle",
            "salesforce",
            "servicenow",
            "tiktok",
            "uber",
            "yandex",
            "zoho"
        ]
    },
    "4": {
        "id": "4",
        "Title": "Merge Sorted Array::Link-https://leetcode.com/problems/merge-sorted-array,",
        "Difficulty": "E",
        "freq": "5.18",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=P1Ic85RarKY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0088-merge-sorted-array.py,",
        "topics": [
            "array",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "tiktok",
            "yandex"
        ]
    },
    "5": {
        "id": "5",
        "Title": "Number of Islands::Link-https://leetcode.com/problems/number-of-islands,",
        "Difficulty": "M",
        "freq": "5.12",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=pV2kpPD66nE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0200-number-of-islands.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix",
            "union-find"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "goldman-sachs",
            "google",
            "linkedin",
            "microsoft",
            "nvidia",
            "oracle",
            "paypal",
            "tiktok",
            "uber",
            "yandex",
            "zoho"
        ]
    },
    "6": {
        "id": "6",
        "Title": "Longest Substring Without Repeating Characters::Link-https://leetcode.com/problems/longest-substring-without-repeating-characters,",
        "Difficulty": "M",
        "freq": "4.99",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=wiGpQwVHdE0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0003-longest-substring-without-repeating-characters.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "bytedance",
            "facebook",
            "flipkart",
            "google",
            "ibm",
            "microsoft",
            "nvidia",
            "oracle",
            "tcs",
            "tiktok",
            "tinkoff",
            "turing",
            "walmart-labs",
            "yandex",
            "zoho"
        ]
    },
    "7": {
        "id": "7",
        "Title": "Kth Largest Element in an Array::Link-https://leetcode.com/problems/kth-largest-element-in-an-array,",
        "Difficulty": "M",
        "freq": "4.63",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=XEmy13g1Qxc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0215-kth-largest-element-in-an-array.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "divide-and-conquer",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon",
            "facebook",
            "flipkart",
            "goldman-sachs",
            "google",
            "linkedin",
            "microsoft",
            "oracle",
            "tiktok",
            "walmart-labs"
        ]
    },
    "8": {
        "id": "8",
        "Title": "Trapping Rain Water::Link-https://leetcode.com/problems/trapping-rain-water,",
        "Difficulty": "H",
        "freq": "4.52",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ZI2z5pq0TqA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0042-trapping-rain-water.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "dynamic-programming",
            "monotonic-stack",
            "stack",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "bytedance",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "tiktok",
            "yandex",
            "zoho",
            "zopsmart"
        ]
    },
    "9": {
        "id": "9",
        "Title": "Binary Tree Vertical Order Traversal::Link-https://leetcode.com/problems/binary-tree-vertical-order-traversal,",
        "Difficulty": "M",
        "freq": "4.39",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "sorting",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "10": {
        "id": "10",
        "Title": "Minimum Remove to Make Valid Parentheses::Link-https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses,",
        "Difficulty": "M",
        "freq": "4.01",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "tiktok"
        ]
    },
    "11": {
        "id": "11",
        "Title": "Valid Palindrome II::Link-https://leetcode.com/problems/valid-palindrome-ii,",
        "Difficulty": "E",
        "freq": "3.98",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=JrxRYBwG6EI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0680-valid-palindrome-ii.py,",
        "topics": [
            "greedy",
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "microsoft",
            "yandex"
        ]
    },
    "12": {
        "id": "12",
        "Title": "Valid Word Abbreviation::Link-https://leetcode.com/problems/valid-word-abbreviation,",
        "Difficulty": "E",
        "freq": "3.71",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "13": {
        "id": "13",
        "Title": "Group Anagrams::Link-https://leetcode.com/problems/group-anagrams,",
        "Difficulty": "M",
        "freq": "3.46",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=vzdNOK2oB2E,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0049-group-anagrams.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "atlassian",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "nvidia",
            "oracle",
            "paypal",
            "servicenow",
            "tiktok",
            "uber",
            "yandex"
        ]
    },
    "14": {
        "id": "14",
        "Title": "Subarray Sum Equals K::Link-https://leetcode.com/problems/subarray-sum-equals-k,",
        "Difficulty": "M",
        "freq": "3.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=fFVZt-6sgyo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0560-subarray-sum-equals-k.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "oracle",
            "paypal",
            "tcs",
            "tiktok",
            "yandex"
        ]
    },
    "15": {
        "id": "15",
        "Title": "Valid Parentheses::Link-https://leetcode.com/problems/valid-parentheses,",
        "Difficulty": "E",
        "freq": "3.38",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=WTzjTskDFMg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0020-valid-parentheses.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "accenture",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "linkedin",
            "microsoft",
            "oracle",
            "servicenow",
            "tcs",
            "turing",
            "yahoo",
            "yandex",
            "zoho"
        ]
    },
    "16": {
        "id": "16",
        "Title": "Best Time to Buy and Sell Stock::Link-https://leetcode.com/problems/best-time-to-buy-and-sell-stock,",
        "Difficulty": "E",
        "freq": "3.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=1pkOgXD63yU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0121-best-time-to-buy-and-sell-stock.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "de-shaw",
            "facebook",
            "google",
            "ibm",
            "jpmorgan",
            "microsoft",
            "phonepe",
            "servicenow",
            "tcs",
            "tiktok",
            "uber",
            "walmart-labs",
            "zoho"
        ]
    },
    "17": {
        "id": "17",
        "Title": "Random Pick with Weight::Link-https://leetcode.com/problems/random-pick-with-weight,",
        "Difficulty": "M",
        "freq": "3.16",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search",
            "math",
            "prefix-sum"
        ],
        "companies": [
            "adobe",
            "amazon",
            "facebook",
            "google",
            "uber"
        ]
    },
    "18": {
        "id": "18",
        "Title": "Longest Palindromic Substring::Link-https://leetcode.com/problems/longest-palindromic-substring,",
        "Difficulty": "M",
        "freq": "3.13",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=XYQecbcd6_c,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0005-longest-palindromic-substring.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "dynamic-programming",
            "string",
            "two-pointers"
        ],
        "companies": [
            "accenture",
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "cisco",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "tcs",
            "tiktok",
            "zoho"
        ]
    },
    "19": {
        "id": "19",
        "Title": "3Sum::Link-https://leetcode.com/problems/3sum,",
        "Difficulty": "M",
        "freq": "3.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=jzZsG8n2R9A,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0015-3sum.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "cloudflare",
            "facebook",
            "google",
            "intuit",
            "microsoft",
            "tcs",
            "tiktok",
            "yahoo"
        ]
    },
    "20": {
        "id": "20",
        "Title": "Basic Calculator II::Link-https://leetcode.com/problems/basic-calculator-ii,",
        "Difficulty": "M",
        "freq": "2.94",
        "others": [
            "grind169"
        ],
        "topics": [
            "math",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "tiktok",
            "walmart-labs",
            "zoho"
        ]
    },
    "21": {
        "id": "21",
        "Title": "Simplify Path::Link-https://leetcode.com/problems/simplify-path,",
        "Difficulty": "M",
        "freq": "2.94",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=qYlHrAKJfyA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0071-simplify-path.py,",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft",
            "tinkoff"
        ]
    },
    "22": {
        "id": "22",
        "Title": "Lowest Common Ancestor of a Binary Tree III::Link-https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii,",
        "Difficulty": "M",
        "freq": "2.94",
        "topics": [
            "binary-tree",
            "hash-table",
            "tree",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "23": {
        "id": "23",
        "Title": "Lowest Common Ancestor of a Binary Tree::Link-https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree,",
        "Difficulty": "M",
        "freq": "2.92",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=gs2LMfuOR9k,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0236-lowest-common-ancestor-of-a-binary-tree.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "adobe",
            "amazon",
            "facebook",
            "google",
            "linkedin",
            "microsoft",
            "oracle",
            "salesforce",
            "tiktok",
            "yandex"
        ]
    },
    "24": {
        "id": "24",
        "Title": "Top K Frequent Elements::Link-https://leetcode.com/problems/top-k-frequent-elements,",
        "Difficulty": "M",
        "freq": "2.92",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=YPTqKIgVk-k,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0347-top-k-frequent-elements.py,",
        "others": [
            "neet150",
            "blind75"
        ],
        "topics": [
            "array",
            "counting",
            "divide-and-conquer",
            "hash-table",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "intuit",
            "microsoft",
            "oracle",
            "paypal",
            "tiktok",
            "uber",
            "walmart-labs"
        ]
    },
    "25": {
        "id": "25",
        "Title": "Move Zeroes::Link-https://leetcode.com/problems/move-zeroes,",
        "Difficulty": "E",
        "freq": "2.81",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=aayNRwUN3Do,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0283-move-zeroes.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "nvidia",
            "oracle",
            "tcs",
            "tiktok",
            "yandex"
        ]
    },
    "26": {
        "id": "26",
        "Title": "Median of Two Sorted Arrays::Link-https://leetcode.com/problems/median-of-two-sorted-arrays,",
        "Difficulty": "H",
        "freq": "2.67",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=q6IEA26hvXc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0004-median-of-two-sorted-arrays.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search",
            "divide-and-conquer"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "linkedin",
            "microsoft",
            "snapchat",
            "zoho"
        ]
    },
    "27": {
        "id": "27",
        "Title": "Pow(x, n)::Link-https://leetcode.com/problems/powx-n,",
        "Difficulty": "M",
        "freq": "2.56",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=g9YQyYi4IQQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0050-powx-n.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "math",
            "recursion"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "salesforce"
        ]
    },
    "28": {
        "id": "28",
        "Title": "Longest Common Prefix::Link-https://leetcode.com/problems/longest-common-prefix,",
        "Difficulty": "E",
        "freq": "2.45",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=0sWShKIJoo4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0014-longest-common-prefix.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "string",
            "trie"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "tiktok",
            "turing",
            "walmart-labs",
            "zoho"
        ]
    },
    "29": {
        "id": "29",
        "Title": "Find Peak Element::Link-https://leetcode.com/problems/find-peak-element,",
        "Difficulty": "M",
        "freq": "2.45",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=kMzJy9es7Hc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0162-find-peak-element.py,",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "flipkart",
            "google",
            "microsoft",
            "tiktok",
            "uber"
        ]
    },
    "30": {
        "id": "30",
        "Title": "Nested List Weight Sum::Link-https://leetcode.com/problems/nested-list-weight-sum,",
        "Difficulty": "M",
        "freq": "2.40",
        "topics": [
            "breadth-first-search",
            "depth-first-search"
        ],
        "companies": [
            "amazon",
            "facebook",
            "linkedin"
        ]
    },
    "31": {
        "id": "31",
        "Title": "Merge k Sorted Lists::Link-https://leetcode.com/problems/merge-k-sorted-lists,",
        "Difficulty": "H",
        "freq": "2.34",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=q5a5OiGbT6Q,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0023-merge-k-sorted-lists.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "divide-and-conquer",
            "heap-priority-queue",
            "linked-list"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "tiktok"
        ]
    },
    "32": {
        "id": "32",
        "Title": "Add Two Numbers::Link-https://leetcode.com/problems/add-two-numbers,",
        "Difficulty": "M",
        "freq": "2.32",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "linked-list",
            "math",
            "recursion"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "cisco",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "nvidia",
            "oracle"
        ]
    },
    "33": {
        "id": "33",
        "Title": "Search in Rotated Sorted Array::Link-https://leetcode.com/problems/search-in-rotated-sorted-array,",
        "Difficulty": "M",
        "freq": "2.29",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=U8XENwh8Oy8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0033-search-in-rotated-sorted-array.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "linkedin",
            "microsoft",
            "nvidia",
            "tiktok",
            "zoho"
        ]
    },
    "34": {
        "id": "34",
        "Title": "Product of Array Except Self::Link-https://leetcode.com/problems/product-of-array-except-self,",
        "Difficulty": "M",
        "freq": "2.23",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=bNvIQI2wAjk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0238-product-of-array-except-self.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "intuit",
            "microsoft",
            "oracle",
            "tiktok",
            "uber",
            "yahoo"
        ]
    },
    "35": {
        "id": "35",
        "Title": "Koko Eating Bananas::Link-https://leetcode.com/problems/koko-eating-bananas,",
        "Difficulty": "M",
        "freq": "2.23",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=U2SozAs9RzA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0875-koko-eating-bananas.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "de-shaw",
            "doordash",
            "flipkart",
            "google",
            "infosys",
            "microsoft",
            "phonepe",
            "uber",
            "walmart-labs"
        ]
    },
    "36": {
        "id": "36",
        "Title": "Maximum Subarray::Link-https://leetcode.com/problems/maximum-subarray,",
        "Difficulty": "M",
        "freq": "2.18",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=5WZl3MMT0Eg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0053-maximum-subarray.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "divide-and-conquer",
            "dynamic-programming"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "linkedin",
            "microsoft",
            "oracle",
            "tcs",
            "tiktok",
            "turing",
            "uber",
            "zoho"
        ]
    },
    "37": {
        "id": "37",
        "Title": "Valid Palindrome::Link-https://leetcode.com/problems/valid-palindrome,",
        "Difficulty": "E",
        "freq": "2.13",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=jJXJ16kPFWg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0125-valid-palindrome.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "infosys",
            "microsoft",
            "yandex"
        ]
    },
    "38": {
        "id": "38",
        "Title": "Copy List with Random Pointer::Link-https://leetcode.com/problems/copy-list-with-random-pointer,",
        "Difficulty": "M",
        "freq": "2.13",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=5Y2EiZST97Y,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0138-copy-list-with-random-pointer.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "hash-table",
            "linked-list"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "39": {
        "id": "39",
        "Title": "Course Schedule II::Link-https://leetcode.com/problems/course-schedule-ii,",
        "Difficulty": "M",
        "freq": "2.13",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Akt3glAwyfY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0210-course-schedule-ii.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "topological-sort"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "google",
            "intuit",
            "microsoft",
            "oracle",
            "snowflake",
            "tiktok",
            "uber",
            "walmart-labs"
        ]
    },
    "40": {
        "id": "40",
        "Title": "Binary Tree Right Side View::Link-https://leetcode.com/problems/binary-tree-right-side-view,",
        "Difficulty": "M",
        "freq": "2.04",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "tiktok",
            "walmart-labs"
        ]
    },
    "41": {
        "id": "41",
        "Title": "Insert Delete GetRandom O(1)::Link-https://leetcode.com/problems/insert-delete-getrandom-o1,",
        "Difficulty": "M",
        "freq": "2.02",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "design",
            "hash-table",
            "math"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "linkedin",
            "microsoft",
            "nvidia",
            "oracle",
            "snapchat",
            "tiktok",
            "uber",
            "yandex"
        ]
    },
    "42": {
        "id": "42",
        "Title": "Container With Most Water::Link-https://leetcode.com/problems/container-with-most-water,",
        "Difficulty": "M",
        "freq": "1.99",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=UuiTKBwPgAo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0011-container-with-most-water.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "greedy",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "oracle",
            "tiktok",
            "yahoo"
        ]
    },
    "43": {
        "id": "43",
        "Title": "Diameter of Binary Tree::Link-https://leetcode.com/problems/diameter-of-binary-tree,",
        "Difficulty": "E",
        "freq": "1.96",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=bkxqA8Rfv04,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0543-diameter-of-binary-tree.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "linkedin",
            "microsoft"
        ]
    },
    "44": {
        "id": "44",
        "Title": "Reorganize String::Link-https://leetcode.com/problems/reorganize-string,",
        "Difficulty": "M",
        "freq": "1.93",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=2g_b1aYTHeg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0767-reorganize-string.py,",
        "topics": [
            "counting",
            "greedy",
            "hash-table",
            "heap-priority-queue",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "paypal",
            "pinterest",
            "roblox",
            "tiktok",
            "yahoo"
        ]
    },
    "45": {
        "id": "45",
        "Title": "Letter Combinations of a Phone Number::Link-https://leetcode.com/problems/letter-combinations-of-a-phone-number,",
        "Difficulty": "M",
        "freq": "1.88",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=0snEunUacZY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0017-letter-combinations-of-a-phone-number.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "backtracking",
            "hash-table",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "de-shaw",
            "facebook",
            "google",
            "ibm",
            "linkedin",
            "microsoft",
            "uber"
        ]
    },
    "46": {
        "id": "46",
        "Title": "Word Ladder::Link-https://leetcode.com/problems/word-ladder,",
        "Difficulty": "H",
        "freq": "1.88",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=h9iTnkgv05E,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0127-word-ladder.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "breadth-first-search",
            "hash-table",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "linkedin",
            "microsoft"
        ]
    },
    "47": {
        "id": "47",
        "Title": "Meeting Rooms II::Link-https://leetcode.com/problems/meeting-rooms-ii,",
        "Difficulty": "M",
        "freq": "1.88",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=FdzJmTCVyJU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0253-meeting-rooms-ii.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue",
            "prefix-sum",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "snapchat",
            "tiktok",
            "uber"
        ]
    },
    "48": {
        "id": "48",
        "Title": "Longest Consecutive Sequence::Link-https://leetcode.com/problems/longest-consecutive-sequence,",
        "Difficulty": "M",
        "freq": "1.85",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=P6RZZMu_maU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0128-longest-consecutive-sequence.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "hash-table",
            "union-find"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "bytedance",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "tcs"
        ]
    },
    "49": {
        "id": "49",
        "Title": "Next Permutation::Link-https://leetcode.com/problems/next-permutation,",
        "Difficulty": "M",
        "freq": "1.83",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "doordash",
            "facebook",
            "google",
            "infosys",
            "microsoft",
            "tiktok"
        ]
    },
    "50": {
        "id": "50",
        "Title": "Roman to Integer::Link-https://leetcode.com/problems/roman-to-integer,",
        "Difficulty": "E",
        "freq": "1.83",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=3jdxYj3DD98,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0013-roman-to-integer.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "hash-table",
            "math",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "ibm",
            "linkedin",
            "microsoft",
            "oracle",
            "yahoo"
        ]
    },
    "51": {
        "id": "51",
        "Title": "K Closest Points to Origin::Link-https://leetcode.com/problems/k-closest-points-to-origin,",
        "Difficulty": "M",
        "freq": "1.83",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=rI2EBUEMfTk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0973-k-closest-points-to-origin.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "divide-and-conquer",
            "geometry",
            "heap-priority-queue",
            "math",
            "sorting"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "52": {
        "id": "52",
        "Title": "House Robber::Link-https://leetcode.com/problems/house-robber,",
        "Difficulty": "M",
        "freq": "1.74",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=73r3KWiEvyk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0198-house-robber.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bytedance",
            "cisco",
            "databricks",
            "facebook",
            "goldman-sachs",
            "google",
            "infosys",
            "microsoft",
            "paypal",
            "phonepe",
            "tiktok",
            "uber",
            "walmart-labs"
        ]
    },
    "53": {
        "id": "53",
        "Title": "Range Sum of BST::Link-https://leetcode.com/problems/range-sum-of-bst,",
        "Difficulty": "E",
        "freq": "1.74",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "54": {
        "id": "54",
        "Title": "Logger Rate Limiter::Link-https://leetcode.com/problems/logger-rate-limiter,",
        "Difficulty": "E",
        "freq": "1.72",
        "topics": [
            "design",
            "hash-table"
        ],
        "companies": [
            "atlassian",
            "google",
            "intuit",
            "microsoft",
            "oracle"
        ]
    },
    "55": {
        "id": "55",
        "Title": "Dot Product of Two Sparse Vectors::Link-https://leetcode.com/problems/dot-product-of-two-sparse-vectors,",
        "Difficulty": "M",
        "freq": "1.72",
        "topics": [
            "array",
            "design",
            "hash-table",
            "two-pointers"
        ],
        "companies": [
            "facebook"
        ]
    },
    "56": {
        "id": "56",
        "Title": "Spiral Matrix::Link-https://leetcode.com/problems/spiral-matrix,",
        "Difficulty": "M",
        "freq": "1.69",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=BJnMZNwUk1M,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0054-spiral-matrix.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "matrix",
            "simulation"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "cisco",
            "facebook",
            "google",
            "microsoft",
            "zoho"
        ]
    },
    "57": {
        "id": "57",
        "Title": "Binary Tree Maximum Path Sum::Link-https://leetcode.com/problems/binary-tree-maximum-path-sum,",
        "Difficulty": "H",
        "freq": "1.69",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Hr5cWUld4vU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0124-binary-tree-maximum-path-sum.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-tree",
            "depth-first-search",
            "dynamic-programming",
            "tree"
        ],
        "companies": [
            "amazon",
            "apple",
            "doordash",
            "facebook",
            "google",
            "microsoft",
            "nvidia",
            "oracle",
            "tiktok"
        ]
    },
    "58": {
        "id": "58",
        "Title": "Course Schedule::Link-https://leetcode.com/problems/course-schedule,",
        "Difficulty": "M",
        "freq": "1.69",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=EgI5nU9etnU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0207-course-schedule.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "topological-sort"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "flipkart",
            "google",
            "microsoft",
            "oracle",
            "snapchat",
            "tiktok",
            "walmart-labs"
        ]
    },
    "59": {
        "id": "59",
        "Title": "Climbing Stairs::Link-https://leetcode.com/problems/climbing-stairs,",
        "Difficulty": "E",
        "freq": "1.69",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Y0lT9Fck7qI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0070-climbing-stairs.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "dynamic-programming",
            "math",
            "memoization"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "infosys",
            "jpmorgan",
            "microsoft",
            "zoho"
        ]
    },
    "60": {
        "id": "60",
        "Title": "Majority Element::Link-https://leetcode.com/problems/majority-element,",
        "Difficulty": "E",
        "freq": "1.66",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=7pnhv842keE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0169-majority-element.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "counting",
            "divide-and-conquer",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "de-shaw",
            "facebook",
            "google",
            "microsoft",
            "tcs"
        ]
    },
    "61": {
        "id": "61",
        "Title": "Palindrome Number::Link-https://leetcode.com/problems/palindrome-number,",
        "Difficulty": "E",
        "freq": "1.66",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=yubRKwixN-U,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0009-palindrome-number.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "math"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "infosys",
            "microsoft"
        ]
    },
    "62": {
        "id": "62",
        "Title": "Buildings With an Ocean View::Link-https://leetcode.com/problems/buildings-with-an-ocean-view,",
        "Difficulty": "M",
        "freq": "1.66",
        "topics": [
            "array",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "63": {
        "id": "63",
        "Title": "Find Median from Data Stream::Link-https://leetcode.com/problems/find-median-from-data-stream,",
        "Difficulty": "H",
        "freq": "1.63",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=itmhHWaHupI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0295-find-median-from-data-stream.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "design",
            "heap-priority-queue",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "citadel",
            "facebook",
            "google",
            "ixl",
            "microsoft",
            "nvidia",
            "oracle",
            "pinterest",
            "uber"
        ]
    },
    "64": {
        "id": "64",
        "Title": "Merge Strings Alternately::Link-https://leetcode.com/problems/merge-strings-alternately,",
        "Difficulty": "E",
        "freq": "1.63",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=LECWOvTo-Sc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1768-merge-strings-alternately.py,",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "65": {
        "id": "65",
        "Title": "Integer to English Words::Link-https://leetcode.com/problems/integer-to-english-words,",
        "Difficulty": "H",
        "freq": "1.63",
        "topics": [
            "math",
            "recursion",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft"
        ]
    },
    "66": {
        "id": "66",
        "Title": "Max Consecutive Ones III::Link-https://leetcode.com/problems/max-consecutive-ones-iii,",
        "Difficulty": "M",
        "freq": "1.61",
        "topics": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "linkedin",
            "microsoft",
            "oracle",
            "walmart-labs"
        ]
    },
    "67": {
        "id": "67",
        "Title": "Reverse Integer::Link-https://leetcode.com/problems/reverse-integer,",
        "Difficulty": "M",
        "freq": "1.55",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=HAgLH58IgJQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0007-reverse-integer.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "math"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "uber"
        ]
    },
    "68": {
        "id": "68",
        "Title": "Rotting Oranges::Link-https://leetcode.com/problems/rotting-oranges,",
        "Difficulty": "M",
        "freq": "1.53",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=y704fEOx0s0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0994-rotting-oranges.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "google",
            "intuit",
            "lyft",
            "microsoft",
            "oracle"
        ]
    },
    "69": {
        "id": "69",
        "Title": "Jump Game::Link-https://leetcode.com/problems/jump-game,",
        "Difficulty": "M",
        "freq": "1.50",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Yan0cv2cLy8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0055-jump-game.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "dynamic-programming",
            "greedy"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "walmart-labs"
        ]
    },
    "70": {
        "id": "70",
        "Title": "Sliding Window Maximum::Link-https://leetcode.com/problems/sliding-window-maximum,",
        "Difficulty": "H",
        "freq": "1.50",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=DfljaUwZsOk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0239-sliding-window-maximum.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "heap-priority-queue",
            "queue",
            "sliding-window"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "citadel",
            "coupang",
            "de-shaw",
            "goldman-sachs",
            "google",
            "microsoft",
            "oracle",
            "tiktok"
        ]
    },
    "71": {
        "id": "71",
        "Title": "Text Justification::Link-https://leetcode.com/problems/text-justification,",
        "Difficulty": "H",
        "freq": "1.50",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=TzMl4Z7pVh8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0068-text-justification.py,",
        "topics": [
            "array",
            "simulation",
            "string"
        ],
        "companies": [
            "airbnb",
            "databricks",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "roblox",
            "tiktok",
            "uber",
            "walmart-labs",
            "yandex",
            "zoho"
        ]
    },
    "72": {
        "id": "72",
        "Title": "Rotate Image::Link-https://leetcode.com/problems/rotate-image,",
        "Difficulty": "M",
        "freq": "1.50",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=fMSJSS7eO1w,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0048-rotate-image.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "math",
            "matrix"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "roblox",
            "tinkoff"
        ]
    },
    "73": {
        "id": "73",
        "Title": "Shortest Path in Binary Matrix::Link-https://leetcode.com/problems/shortest-path-in-binary-matrix,",
        "Difficulty": "M",
        "freq": "1.47",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=YnxUdAO7TAo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1091-shortest-path-in-binary-matrix.py,",
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "74": {
        "id": "74",
        "Title": "Generate Parentheses::Link-https://leetcode.com/problems/generate-parentheses,",
        "Difficulty": "M",
        "freq": "1.47",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=s9fokUqJ76A,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0022-generate-parentheses.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "backtracking",
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "servicenow",
            "zoho"
        ]
    },
    "75": {
        "id": "75",
        "Title": "Merge Two Sorted Lists::Link-https://leetcode.com/problems/merge-two-sorted-lists,",
        "Difficulty": "E",
        "freq": "1.44",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=XIdigk956u0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0021-merge-two-sorted-lists.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "linked-list",
            "recursion"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "76": {
        "id": "76",
        "Title": "Word Search::Link-https://leetcode.com/problems/word-search,",
        "Difficulty": "M",
        "freq": "1.42",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=pfiQ_PS1g8E,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0079-word-search.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "backtracking",
            "matrix",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "oracle",
            "paypal",
            "tiktok",
            "uber"
        ]
    },
    "77": {
        "id": "77",
        "Title": "Happy Number::Link-https://leetcode.com/problems/happy-number,",
        "Difficulty": "E",
        "freq": "1.39",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ljz85bxOYJ0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0202-happy-number.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "hash-table",
            "math",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "blackrock",
            "bloomberg",
            "google",
            "jpmorgan",
            "microsoft",
            "snowflake",
            "tcs"
        ]
    },
    "78": {
        "id": "78",
        "Title": "Asteroid Collision::Link-https://leetcode.com/problems/asteroid-collision,",
        "Difficulty": "M",
        "freq": "1.36",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=LN7KjRszjk4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0735-asteroid-collision.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "simulation",
            "stack"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "flipkart",
            "microsoft",
            "oracle",
            "servicenow",
            "tiktok"
        ]
    },
    "79": {
        "id": "79",
        "Title": "Time Based Key-Value Store::Link-https://leetcode.com/problems/time-based-key-value-store,",
        "Difficulty": "M",
        "freq": "1.36",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=fu2cD_6E8Hw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0981-time-based-key-value-store.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "binary-search",
            "design",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "databricks",
            "google",
            "lyft",
            "microsoft",
            "uber"
        ]
    },
    "80": {
        "id": "80",
        "Title": "Custom Sort String::Link-https://leetcode.com/problems/custom-sort-string,",
        "Difficulty": "M",
        "freq": "1.36",
        "topics": [
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "uber"
        ]
    },
    "81": {
        "id": "81",
        "Title": "Moving Average from Data Stream::Link-https://leetcode.com/problems/moving-average-from-data-stream,",
        "Difficulty": "E",
        "freq": "1.36",
        "topics": [
            "array",
            "design",
            "queue"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "82": {
        "id": "82",
        "Title": "Remove Duplicates from Sorted Array::Link-https://leetcode.com/problems/remove-duplicates-from-sorted-array,",
        "Difficulty": "E",
        "freq": "1.34",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=DEJAZBq0FDA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0026-remove-duplicates-from-sorted-array.py,",
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "83": {
        "id": "83",
        "Title": "Minimum Adjacent Swaps to Make a Valid Array::Link-https://leetcode.com/problems/minimum-adjacent-swaps-to-make-a-valid-array,",
        "Difficulty": "M",
        "freq": "1.34",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "amazon"
        ]
    },
    "84": {
        "id": "84",
        "Title": "String Compression::Link-https://leetcode.com/problems/string-compression,",
        "Difficulty": "M",
        "freq": "1.28",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "goldman-sachs",
            "microsoft",
            "oracle",
            "tiktok",
            "yandex"
        ]
    },
    "85": {
        "id": "85",
        "Title": "Making A Large Island::Link-https://leetcode.com/problems/making-a-large-island,",
        "Difficulty": "H",
        "freq": "1.28",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix",
            "union-find"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "86": {
        "id": "86",
        "Title": "Word Search II::Link-https://leetcode.com/problems/word-search-ii,",
        "Difficulty": "H",
        "freq": "1.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=asbcE9mZz_U,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0212-word-search-ii.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "backtracking",
            "matrix",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "cisco",
            "facebook",
            "google",
            "microsoft",
            "paypal",
            "uber"
        ]
    },
    "87": {
        "id": "87",
        "Title": "Find K Closest Elements::Link-https://leetcode.com/problems/find-k-closest-elements,",
        "Difficulty": "M",
        "freq": "1.23",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=o-YDQzHoaKM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0658-find-k-closest-elements.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search",
            "heap-priority-queue",
            "sliding-window",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "doordash",
            "facebook",
            "google",
            "microsoft",
            "tiktok",
            "yandex"
        ]
    },
    "88": {
        "id": "88",
        "Title": "First Missing Positive::Link-https://leetcode.com/problems/first-missing-positive,",
        "Difficulty": "H",
        "freq": "1.23",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=8g78yfzMlao,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0041-first-missing-positive.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "hash-table"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "89": {
        "id": "89",
        "Title": "Minimum Window Substring::Link-https://leetcode.com/problems/minimum-window-substring,",
        "Difficulty": "H",
        "freq": "1.23",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=jSto0O4AJbM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0076-minimum-window-substring.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "airbnb",
            "facebook",
            "google",
            "lyft",
            "microsoft",
            "tiktok",
            "yandex",
            "zopsmart"
        ]
    },
    "90": {
        "id": "90",
        "Title": "Isomorphic Strings::Link-https://leetcode.com/problems/isomorphic-strings,",
        "Difficulty": "E",
        "freq": "1.20",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=7yF-U1hLEqQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0205-isomorphic-strings.py,",
        "topics": [
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "google",
            "microsoft",
            "oracle",
            "yandex"
        ]
    },
    "91": {
        "id": "91",
        "Title": "Subsets::Link-https://leetcode.com/problems/subsets,",
        "Difficulty": "M",
        "freq": "1.17",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Vn2v6ajA7U0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0078-subsets.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "tcs",
            "tiktok"
        ]
    },
    "92": {
        "id": "92",
        "Title": "Reverse Linked List::Link-https://leetcode.com/problems/reverse-linked-list,",
        "Difficulty": "E",
        "freq": "1.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=G0_I-ZF0S38,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0206-reverse-linked-list.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "linked-list",
            "recursion"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "bytedance",
            "facebook",
            "google",
            "microsoft",
            "tcs",
            "tiktok"
        ]
    },
    "93": {
        "id": "93",
        "Title": "Find First and Last Position of Element in Sorted Array::Link-https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array,",
        "Difficulty": "M",
        "freq": "1.14",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "servicenow"
        ]
    },
    "94": {
        "id": "94",
        "Title": "Regular Expression Matching::Link-https://leetcode.com/problems/regular-expression-matching,",
        "Difficulty": "H",
        "freq": "1.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=HAA8mgxlov8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0010-regular-expression-matching.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "dynamic-programming",
            "recursion",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "coupang",
            "facebook",
            "google",
            "microsoft",
            "snowflake",
            "zoho"
        ]
    },
    "95": {
        "id": "95",
        "Title": "Combination Sum::Link-https://leetcode.com/problems/combination-sum,",
        "Difficulty": "M",
        "freq": "1.12",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=GBKI9VSKdGg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0039-combination-sum.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "backtracking"
        ],
        "companies": [
            "airbnb",
            "amazon",
            "bytedance",
            "google",
            "microsoft",
            "oracle",
            "tiktok",
            "walmart-labs",
            "zoho"
        ]
    },
    "96": {
        "id": "96",
        "Title": "Search Suggestions System::Link-https://leetcode.com/problems/search-suggestions-system,",
        "Difficulty": "M",
        "freq": "1.09",
        "topics": [
            "array",
            "binary-search",
            "heap-priority-queue",
            "sorting",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "doordash",
            "microsoft",
            "salesforce"
        ]
    },
    "97": {
        "id": "97",
        "Title": "Decode String::Link-https://leetcode.com/problems/decode-string,",
        "Difficulty": "M",
        "freq": "1.06",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=qB0zZpBJlh8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0394-decode-string.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "recursion",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "tiktok",
            "zoho"
        ]
    },
    "98": {
        "id": "98",
        "Title": "Best Time to Buy and Sell Stock II::Link-https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii,",
        "Difficulty": "M",
        "freq": "1.06",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "topics": [
            "array",
            "dynamic-programming",
            "greedy"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "tiktok",
            "walmart-labs",
            "zoho"
        ]
    },
    "99": {
        "id": "99",
        "Title": "Valid Anagram::Link-https://leetcode.com/problems/valid-anagram,",
        "Difficulty": "E",
        "freq": "1.06",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=9UtInBqnCgA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0242-valid-anagram.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "blackrock",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "tcs"
        ]
    },
    "100": {
        "id": "100",
        "Title": "Sort Colors::Link-https://leetcode.com/problems/sort-colors,",
        "Difficulty": "M",
        "freq": "1.04",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=4xbWSRZHqac,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0075-sort-colors.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "phonepe",
            "tcs",
            "tiktok",
            "zoho"
        ]
    },
    "101": {
        "id": "101",
        "Title": "Unique Paths::Link-https://leetcode.com/problems/unique-paths,",
        "Difficulty": "M",
        "freq": "1.04",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=IlEsdxuD4lY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0062-unique-paths.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "combinatorics",
            "dynamic-programming",
            "math"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "coupang",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "tcs"
        ]
    },
    "102": {
        "id": "102",
        "Title": "Remove Nth Node From End of List::Link-https://leetcode.com/problems/remove-nth-node-from-end-of-list,",
        "Difficulty": "M",
        "freq": "1.04",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=XVuQxVej6y8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0019-remove-nth-node-from-end-of-list.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "103": {
        "id": "103",
        "Title": "Maximal Rectangle::Link-https://leetcode.com/problems/maximal-rectangle,",
        "Difficulty": "H",
        "freq": "1.01",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft",
            "tiktok"
        ]
    },
    "104": {
        "id": "104",
        "Title": "Maximum Product Subarray::Link-https://leetcode.com/problems/maximum-product-subarray,",
        "Difficulty": "M",
        "freq": "1.01",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=lXVy6YWFcRM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0152-maximum-product-subarray.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "linkedin",
            "microsoft"
        ]
    },
    "105": {
        "id": "105",
        "Title": "Rotate Array::Link-https://leetcode.com/problems/rotate-array,",
        "Difficulty": "M",
        "freq": "1.01",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=BHr381Guz3Y,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0189-rotate-array.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "math",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "infosys",
            "microsoft",
            "tcs"
        ]
    },
    "106": {
        "id": "106",
        "Title": "Longest Increasing Subsequence::Link-https://leetcode.com/problems/longest-increasing-subsequence,",
        "Difficulty": "M",
        "freq": "0.98",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=cjWnW0hdF1Y,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0300-longest-increasing-subsequence.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming"
        ],
        "companies": [
            "amazon",
            "goldman-sachs",
            "google",
            "microsoft",
            "oracle",
            "tiktok",
            "uber"
        ]
    },
    "107": {
        "id": "107",
        "Title": "Remove Element::Link-https://leetcode.com/problems/remove-element,",
        "Difficulty": "E",
        "freq": "0.98",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Pcd1ii9P9ZI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0027-remove-element.py,",
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "108": {
        "id": "108",
        "Title": "Coin Change::Link-https://leetcode.com/problems/coin-change,",
        "Difficulty": "M",
        "freq": "0.98",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=H9bfqozjoqs,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0322-coin-change.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "dynamic-programming"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "datadog",
            "google",
            "microsoft",
            "tiktok"
        ]
    },
    "109": {
        "id": "109",
        "Title": "Word Break::Link-https://leetcode.com/problems/word-break,",
        "Difficulty": "M",
        "freq": "0.98",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Sx9NNgInc3A,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0139-word-break.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "dynamic-programming",
            "hash-table",
            "memoization",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "salesforce",
            "walmart-labs"
        ]
    },
    "110": {
        "id": "110",
        "Title": "Sqrt(x)::Link-https://leetcode.com/problems/sqrtx,",
        "Difficulty": "E",
        "freq": "0.95",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=zdMhGxRWutQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0069-sqrtx.py,",
        "topics": [
            "binary-search",
            "math"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "tiktok",
            "uber"
        ]
    },
    "111": {
        "id": "111",
        "Title": "Evaluate Division::Link-https://leetcode.com/problems/evaluate-division,",
        "Difficulty": "M",
        "freq": "0.95",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "shortest-path",
            "string",
            "union-find"
        ],
        "companies": [
            "amazon",
            "citadel",
            "facebook",
            "google",
            "snowflake",
            "uber"
        ]
    },
    "112": {
        "id": "112",
        "Title": "Word Break II::Link-https://leetcode.com/problems/word-break-ii,",
        "Difficulty": "H",
        "freq": "0.95",
        "topics": [
            "array",
            "backtracking",
            "dynamic-programming",
            "hash-table",
            "memoization",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "113": {
        "id": "113",
        "Title": "Largest Rectangle in Histogram::Link-https://leetcode.com/problems/largest-rectangle-in-histogram,",
        "Difficulty": "H",
        "freq": "0.95",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=zx5Sw9130L0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0084-largest-rectangle-in-histogram.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "de-shaw",
            "facebook",
            "google",
            "microsoft",
            "zoho"
        ]
    },
    "114": {
        "id": "114",
        "Title": "Walls and Gates::Link-https://leetcode.com/problems/walls-and-gates,",
        "Difficulty": "M",
        "freq": "0.95",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=e69C6xhiSQE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0286-walls-and-gates.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "tiktok",
            "uber"
        ]
    },
    "115": {
        "id": "115",
        "Title": "Interval List Intersections::Link-https://leetcode.com/problems/interval-list-intersections,",
        "Difficulty": "M",
        "freq": "0.95",
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "facebook",
            "uber",
            "yandex"
        ]
    },
    "116": {
        "id": "116",
        "Title": "String to Integer (atoi)::Link-https://leetcode.com/problems/string-to-integer-atoi,",
        "Difficulty": "M",
        "freq": "0.93",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "117": {
        "id": "117",
        "Title": "Minimum Add to Make Parentheses Valid::Link-https://leetcode.com/problems/minimum-add-to-make-parentheses-valid,",
        "Difficulty": "M",
        "freq": "0.93",
        "topics": [
            "greedy",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "118": {
        "id": "118",
        "Title": "Convert Binary Search Tree to Sorted Doubly Linked List::Link-https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list,",
        "Difficulty": "M",
        "freq": "0.93",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "linked-list",
            "stack",
            "tree"
        ],
        "companies": [
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "119": {
        "id": "119",
        "Title": "Jump Game II::Link-https://leetcode.com/problems/jump-game-ii,",
        "Difficulty": "M",
        "freq": "0.93",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=dJ7sWiOoK7g,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0045-jump-game-ii.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "dynamic-programming",
            "greedy"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "phonepe"
        ]
    },
    "120": {
        "id": "120",
        "Title": "Reverse Nodes in k-Group::Link-https://leetcode.com/problems/reverse-nodes-in-k-group,",
        "Difficulty": "H",
        "freq": "0.93",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=1UOPsfP85V4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0025-reverse-nodes-in-k-group.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "linked-list",
            "recursion"
        ],
        "companies": [
            "amazon",
            "arista-networks",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "snowflake"
        ]
    },
    "121": {
        "id": "121",
        "Title": "Count and Say::Link-https://leetcode.com/problems/count-and-say,",
        "Difficulty": "M",
        "freq": "0.87",
        "topics": [
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft",
            "pinterest",
            "zoho"
        ]
    },
    "122": {
        "id": "122",
        "Title": "Longest Repeating Character Replacement::Link-https://leetcode.com/problems/longest-repeating-character-replacement,",
        "Difficulty": "M",
        "freq": "0.87",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=gqXU1UyA8pk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0424-longest-repeating-character-replacement.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft",
            "uber",
            "yahoo"
        ]
    },
    "123": {
        "id": "123",
        "Title": "Set Matrix Zeroes::Link-https://leetcode.com/problems/set-matrix-zeroes,",
        "Difficulty": "M",
        "freq": "0.87",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=T41rL0L3Pnw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0073-set-matrix-zeroes.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "hash-table",
            "matrix"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "124": {
        "id": "124",
        "Title": "Clone Graph::Link-https://leetcode.com/problems/clone-graph,",
        "Difficulty": "M",
        "freq": "0.87",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=mQeF6bN8hMk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0133-clone-graph.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "hash-table"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "125": {
        "id": "125",
        "Title": "Edit Distance::Link-https://leetcode.com/problems/edit-distance,",
        "Difficulty": "M",
        "freq": "0.84",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=XYi2-LPrwm4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0072-edit-distance.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "flipkart",
            "google",
            "infosys",
            "linkedin",
            "microsoft",
            "snapchat",
            "tiktok",
            "zoho"
        ]
    },
    "126": {
        "id": "126",
        "Title": "Insert Interval::Link-https://leetcode.com/problems/insert-interval,",
        "Difficulty": "M",
        "freq": "0.84",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=A8NUOmlwOlM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0057-insert-interval.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "127": {
        "id": "127",
        "Title": "Pascal's Triangle::Link-https://leetcode.com/problems/pascals-triangle,",
        "Difficulty": "E",
        "freq": "0.84",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=nPVEaB3AjUM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0118-pascals-triangle.py,",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "adobe",
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "128": {
        "id": "128",
        "Title": "Design Hit Counter::Link-https://leetcode.com/problems/design-hit-counter,",
        "Difficulty": "M",
        "freq": "0.84",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search",
            "design",
            "queue"
        ],
        "companies": [
            "apple",
            "cloudflare",
            "databricks",
            "microsoft",
            "roblox",
            "snowflake",
            "uber",
            "yandex"
        ]
    },
    "129": {
        "id": "129",
        "Title": "Maximum Profit in Job Scheduling::Link-https://leetcode.com/problems/maximum-profit-in-job-scheduling,",
        "Difficulty": "H",
        "freq": "0.82",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "companies": [
            "airbnb",
            "amazon",
            "doordash",
            "pinterest"
        ]
    },
    "130": {
        "id": "130",
        "Title": "Sum Root to Leaf Numbers::Link-https://leetcode.com/problems/sum-root-to-leaf-numbers,",
        "Difficulty": "M",
        "freq": "0.82",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "131": {
        "id": "131",
        "Title": "Valid Sudoku::Link-https://leetcode.com/problems/valid-sudoku,",
        "Difficulty": "M",
        "freq": "0.82",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=TjFXEUCMqI8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0036-valid-sudoku.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "hash-table",
            "matrix"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "microsoft",
            "walmart-labs",
            "zoho"
        ]
    },
    "132": {
        "id": "132",
        "Title": "LFU Cache::Link-https://leetcode.com/problems/lfu-cache,",
        "Difficulty": "H",
        "freq": "0.82",
        "topics": [
            "design",
            "hash-table",
            "linked-list"
        ],
        "companies": [
            "amazon",
            "coupang",
            "facebook",
            "google",
            "microsoft",
            "salesforce"
        ]
    },
    "133": {
        "id": "133",
        "Title": "Task Scheduler::Link-https://leetcode.com/problems/task-scheduler,",
        "Difficulty": "M",
        "freq": "0.79",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=s8p8ukTyA2I,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0621-task-scheduler.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "counting",
            "greedy",
            "hash-table",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon",
            "apple",
            "doordash",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "134": {
        "id": "134",
        "Title": "Daily Temperatures::Link-https://leetcode.com/problems/daily-temperatures,",
        "Difficulty": "M",
        "freq": "0.79",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=cTBiBSnjO3c,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0739-daily-temperatures.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft",
            "salesforce",
            "tiktok"
        ]
    },
    "135": {
        "id": "135",
        "Title": "Plus One::Link-https://leetcode.com/problems/plus-one,",
        "Difficulty": "E",
        "freq": "0.79",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=jIaA8boiG1s,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0066-plus-one.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "136": {
        "id": "136",
        "Title": "Contains Duplicate II::Link-https://leetcode.com/problems/contains-duplicate-ii,",
        "Difficulty": "E",
        "freq": "0.79",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ypn0aZ0nrL4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0219-contains-duplicate-ii.py,",
        "topics": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "137": {
        "id": "137",
        "Title": "Serialize and Deserialize Binary Tree::Link-https://leetcode.com/problems/serialize-and-deserialize-binary-tree,",
        "Difficulty": "H",
        "freq": "0.79",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=u4JAi2JJhI8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0297-serialize-and-deserialize-binary-tree.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "design",
            "string",
            "tree"
        ],
        "companies": [
            "adobe",
            "amazon",
            "doordash",
            "facebook",
            "linkedin",
            "microsoft"
        ]
    },
    "138": {
        "id": "138",
        "Title": "Insert into a Sorted Circular Linked List::Link-https://leetcode.com/problems/insert-into-a-sorted-circular-linked-list,",
        "Difficulty": "M",
        "freq": "0.79",
        "topics": [
            "linked-list"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "139": {
        "id": "139",
        "Title": "Integer to Roman::Link-https://leetcode.com/problems/integer-to-roman,",
        "Difficulty": "M",
        "freq": "0.79",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ohBNdSJyLh8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0012-integer-to-roman.py,",
        "topics": [
            "hash-table",
            "math",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "linkedin",
            "microsoft",
            "oracle",
            "salesforce",
            "tiktok"
        ]
    },
    "140": {
        "id": "140",
        "Title": "Analyze User Website Visit Pattern::Link-https://leetcode.com/problems/analyze-user-website-visit-pattern,",
        "Difficulty": "M",
        "freq": "0.79",
        "topics": [
            "array",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "141": {
        "id": "141",
        "Title": "Zigzag Conversion::Link-https://leetcode.com/problems/zigzag-conversion,",
        "Difficulty": "M",
        "freq": "0.76",
        "topics": [
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "oracle",
            "paypal",
            "servicenow",
            "zoho",
            "zopsmart"
        ]
    },
    "142": {
        "id": "142",
        "Title": "Continuous Subarray Sum::Link-https://leetcode.com/problems/continuous-subarray-sum,",
        "Difficulty": "M",
        "freq": "0.76",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=OKcrLfR-8mE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0523-continuous-subarray-sum.py,",
        "topics": [
            "array",
            "hash-table",
            "math",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "yandex"
        ]
    },
    "143": {
        "id": "143",
        "Title": "Contains Duplicate::Link-https://leetcode.com/problems/contains-duplicate,",
        "Difficulty": "E",
        "freq": "0.76",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=3OamzN90kPg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0217-contains-duplicate.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "144": {
        "id": "144",
        "Title": "Max Stack::Link-https://leetcode.com/problems/max-stack,",
        "Difficulty": "H",
        "freq": "0.76",
        "topics": [
            "design",
            "linked-list",
            "ordered-set",
            "stack"
        ],
        "companies": [
            "linkedin",
            "lyft",
            "walmart-labs"
        ]
    },
    "145": {
        "id": "145",
        "Title": "Gas Station::Link-https://leetcode.com/problems/gas-station,",
        "Difficulty": "M",
        "freq": "0.74",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=lJwbPZGo05A,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0134-gas-station.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "cisco",
            "google",
            "microsoft"
        ]
    },
    "146": {
        "id": "146",
        "Title": "Basic Calculator::Link-https://leetcode.com/problems/basic-calculator,",
        "Difficulty": "H",
        "freq": "0.74",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "math",
            "recursion",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft",
            "snowflake",
            "tiktok",
            "uber"
        ]
    },
    "147": {
        "id": "147",
        "Title": "Palindromic Substrings::Link-https://leetcode.com/problems/palindromic-substrings,",
        "Difficulty": "M",
        "freq": "0.74",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=4RACzI5-du8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0647-palindromic-substrings.py,",
        "others": [
            "neet150",
            "blind75"
        ],
        "topics": [
            "dynamic-programming",
            "string",
            "two-pointers"
        ],
        "companies": [
            "arista-networks",
            "citadel",
            "facebook",
            "goldman-sachs",
            "google"
        ]
    },
    "148": {
        "id": "148",
        "Title": "Vertical Order Traversal of a Binary Tree::Link-https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree,",
        "Difficulty": "H",
        "freq": "0.74",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "sorting",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "149": {
        "id": "149",
        "Title": "Restore IP Addresses::Link-https://leetcode.com/problems/restore-ip-addresses,",
        "Difficulty": "M",
        "freq": "0.74",
        "topics": [
            "backtracking",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "tiktok",
            "zoho"
        ]
    },
    "150": {
        "id": "150",
        "Title": "Accounts Merge::Link-https://leetcode.com/problems/accounts-merge,",
        "Difficulty": "M",
        "freq": "0.74",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=6st4IxEF-90,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0721-accounts-merge.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "sorting",
            "string",
            "union-find"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "roblox",
            "snapchat"
        ]
    },
    "151": {
        "id": "151",
        "Title": "Add Strings::Link-https://leetcode.com/problems/add-strings,",
        "Difficulty": "E",
        "freq": "0.74",
        "topics": [
            "math",
            "simulation",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "152": {
        "id": "152",
        "Title": "Swap Nodes in Pairs::Link-https://leetcode.com/problems/swap-nodes-in-pairs,",
        "Difficulty": "M",
        "freq": "0.71",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=o811TZLAWOo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0024-swap-nodes-in-pairs.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "linked-list",
            "recursion"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "snowflake"
        ]
    },
    "153": {
        "id": "153",
        "Title": "Find the Duplicate Number::Link-https://leetcode.com/problems/find-the-duplicate-number,",
        "Difficulty": "M",
        "freq": "0.71",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=wjYnzkAhcNk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0287-find-the-duplicate-number.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search",
            "bit-manipulation",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "ibm",
            "microsoft"
        ]
    },
    "154": {
        "id": "154",
        "Title": "Minimum Path Sum::Link-https://leetcode.com/problems/minimum-path-sum,",
        "Difficulty": "M",
        "freq": "0.71",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=pGMsrvt0fpk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0064-minimum-path-sum.py,",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "amazon",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft"
        ]
    },
    "155": {
        "id": "155",
        "Title": "Remove K Digits::Link-https://leetcode.com/problems/remove-k-digits,",
        "Difficulty": "M",
        "freq": "0.68",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=cFabMOnJaq0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0402-remove-k-digits.py,",
        "topics": [
            "greedy",
            "monotonic-stack",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "microsoft",
            "phonepe"
        ]
    },
    "156": {
        "id": "156",
        "Title": "Permutations::Link-https://leetcode.com/problems/permutations,",
        "Difficulty": "M",
        "freq": "0.68",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=s7AvT7cGdSo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0046-permutations.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "backtracking"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google",
            "servicenow",
            "tiktok"
        ]
    },
    "157": {
        "id": "157",
        "Title": "Design Tic-Tac-Toe::Link-https://leetcode.com/problems/design-tic-tac-toe,",
        "Difficulty": "M",
        "freq": "0.68",
        "topics": [
            "array",
            "design",
            "hash-table",
            "matrix",
            "simulation"
        ],
        "companies": [
            "airbnb",
            "amazon",
            "databricks",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "158": {
        "id": "158",
        "Title": "Single Number::Link-https://leetcode.com/problems/single-number,",
        "Difficulty": "E",
        "freq": "0.68",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=qMPX1AOa83k,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0136-single-number.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "bit-manipulation"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "159": {
        "id": "159",
        "Title": "Min Stack::Link-https://leetcode.com/problems/min-stack,",
        "Difficulty": "M",
        "freq": "0.68",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=qkLl7nAwDPo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0155-min-stack.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "design",
            "stack"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft",
            "yandex"
        ]
    },
    "160": {
        "id": "160",
        "Title": "Combination Sum II::Link-https://leetcode.com/problems/combination-sum-ii,",
        "Difficulty": "M",
        "freq": "0.65",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=rSA3t6BDDwg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0040-combination-sum-ii.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "backtracking"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "tiktok"
        ]
    },
    "161": {
        "id": "161",
        "Title": "Split Array Largest Sum::Link-https://leetcode.com/problems/split-array-largest-sum,",
        "Difficulty": "H",
        "freq": "0.65",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=YUF3_eBdzsk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0410-split-array-largest-sum.py,",
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming",
            "greedy",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "salesforce"
        ]
    },
    "162": {
        "id": "162",
        "Title": "Find All Anagrams in a String::Link-https://leetcode.com/problems/find-all-anagrams-in-a-string,",
        "Difficulty": "M",
        "freq": "0.65",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=G8xtZy0fDKg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0438-find-all-anagrams-in-a-string.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "snowflake",
            "yandex"
        ]
    },
    "163": {
        "id": "163",
        "Title": "Diagonal Traverse::Link-https://leetcode.com/problems/diagonal-traverse,",
        "Difficulty": "M",
        "freq": "0.65",
        "topics": [
            "array",
            "matrix",
            "simulation"
        ],
        "companies": [
            "amazon",
            "facebook",
            "zoho"
        ]
    },
    "164": {
        "id": "164",
        "Title": "Palindrome Partitioning::Link-https://leetcode.com/problems/palindrome-partitioning,",
        "Difficulty": "M",
        "freq": "0.65",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=3jvWodd7ht0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0131-palindrome-partitioning.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "backtracking",
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "165": {
        "id": "165",
        "Title": "All O`one Data Structure::Link-https://leetcode.com/problems/all-oone-data-structure,",
        "Difficulty": "H",
        "freq": "0.65",
        "topics": [
            "design",
            "hash-table",
            "linked-list"
        ],
        "companies": [
            "atlassian",
            "linkedin"
        ]
    },
    "166": {
        "id": "166",
        "Title": "Maximum Depth of Binary Tree::Link-https://leetcode.com/problems/maximum-depth-of-binary-tree,",
        "Difficulty": "E",
        "freq": "0.63",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "linkedin",
            "yahoo"
        ]
    },
    "167": {
        "id": "167",
        "Title": "Binary Tree Zigzag Level Order Traversal::Link-https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal,",
        "Difficulty": "M",
        "freq": "0.63",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=igbboQbiwqw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0103-binary-tree-zigzag-level-order-traversal.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "tree"
        ],
        "companies": [
            "adobe",
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "168": {
        "id": "168",
        "Title": "Squares of a Sorted Array::Link-https://leetcode.com/problems/squares-of-a-sorted-array,",
        "Difficulty": "E",
        "freq": "0.63",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=FPCZsG_AkUg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0977-squares-of-a-sorted-array.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "uber",
            "yahoo",
            "yandex"
        ]
    },
    "169": {
        "id": "169",
        "Title": "Expression Add Operators::Link-https://leetcode.com/problems/expression-add-operators,",
        "Difficulty": "H",
        "freq": "0.63",
        "topics": [
            "backtracking",
            "math",
            "string"
        ],
        "companies": [
            "facebook",
            "google",
            "pinterest",
            "tiktok"
        ]
    },
    "170": {
        "id": "170",
        "Title": "Decode Ways::Link-https://leetcode.com/problems/decode-ways,",
        "Difficulty": "M",
        "freq": "0.63",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=6aEyTjOwlJU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0091-decode-ways.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "goldman-sachs",
            "google",
            "microsoft",
            "tiktok",
            "zoho"
        ]
    },
    "171": {
        "id": "171",
        "Title": "Contiguous Array::Link-https://leetcode.com/problems/contiguous-array,",
        "Difficulty": "M",
        "freq": "0.63",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "172": {
        "id": "172",
        "Title": "Stickers to Spell Word::Link-https://leetcode.com/problems/stickers-to-spell-word,",
        "Difficulty": "H",
        "freq": "0.63",
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation",
            "bitmask",
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "tiktok"
        ]
    },
    "173": {
        "id": "173",
        "Title": "Implement Trie (Prefix Tree)::Link-https://leetcode.com/problems/implement-trie-prefix-tree,",
        "Difficulty": "M",
        "freq": "0.60",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=oobqoCJlHA0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0208-implement-trie-prefix-tree.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "design",
            "hash-table",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "apple",
            "arista-networks",
            "doordash",
            "google",
            "microsoft",
            "nvidia"
        ]
    },
    "174": {
        "id": "174",
        "Title": "Search a 2D Matrix::Link-https://leetcode.com/problems/search-a-2d-matrix,",
        "Difficulty": "M",
        "freq": "0.60",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Ber2pi2C0j0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0074-search-a-2d-matrix.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "oracle"
        ]
    },
    "175": {
        "id": "175",
        "Title": "Palindrome Linked List::Link-https://leetcode.com/problems/palindrome-linked-list,",
        "Difficulty": "E",
        "freq": "0.60",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=yOzXms1J6Nk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0234-palindrome-linked-list.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "linked-list",
            "recursion",
            "stack",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "microsoft"
        ]
    },
    "176": {
        "id": "176",
        "Title": "Range Module::Link-https://leetcode.com/problems/range-module,",
        "Difficulty": "H",
        "freq": "0.60",
        "topics": [
            "design",
            "ordered-set",
            "segment-tree"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "177": {
        "id": "177",
        "Title": "Design In-Memory File System::Link-https://leetcode.com/problems/design-in-memory-file-system,",
        "Difficulty": "H",
        "freq": "0.60",
        "others": [
            "grind169"
        ],
        "topics": [
            "design",
            "hash-table",
            "sorting",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "coupang",
            "google",
            "snowflake",
            "tiktok"
        ]
    },
    "178": {
        "id": "178",
        "Title": "Permutation in String::Link-https://leetcode.com/problems/permutation-in-string,",
        "Difficulty": "M",
        "freq": "0.60",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=UbyhOgBN834,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0567-permutation-in-string.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "hash-table",
            "sliding-window",
            "string",
            "two-pointers"
        ],
        "companies": [
            "goldman-sachs",
            "google",
            "microsoft",
            "yandex"
        ]
    },
    "179": {
        "id": "179",
        "Title": "Shortest Path in a Grid with Obstacles Elimination::Link-https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination,",
        "Difficulty": "H",
        "freq": "0.60",
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "facebook",
            "google",
            "pinterest",
            "tiktok"
        ]
    },
    "180": {
        "id": "180",
        "Title": "First Unique Character in a String::Link-https://leetcode.com/problems/first-unique-character-in-a-string,",
        "Difficulty": "E",
        "freq": "0.57",
        "topics": [
            "counting",
            "hash-table",
            "queue",
            "string"
        ],
        "companies": [
            "amazon",
            "goldman-sachs",
            "microsoft",
            "yandex"
        ]
    },
    "181": {
        "id": "181",
        "Title": "Next Greater Element II::Link-https://leetcode.com/problems/next-greater-element-ii,",
        "Difficulty": "M",
        "freq": "0.57",
        "topics": [
            "array",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "apple",
            "microsoft",
            "uber"
        ]
    },
    "182": {
        "id": "182",
        "Title": "Unique Binary Search Trees::Link-https://leetcode.com/problems/unique-binary-search-trees,",
        "Difficulty": "M",
        "freq": "0.57",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "dynamic-programming",
            "math",
            "tree"
        ],
        "companies": [
            "amazon",
            "microsoft",
            "oracle",
            "tiktok",
            "zoho"
        ]
    },
    "183": {
        "id": "183",
        "Title": "Reorder List::Link-https://leetcode.com/problems/reorder-list,",
        "Difficulty": "M",
        "freq": "0.57",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=S5bfdUTrKLM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0143-reorder-list.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "linked-list",
            "recursion",
            "stack",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "arista-networks",
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "184": {
        "id": "184",
        "Title": "Missing Number::Link-https://leetcode.com/problems/missing-number,",
        "Difficulty": "E",
        "freq": "0.57",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "binary-search",
            "bit-manipulation",
            "hash-table",
            "math",
            "sorting"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "nvidia",
            "tcs"
        ]
    },
    "185": {
        "id": "185",
        "Title": "Intersection of Two Arrays::Link-https://leetcode.com/problems/intersection-of-two-arrays,",
        "Difficulty": "E",
        "freq": "0.57",
        "topics": [
            "array",
            "binary-search",
            "hash-table",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "microsoft",
            "nvidia",
            "yandex"
        ]
    },
    "186": {
        "id": "186",
        "Title": "Kth Missing Positive Number::Link-https://leetcode.com/problems/kth-missing-positive-number,",
        "Difficulty": "E",
        "freq": "0.57",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "187": {
        "id": "187",
        "Title": "Minimum Area Rectangle::Link-https://leetcode.com/problems/minimum-area-rectangle,",
        "Difficulty": "M",
        "freq": "0.57",
        "topics": [
            "array",
            "geometry",
            "hash-table",
            "math",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "188": {
        "id": "188",
        "Title": "Regions Cut By Slashes::Link-https://leetcode.com/problems/regions-cut-by-slashes,",
        "Difficulty": "M",
        "freq": "0.57",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "matrix",
            "union-find"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "189": {
        "id": "189",
        "Title": "Length of the Longest Valid Substring::Link-https://leetcode.com/problems/length-of-the-longest-valid-substring,",
        "Difficulty": "H",
        "freq": "0.57",
        "topics": [
            "array",
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "190": {
        "id": "190",
        "Title": "Evaluate Reverse Polish Notation::Link-https://leetcode.com/problems/evaluate-reverse-polish-notation,",
        "Difficulty": "M",
        "freq": "0.57",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=iu0082c4HDE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0150-evaluate-reverse-polish-notation.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "math",
            "stack"
        ],
        "companies": [
            "amazon",
            "citadel",
            "facebook",
            "google"
        ]
    },
    "191": {
        "id": "191",
        "Title": "Reverse Words in a String::Link-https://leetcode.com/problems/reverse-words-in-a-string,",
        "Difficulty": "M",
        "freq": "0.57",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "accenture",
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "microsoft",
            "tcs"
        ]
    },
    "192": {
        "id": "192",
        "Title": "Find Minimum in Rotated Sorted Array::Link-https://leetcode.com/problems/find-minimum-in-rotated-sorted-array,",
        "Difficulty": "M",
        "freq": "0.57",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=nIVW4P8b1VA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0153-find-minimum-in-rotated-sorted-array.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "facebook",
            "goldman-sachs",
            "google",
            "microsoft"
        ]
    },
    "193": {
        "id": "193",
        "Title": "Max Area of Island::Link-https://leetcode.com/problems/max-area-of-island,",
        "Difficulty": "M",
        "freq": "0.57",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=iJGr1OtmH0c,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0695-max-area-of-island.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix",
            "union-find"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "194": {
        "id": "194",
        "Title": "Next Greater Element I::Link-https://leetcode.com/problems/next-greater-element-i,",
        "Difficulty": "E",
        "freq": "0.54",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=68a1Dc_qVq4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0496-next-greater-element-i.py,",
        "topics": [
            "array",
            "hash-table",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "microsoft",
            "uber"
        ]
    },
    "195": {
        "id": "195",
        "Title": "House Robber II::Link-https://leetcode.com/problems/house-robber-ii,",
        "Difficulty": "M",
        "freq": "0.54",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=73r3KWiEvyk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0213-house-robber-ii.py,",
        "others": [
            "neet150",
            "blind75"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "apple",
            "databricks",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "196": {
        "id": "196",
        "Title": "Top K Frequent Words::Link-https://leetcode.com/problems/top-k-frequent-words,",
        "Difficulty": "M",
        "freq": "0.54",
        "others": [
            "grind169"
        ],
        "topics": [
            "counting",
            "hash-table",
            "heap-priority-queue",
            "sorting",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "oracle",
            "servicenow",
            "uber"
        ]
    },
    "197": {
        "id": "197",
        "Title": "Subarray Product Less Than K::Link-https://leetcode.com/problems/subarray-product-less-than-k,",
        "Difficulty": "M",
        "freq": "0.54",
        "topics": [
            "array",
            "sliding-window"
        ],
        "companies": [
            "adobe",
            "apple",
            "facebook",
            "ibm",
            "nvidia",
            "salesforce"
        ]
    },
    "198": {
        "id": "198",
        "Title": "Largest Number::Link-https://leetcode.com/problems/largest-number,",
        "Difficulty": "M",
        "freq": "0.54",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=WDx6Y4i4xJ8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0179-largest-number.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "greedy",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "199": {
        "id": "199",
        "Title": "Bus Routes::Link-https://leetcode.com/problems/bus-routes,",
        "Difficulty": "H",
        "freq": "0.54",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "hash-table"
        ],
        "companies": [
            "tiktok",
            "uber"
        ]
    },
    "200": {
        "id": "200",
        "Title": "Middle of the Linked List::Link-https://leetcode.com/problems/middle-of-the-linked-list,",
        "Difficulty": "E",
        "freq": "0.54",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=A2_ldqM4QcY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0876-middle-of-the-linked-list.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google",
            "intuit"
        ]
    },
    "201": {
        "id": "201",
        "Title": "Valid Number::Link-https://leetcode.com/problems/valid-number,",
        "Difficulty": "H",
        "freq": "0.54",
        "topics": [
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "202": {
        "id": "202",
        "Title": "Reverse Linked List II::Link-https://leetcode.com/problems/reverse-linked-list-ii,",
        "Difficulty": "M",
        "freq": "0.54",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=RF_M9tX4Eag,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0092-reverse-linked-list-ii.py,",
        "topics": [
            "linked-list"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "arista-networks",
            "facebook",
            "google",
            "zoho"
        ]
    },
    "203": {
        "id": "203",
        "Title": "Fizz Buzz::Link-https://leetcode.com/problems/fizz-buzz,",
        "Difficulty": "E",
        "freq": "0.54",
        "topics": [
            "math",
            "simulation",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "google",
            "ibm",
            "microsoft"
        ]
    },
    "204": {
        "id": "204",
        "Title": "Remove All Adjacent Duplicates In String::Link-https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string,",
        "Difficulty": "E",
        "freq": "0.54",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "zoho"
        ]
    },
    "205": {
        "id": "205",
        "Title": "Add Two Integers::Link-https://leetcode.com/problems/add-two-integers,",
        "Difficulty": "E",
        "freq": "0.52",
        "topics": [
            "math"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "206": {
        "id": "206",
        "Title": "Search Insert Position::Link-https://leetcode.com/problems/search-insert-position,",
        "Difficulty": "E",
        "freq": "0.52",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=K-RYzDZkzCI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0035-search-insert-position.py,",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "google",
            "microsoft",
            "yahoo"
        ]
    },
    "207": {
        "id": "207",
        "Title": "Summary Ranges::Link-https://leetcode.com/problems/summary-ranges,",
        "Difficulty": "E",
        "freq": "0.52",
        "topics": [
            "array"
        ],
        "companies": [
            "amazon",
            "google",
            "yandex"
        ]
    },
    "208": {
        "id": "208",
        "Title": "Find the Index of the First Occurrence in a String::Link-https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string,",
        "Difficulty": "E",
        "freq": "0.52",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Gjkhm1gYIMw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0028-find-the-index-of-the-first-occurrence-in-a-string.py,",
        "topics": [
            "string",
            "string-matching",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "209": {
        "id": "209",
        "Title": "Maximum Swap::Link-https://leetcode.com/problems/maximum-swap,",
        "Difficulty": "M",
        "freq": "0.52",
        "topics": [
            "greedy",
            "math"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "210": {
        "id": "210",
        "Title": "4Sum::Link-https://leetcode.com/problems/4sum,",
        "Difficulty": "M",
        "freq": "0.52",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=EYeR-_1NRlQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0018-4sum.py,",
        "topics": [
            "array",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "cloudflare",
            "facebook",
            "microsoft"
        ]
    },
    "211": {
        "id": "211",
        "Title": "Compare Version Numbers::Link-https://leetcode.com/problems/compare-version-numbers,",
        "Difficulty": "M",
        "freq": "0.52",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "microsoft",
            "tiktok",
            "zoho"
        ]
    },
    "212": {
        "id": "212",
        "Title": "Exclusive Time of Functions::Link-https://leetcode.com/problems/exclusive-time-of-functions,",
        "Difficulty": "M",
        "freq": "0.52",
        "topics": [
            "array",
            "stack"
        ],
        "companies": [
            "facebook",
            "ibm",
            "linkedin"
        ]
    },
    "213": {
        "id": "213",
        "Title": "Longest Subarray of 1's After Deleting One Element::Link-https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element,",
        "Difficulty": "M",
        "freq": "0.52",
        "topics": [
            "array",
            "dynamic-programming",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "yandex"
        ]
    },
    "214": {
        "id": "214",
        "Title": "Candy::Link-https://leetcode.com/problems/candy,",
        "Difficulty": "H",
        "freq": "0.52",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "google",
            "microsoft"
        ]
    },
    "215": {
        "id": "215",
        "Title": "Single Element in a Sorted Array::Link-https://leetcode.com/problems/single-element-in-a-sorted-array,",
        "Difficulty": "M",
        "freq": "0.52",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=HGtqdzyUJ3k,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0540-single-element-in-a-sorted-array.py,",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "oracle"
        ]
    },
    "216": {
        "id": "216",
        "Title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit::Link-https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit,",
        "Difficulty": "M",
        "freq": "0.49",
        "topics": [
            "array",
            "heap-priority-queue",
            "ordered-set",
            "queue",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "google",
            "phonepe",
            "uber"
        ]
    },
    "217": {
        "id": "217",
        "Title": "Wildcard Matching::Link-https://leetcode.com/problems/wildcard-matching,",
        "Difficulty": "H",
        "freq": "0.49",
        "topics": [
            "dynamic-programming",
            "greedy",
            "recursion",
            "string"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "google",
            "walmart-labs",
            "zoho"
        ]
    },
    "218": {
        "id": "218",
        "Title": "Lowest Common Ancestor of a Binary Search Tree::Link-https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree,",
        "Difficulty": "M",
        "freq": "0.49",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=gs2LMfuOR9k,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0235-lowest-common-ancestor-of-a-binary-search-tree.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "linkedin",
            "microsoft"
        ]
    },
    "219": {
        "id": "219",
        "Title": "Alien Dictionary::Link-https://leetcode.com/problems/alien-dictionary,",
        "Difficulty": "H",
        "freq": "0.49",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=OVgPAJIyX6o,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0269-alien-dictionary.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "string",
            "topological-sort"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "oracle",
            "tiktok",
            "uber"
        ]
    },
    "220": {
        "id": "220",
        "Title": "Closest Binary Search Tree Value::Link-https://leetcode.com/problems/closest-binary-search-tree-value,",
        "Difficulty": "E",
        "freq": "0.49",
        "topics": [
            "binary-search",
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook",
            "oracle"
        ]
    },
    "221": {
        "id": "221",
        "Title": "Shortest Distance from All Buildings::Link-https://leetcode.com/problems/shortest-distance-from-all-buildings,",
        "Difficulty": "H",
        "freq": "0.49",
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook"
        ]
    },
    "222": {
        "id": "222",
        "Title": "Longest Increasing Path in a Matrix::Link-https://leetcode.com/problems/longest-increasing-path-in-a-matrix,",
        "Difficulty": "H",
        "freq": "0.49",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=wCc_nd-GiEc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0329-longest-increasing-path-in-a-matrix.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "dynamic-programming",
            "graph",
            "matrix",
            "memoization",
            "topological-sort"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "uber"
        ]
    },
    "223": {
        "id": "223",
        "Title": "Reverse String::Link-https://leetcode.com/problems/reverse-string,",
        "Difficulty": "E",
        "freq": "0.49",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=_d0T_2Lk2qA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0344-reverse-string.py,",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "google"
        ]
    },
    "224": {
        "id": "224",
        "Title": "Random Pick Index::Link-https://leetcode.com/problems/random-pick-index,",
        "Difficulty": "M",
        "freq": "0.49",
        "topics": [
            "hash-table",
            "math"
        ],
        "companies": [
            "facebook"
        ]
    },
    "225": {
        "id": "225",
        "Title": "Next Greater Element III::Link-https://leetcode.com/problems/next-greater-element-iii,",
        "Difficulty": "M",
        "freq": "0.49",
        "topics": [
            "math",
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "doordash",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "226": {
        "id": "226",
        "Title": "Find the Closest Palindrome::Link-https://leetcode.com/problems/find-the-closest-palindrome,",
        "Difficulty": "H",
        "freq": "0.49",
        "topics": [
            "math",
            "string"
        ],
        "companies": [
            "amazon",
            "goldman-sachs",
            "microsoft",
            "uber"
        ]
    },
    "227": {
        "id": "227",
        "Title": "Number of Distinct Islands::Link-https://leetcode.com/problems/number-of-distinct-islands,",
        "Difficulty": "M",
        "freq": "0.49",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "hash-function",
            "hash-table",
            "union-find"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft",
            "oracle",
            "tiktok"
        ]
    },
    "228": {
        "id": "228",
        "Title": "Design HashMap::Link-https://leetcode.com/problems/design-hashmap,",
        "Difficulty": "E",
        "freq": "0.49",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=cNWsgbKwwoU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0706-design-hashmap.py,",
        "topics": [
            "array",
            "design",
            "hash-function",
            "hash-table",
            "linked-list"
        ],
        "companies": [
            "amazon",
            "apple",
            "goldman-sachs",
            "microsoft",
            "servicenow",
            "snowflake",
            "tiktok"
        ]
    },
    "229": {
        "id": "229",
        "Title": "All Nodes Distance K in Binary Tree::Link-https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree,",
        "Difficulty": "M",
        "freq": "0.49",
        "others": [
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "230": {
        "id": "230",
        "Title": "Capacity To Ship Packages Within D Days::Link-https://leetcode.com/problems/capacity-to-ship-packages-within-d-days,",
        "Difficulty": "M",
        "freq": "0.49",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ER_oLmdc-nw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1011-capacity-to-ship-packages-within-d-days.py,",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft",
            "oracle",
            "tiktok"
        ]
    },
    "231": {
        "id": "231",
        "Title": "Plates Between Candles::Link-https://leetcode.com/problems/plates-between-candles,",
        "Difficulty": "M",
        "freq": "0.49",
        "topics": [
            "array",
            "binary-search",
            "prefix-sum",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "232": {
        "id": "232",
        "Title": "Subarray With Elements Greater Than Varying Threshold::Link-https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold,",
        "Difficulty": "H",
        "freq": "0.49",
        "topics": [
            "array",
            "monotonic-stack",
            "stack",
            "union-find"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "233": {
        "id": "233",
        "Title": "Non-overlapping Intervals::Link-https://leetcode.com/problems/non-overlapping-intervals,",
        "Difficulty": "M",
        "freq": "0.46",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=nONCGxWoUfM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0435-non-overlapping-intervals.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "dynamic-programming",
            "greedy",
            "sorting"
        ],
        "companies": [
            "bloomberg",
            "facebook",
            "microsoft",
            "zoho"
        ]
    },
    "234": {
        "id": "234",
        "Title": "Toeplitz Matrix::Link-https://leetcode.com/problems/toeplitz-matrix,",
        "Difficulty": "E",
        "freq": "0.46",
        "topics": [
            "array",
            "matrix"
        ],
        "companies": [
            "facebook"
        ]
    },
    "235": {
        "id": "235",
        "Title": "Find Common Characters::Link-https://leetcode.com/problems/find-common-characters,",
        "Difficulty": "E",
        "freq": "0.46",
        "topics": [
            "array",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "microsoft"
        ]
    },
    "236": {
        "id": "236",
        "Title": "Number of 1 Bits::Link-https://leetcode.com/problems/number-of-1-bits,",
        "Difficulty": "E",
        "freq": "0.46",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=5Km3utixwZs,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0191-number-of-1-bits.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "bit-manipulation",
            "divide-and-conquer"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "google"
        ]
    },
    "237": {
        "id": "237",
        "Title": "The Earliest Moment When Everyone Become Friends::Link-https://leetcode.com/problems/the-earliest-moment-when-everyone-become-friends,",
        "Difficulty": "M",
        "freq": "0.46",
        "topics": [
            "array",
            "sorting",
            "union-find"
        ],
        "companies": [
            "google"
        ]
    },
    "238": {
        "id": "238",
        "Title": "Group Shifted Strings::Link-https://leetcode.com/problems/group-shifted-strings,",
        "Difficulty": "M",
        "freq": "0.46",
        "topics": [
            "array",
            "hash-table",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "239": {
        "id": "239",
        "Title": "Sudoku Solver::Link-https://leetcode.com/problems/sudoku-solver,",
        "Difficulty": "H",
        "freq": "0.46",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "backtracking",
            "hash-table",
            "matrix"
        ],
        "companies": [
            "amazon",
            "google",
            "intuit",
            "microsoft"
        ]
    },
    "240": {
        "id": "240",
        "Title": "Finding MK Average::Link-https://leetcode.com/problems/finding-mk-average,",
        "Difficulty": "H",
        "freq": "0.46",
        "topics": [
            "design",
            "heap-priority-queue",
            "ordered-set",
            "queue"
        ],
        "companies": [
            "google"
        ]
    },
    "241": {
        "id": "241",
        "Title": "Validate IP Address::Link-https://leetcode.com/problems/validate-ip-address,",
        "Difficulty": "M",
        "freq": "0.44",
        "topics": [
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft",
            "oracle",
            "turing"
        ]
    },
    "242": {
        "id": "242",
        "Title": "Ransom Note::Link-https://leetcode.com/problems/ransom-note,",
        "Difficulty": "E",
        "freq": "0.44",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "counting",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "243": {
        "id": "243",
        "Title": "Minimum Number of Keypresses::Link-https://leetcode.com/problems/minimum-number-of-keypresses,",
        "Difficulty": "M",
        "freq": "0.44",
        "topics": [
            "counting",
            "greedy",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "244": {
        "id": "244",
        "Title": "Concatenated Words::Link-https://leetcode.com/problems/concatenated-words,",
        "Difficulty": "H",
        "freq": "0.44",
        "topics": [
            "array",
            "depth-first-search",
            "dynamic-programming",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "tiktok"
        ]
    },
    "245": {
        "id": "245",
        "Title": "Longest Valid Parentheses::Link-https://leetcode.com/problems/longest-valid-parentheses,",
        "Difficulty": "H",
        "freq": "0.44",
        "others": [
            "grind169"
        ],
        "topics": [
            "dynamic-programming",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "zoho"
        ]
    },
    "246": {
        "id": "246",
        "Title": "Perfect Squares::Link-https://leetcode.com/problems/perfect-squares,",
        "Difficulty": "M",
        "freq": "0.44",
        "topics": [
            "breadth-first-search",
            "dynamic-programming",
            "math"
        ],
        "companies": [
            "adobe",
            "amazon",
            "bloomberg",
            "google",
            "yandex"
        ]
    },
    "247": {
        "id": "247",
        "Title": "Find the Celebrity::Link-https://leetcode.com/problems/find-the-celebrity,",
        "Difficulty": "M",
        "freq": "0.44",
        "topics": [
            "graph",
            "two-pointers"
        ],
        "companies": [
            "doordash",
            "linkedin",
            "microsoft"
        ]
    },
    "248": {
        "id": "248",
        "Title": "Number of Provinces::Link-https://leetcode.com/problems/number-of-provinces,",
        "Difficulty": "M",
        "freq": "0.44",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "249": {
        "id": "249",
        "Title": "Can Place Flowers::Link-https://leetcode.com/problems/can-place-flowers,",
        "Difficulty": "E",
        "freq": "0.44",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ZGxqqjljpUI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0605-can-place-flowers.py,",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "amazon",
            "facebook",
            "linkedin"
        ]
    },
    "250": {
        "id": "250",
        "Title": "Design Circular Queue::Link-https://leetcode.com/problems/design-circular-queue,",
        "Difficulty": "M",
        "freq": "0.44",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=aBbsfn863oA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0622-design-circular-queue.py,",
        "topics": [
            "array",
            "design",
            "linked-list",
            "queue"
        ],
        "companies": [
            "cloudflare",
            "datadog",
            "facebook",
            "google"
        ]
    },
    "251": {
        "id": "251",
        "Title": "Sort an Array::Link-https://leetcode.com/problems/sort-an-array,",
        "Difficulty": "M",
        "freq": "0.44",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=MsYZSinhuFo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0912-sort-an-array.py,",
        "topics": [
            "array",
            "divide-and-conquer",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "yahoo"
        ]
    },
    "252": {
        "id": "252",
        "Title": "Populating Next Right Pointers in Each Node::Link-https://leetcode.com/problems/populating-next-right-pointers-in-each-node,",
        "Difficulty": "M",
        "freq": "0.44",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "linked-list",
            "tree"
        ],
        "companies": [
            "facebook",
            "microsoft"
        ]
    },
    "253": {
        "id": "253",
        "Title": "Verifying an Alien Dictionary::Link-https://leetcode.com/problems/verifying-an-alien-dictionary,",
        "Difficulty": "E",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=OVgPAJIyX6o,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0953-verifying-an-alien-dictionary.py,",
        "topics": [
            "array",
            "hash-table",
            "string"
        ],
        "companies": [
            "apple",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "254": {
        "id": "254",
        "Title": "Intersection of Two Linked Lists::Link-https://leetcode.com/problems/intersection-of-two-linked-lists,",
        "Difficulty": "E",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=D0X0BONOQhI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0160-intersection-of-two-linked-lists.py,",
        "topics": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "accenture",
            "amazon",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "255": {
        "id": "255",
        "Title": "Maximize Distance to Closest Person::Link-https://leetcode.com/problems/maximize-distance-to-closest-person,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "array"
        ],
        "companies": [
            "yandex"
        ]
    },
    "256": {
        "id": "256",
        "Title": "Binary Subarrays With Sum::Link-https://leetcode.com/problems/binary-subarrays-with-sum,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "array",
            "hash-table",
            "prefix-sum",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "257": {
        "id": "257",
        "Title": "Divide Two Integers::Link-https://leetcode.com/problems/divide-two-integers,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "bit-manipulation",
            "math"
        ],
        "companies": [
            "amazon",
            "apple",
            "bloomberg",
            "facebook",
            "microsoft"
        ]
    },
    "258": {
        "id": "258",
        "Title": "Longest Palindrome::Link-https://leetcode.com/problems/longest-palindrome,",
        "Difficulty": "E",
        "freq": "0.41",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "greedy",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "259": {
        "id": "259",
        "Title": "Rank Teams by Votes::Link-https://leetcode.com/problems/rank-teams-by-votes,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "array",
            "counting",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "atlassian",
            "microsoft"
        ]
    },
    "260": {
        "id": "260",
        "Title": "Kth Smallest Element in a Sorted Matrix::Link-https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "array",
            "binary-search",
            "heap-priority-queue",
            "matrix",
            "sorting"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft",
            "tiktok"
        ]
    },
    "261": {
        "id": "261",
        "Title": "Frequency of the Most Frequent Element::Link-https://leetcode.com/problems/frequency-of-the-most-frequent-element,",
        "Difficulty": "M",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=vgBrQ0NM5vE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1838-frequency-of-the-most-frequent-element.py,",
        "topics": [
            "array",
            "binary-search",
            "greedy",
            "prefix-sum",
            "sliding-window",
            "sorting"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft",
            "phonepe"
        ]
    },
    "262": {
        "id": "262",
        "Title": "Balanced Binary Tree::Link-https://leetcode.com/problems/balanced-binary-tree,",
        "Difficulty": "E",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=QfJsau0ItOY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0110-balanced-binary-tree.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "microsoft",
            "yandex"
        ]
    },
    "263": {
        "id": "263",
        "Title": "Rotate List::Link-https://leetcode.com/problems/rotate-list,",
        "Difficulty": "M",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=UcGtPs2LE_c,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0061-rotate-list.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "linkedin",
            "microsoft"
        ]
    },
    "264": {
        "id": "264",
        "Title": "Reveal Cards In Increasing Order::Link-https://leetcode.com/problems/reveal-cards-in-increasing-order,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "array",
            "queue",
            "simulation",
            "sorting"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "265": {
        "id": "265",
        "Title": "Find All Duplicates in an Array::Link-https://leetcode.com/problems/find-all-duplicates-in-an-array,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "array",
            "hash-table"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "266": {
        "id": "266",
        "Title": "Reorder Routes to Make All Paths Lead to the City Zero::Link-https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "267": {
        "id": "267",
        "Title": "Construct Binary Tree from Preorder and Inorder Traversal::Link-https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal,",
        "Difficulty": "M",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ihj4IQGZ2zc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0105-construct-binary-tree-from-preorder-and-inorder-traversal.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "binary-tree",
            "divide-and-conquer",
            "hash-table",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "uber"
        ]
    },
    "268": {
        "id": "268",
        "Title": "Count Subarrays With Fixed Bounds::Link-https://leetcode.com/problems/count-subarrays-with-fixed-bounds,",
        "Difficulty": "H",
        "freq": "0.41",
        "topics": [
            "array",
            "queue",
            "sliding-window"
        ],
        "companies": [
            "adobe",
            "amazon",
            "apple",
            "uber"
        ]
    },
    "269": {
        "id": "269",
        "Title": "Detect Squares::Link-https://leetcode.com/problems/detect-squares,",
        "Difficulty": "M",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=bahebearrDc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/2013-detect-squares.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "counting",
            "design",
            "hash-table"
        ],
        "companies": [
            "google"
        ]
    },
    "270": {
        "id": "270",
        "Title": "Partition Equal Subset Sum::Link-https://leetcode.com/problems/partition-equal-subset-sum,",
        "Difficulty": "M",
        "freq": "0.41",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=IsvocB5BJhw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0416-partition-equal-subset-sum.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "zoho"
        ]
    },
    "271": {
        "id": "271",
        "Title": "Nested List Weight Sum II::Link-https://leetcode.com/problems/nested-list-weight-sum-ii,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "stack"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "272": {
        "id": "272",
        "Title": "Product of Two Run-Length Encoded Arrays::Link-https://leetcode.com/problems/product-of-two-run-length-encoded-arrays,",
        "Difficulty": "M",
        "freq": "0.41",
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "facebook"
        ]
    },
    "273": {
        "id": "273",
        "Title": "Sliding Window Median::Link-https://leetcode.com/problems/sliding-window-median,",
        "Difficulty": "H",
        "freq": "0.41",
        "topics": [
            "array",
            "hash-table",
            "heap-priority-queue",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "datadog",
            "facebook"
        ]
    },
    "274": {
        "id": "274",
        "Title": "Fibonacci Number::Link-https://leetcode.com/problems/fibonacci-number,",
        "Difficulty": "E",
        "freq": "0.38",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "topics": [
            "dynamic-programming",
            "math",
            "memoization",
            "recursion"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "tcs"
        ]
    },
    "275": {
        "id": "275",
        "Title": "Boats to Save People::Link-https://leetcode.com/problems/boats-to-save-people,",
        "Difficulty": "M",
        "freq": "0.38",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=XbaxWuHIWUs,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0881-boats-to-save-people.py,",
        "topics": [
            "array",
            "greedy",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "276": {
        "id": "276",
        "Title": "Flatten Binary Tree to Linked List::Link-https://leetcode.com/problems/flatten-binary-tree-to-linked-list,",
        "Difficulty": "M",
        "freq": "0.38",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "linked-list",
            "stack",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "277": {
        "id": "277",
        "Title": "Minimum Absolute Difference::Link-https://leetcode.com/problems/minimum-absolute-difference,",
        "Difficulty": "E",
        "freq": "0.38",
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "ibm",
            "jpmorgan",
            "oracle"
        ]
    },
    "278": {
        "id": "278",
        "Title": "Multiply Strings::Link-https://leetcode.com/problems/multiply-strings,",
        "Difficulty": "M",
        "freq": "0.38",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=1vZswirL8Y8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0043-multiply-strings.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "math",
            "simulation",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "279": {
        "id": "279",
        "Title": "Remove All Adjacent Duplicates in String II::Link-https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii,",
        "Difficulty": "M",
        "freq": "0.38",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=w6LcypDgC4w,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1209-remove-all-adjacent-duplicates-in-string-ii.py,",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "tiktok"
        ]
    },
    "280": {
        "id": "280",
        "Title": "Valid Palindrome III::Link-https://leetcode.com/problems/valid-palindrome-iii,",
        "Difficulty": "H",
        "freq": "0.38",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "281": {
        "id": "281",
        "Title": "Sum of Square Numbers::Link-https://leetcode.com/problems/sum-of-square-numbers,",
        "Difficulty": "M",
        "freq": "0.38",
        "topics": [
            "binary-search",
            "math",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "282": {
        "id": "282",
        "Title": "Odd Even Jump::Link-https://leetcode.com/problems/odd-even-jump,",
        "Difficulty": "H",
        "freq": "0.38",
        "topics": [
            "array",
            "dynamic-programming",
            "monotonic-stack",
            "ordered-set",
            "stack"
        ],
        "companies": [
            "google"
        ]
    },
    "283": {
        "id": "283",
        "Title": "Validate Binary Search Tree::Link-https://leetcode.com/problems/validate-binary-search-tree,",
        "Difficulty": "M",
        "freq": "0.38",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=s6ATEkipzow,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0098-validate-binary-search-tree.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "microsoft",
            "oracle",
            "yandex"
        ]
    },
    "284": {
        "id": "284",
        "Title": "Is Graph Bipartite?::Link-https://leetcode.com/problems/is-graph-bipartite,",
        "Difficulty": "M",
        "freq": "0.38",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "uber"
        ]
    },
    "285": {
        "id": "285",
        "Title": "Max Consecutive Ones::Link-https://leetcode.com/problems/max-consecutive-ones,",
        "Difficulty": "E",
        "freq": "0.38",
        "topics": [
            "array"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "286": {
        "id": "286",
        "Title": "Binary Tree Inorder Traversal::Link-https://leetcode.com/problems/binary-tree-inorder-traversal,",
        "Difficulty": "E",
        "freq": "0.38",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=g_S5WuasWUE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0094-binary-tree-inorder-traversal.py,",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "stack",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "287": {
        "id": "287",
        "Title": "Most Profit Assigning Work::Link-https://leetcode.com/problems/most-profit-assigning-work,",
        "Difficulty": "M",
        "freq": "0.38",
        "topics": [
            "array",
            "binary-search",
            "greedy",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "doordash",
            "microsoft"
        ]
    },
    "288": {
        "id": "288",
        "Title": "Game of Life::Link-https://leetcode.com/problems/game-of-life,",
        "Difficulty": "M",
        "freq": "0.38",
        "topics": [
            "array",
            "matrix",
            "simulation"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "289": {
        "id": "289",
        "Title": "Subsets II::Link-https://leetcode.com/problems/subsets-ii,",
        "Difficulty": "M",
        "freq": "0.38",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Vn2v6ajA7U0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0090-subsets-ii.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "290": {
        "id": "290",
        "Title": "Reverse Vowels of a String::Link-https://leetcode.com/problems/reverse-vowels-of-a-string,",
        "Difficulty": "E",
        "freq": "0.35",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "291": {
        "id": "291",
        "Title": "Count Number of Nice Subarrays::Link-https://leetcode.com/problems/count-number-of-nice-subarrays,",
        "Difficulty": "M",
        "freq": "0.35",
        "topics": [
            "array",
            "hash-table",
            "math",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "microsoft"
        ]
    },
    "292": {
        "id": "292",
        "Title": "Meeting Rooms III::Link-https://leetcode.com/problems/meeting-rooms-iii,",
        "Difficulty": "H",
        "freq": "0.35",
        "topics": [
            "array",
            "hash-table",
            "heap-priority-queue",
            "simulation",
            "sorting"
        ],
        "companies": [
            "google",
            "tiktok",
            "uber"
        ]
    },
    "293": {
        "id": "293",
        "Title": "Longest Substring with At Least K Repeating Characters::Link-https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters,",
        "Difficulty": "M",
        "freq": "0.35",
        "topics": [
            "divide-and-conquer",
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "amazon",
            "google",
            "tiktok"
        ]
    },
    "294": {
        "id": "294",
        "Title": "Linked List Cycle::Link-https://leetcode.com/problems/linked-list-cycle,",
        "Difficulty": "E",
        "freq": "0.35",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=gBTe7lFR3vc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0141-linked-list-cycle.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "295": {
        "id": "295",
        "Title": "Pacific Atlantic Water Flow::Link-https://leetcode.com/problems/pacific-atlantic-water-flow,",
        "Difficulty": "M",
        "freq": "0.35",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=s-VkcjHqkGI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0417-pacific-atlantic-water-flow.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "facebook",
            "google",
            "uber"
        ]
    },
    "296": {
        "id": "296",
        "Title": "Optimal Account Balancing::Link-https://leetcode.com/problems/optimal-account-balancing,",
        "Difficulty": "H",
        "freq": "0.35",
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation",
            "bitmask",
            "dynamic-programming"
        ],
        "companies": [
            "microsoft",
            "pinterest"
        ]
    },
    "297": {
        "id": "297",
        "Title": "Is Subsequence::Link-https://leetcode.com/problems/is-subsequence,",
        "Difficulty": "E",
        "freq": "0.35",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=99RVfqklbCE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0392-is-subsequence.py,",
        "topics": [
            "dynamic-programming",
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "yandex"
        ]
    },
    "298": {
        "id": "298",
        "Title": "Single-Threaded CPU::Link-https://leetcode.com/problems/single-threaded-cpu,",
        "Difficulty": "M",
        "freq": "0.35",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=RR1n-d4oYqE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1834-single-threaded-cpu.py,",
        "topics": [
            "array",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "doordash",
            "google"
        ]
    },
    "299": {
        "id": "299",
        "Title": "Check if Array Is Sorted and Rotated::Link-https://leetcode.com/problems/check-if-array-is-sorted-and-rotated,",
        "Difficulty": "E",
        "freq": "0.35",
        "topics": [
            "array"
        ],
        "companies": [
            "adobe",
            "amazon",
            "facebook",
            "google"
        ]
    },
    "300": {
        "id": "300",
        "Title": "Pairs of Songs With Total Durations Divisible by 60::Link-https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60,",
        "Difficulty": "M",
        "freq": "0.35",
        "topics": [
            "array",
            "counting",
            "hash-table"
        ],
        "companies": [
            "goldman-sachs",
            "oracle",
            "tiktok"
        ]
    },
    "301": {
        "id": "301",
        "Title": "Score of a String::Link-https://leetcode.com/problems/score-of-a-string,",
        "Difficulty": "E",
        "freq": "0.35",
        "topics": [
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "microsoft"
        ]
    },
    "302": {
        "id": "302",
        "Title": "Design Snake Game::Link-https://leetcode.com/problems/design-snake-game,",
        "Difficulty": "M",
        "freq": "0.35",
        "topics": [
            "array",
            "design",
            "hash-table",
            "queue",
            "simulation"
        ],
        "companies": [
            "atlassian",
            "ixl"
        ]
    },
    "303": {
        "id": "303",
        "Title": "Split Message Based on Limit::Link-https://leetcode.com/problems/split-message-based-on-limit,",
        "Difficulty": "H",
        "freq": "0.35",
        "topics": [
            "binary-search",
            "string"
        ],
        "companies": [
            "databricks",
            "uber"
        ]
    },
    "304": {
        "id": "304",
        "Title": "Binary Search Tree Iterator::Link-https://leetcode.com/problems/binary-search-tree-iterator,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "design",
            "stack",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "305": {
        "id": "305",
        "Title": "Count Subarrays With Score Less Than K::Link-https://leetcode.com/problems/count-subarrays-with-score-less-than-k,",
        "Difficulty": "H",
        "freq": "0.33",
        "topics": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "companies": [
            "pinterest"
        ]
    },
    "306": {
        "id": "306",
        "Title": "Minimum Increment to Make Array Unique::Link-https://leetcode.com/problems/minimum-increment-to-make-array-unique,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "array",
            "counting",
            "greedy",
            "sorting"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google"
        ]
    },
    "307": {
        "id": "307",
        "Title": "Sum of Subarray Minimums::Link-https://leetcode.com/problems/sum-of-subarray-minimums,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "array",
            "dynamic-programming",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "microsoft",
            "tiktok"
        ]
    },
    "308": {
        "id": "308",
        "Title": "Target Sum::Link-https://leetcode.com/problems/target-sum,",
        "Difficulty": "M",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=g0npyaQtAQM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0494-target-sum.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "backtracking",
            "dynamic-programming"
        ],
        "companies": [
            "facebook",
            "google",
            "microsoft",
            "salesforce"
        ]
    },
    "309": {
        "id": "309",
        "Title": "IPO::Link-https://leetcode.com/problems/ipo,",
        "Difficulty": "H",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=1IUzNJ6TPEM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0502-ipo.py,",
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "310": {
        "id": "310",
        "Title": "Shortest Bridge::Link-https://leetcode.com/problems/shortest-bridge,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "facebook",
            "google",
            "uber"
        ]
    },
    "311": {
        "id": "311",
        "Title": "Intersection of Two Arrays II::Link-https://leetcode.com/problems/intersection-of-two-arrays-ii,",
        "Difficulty": "E",
        "freq": "0.33",
        "topics": [
            "array",
            "binary-search",
            "hash-table",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "312": {
        "id": "312",
        "Title": "Ugly Number II::Link-https://leetcode.com/problems/ugly-number-ii,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "dynamic-programming",
            "hash-table",
            "heap-priority-queue",
            "math"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "313": {
        "id": "313",
        "Title": "Path Sum::Link-https://leetcode.com/problems/path-sum,",
        "Difficulty": "E",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=LSKQyOz_P8I,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0112-path-sum.py,",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "314": {
        "id": "314",
        "Title": "Minimum Number of Steps to Make Two Strings Anagram::Link-https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "counting",
            "hash-table",
            "string"
        ],
        "companies": [
            "doordash",
            "ixl",
            "oracle"
        ]
    },
    "315": {
        "id": "315",
        "Title": "N-Queens::Link-https://leetcode.com/problems/n-queens,",
        "Difficulty": "H",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Ph95IHmRp5M,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0051-n-queens.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "array",
            "backtracking"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "316": {
        "id": "316",
        "Title": "Design File System::Link-https://leetcode.com/problems/design-file-system,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "design",
            "hash-table",
            "string",
            "trie"
        ],
        "companies": [
            "atlassian",
            "doordash",
            "microsoft"
        ]
    },
    "317": {
        "id": "317",
        "Title": "Delete Nodes And Return Forest::Link-https://leetcode.com/problems/delete-nodes-and-return-forest,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "array",
            "binary-tree",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "318": {
        "id": "318",
        "Title": "Add Binary::Link-https://leetcode.com/problems/add-binary,",
        "Difficulty": "E",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=keuWJ47xG8g,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0067-add-binary.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "bit-manipulation",
            "math",
            "simulation",
            "string"
        ],
        "companies": [
            "apple",
            "facebook",
            "google",
            "uber"
        ]
    },
    "319": {
        "id": "319",
        "Title": "High Five::Link-https://leetcode.com/problems/high-five,",
        "Difficulty": "E",
        "freq": "0.33",
        "topics": [
            "array",
            "hash-table",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "320": {
        "id": "320",
        "Title": "Last Stone Weight::Link-https://leetcode.com/problems/last-stone-weight,",
        "Difficulty": "E",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=B-QCq79-Vfw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1046-last-stone-weight.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "heap-priority-queue"
        ],
        "companies": [
            "amazon",
            "flipkart",
            "nvidia",
            "oracle"
        ]
    },
    "321": {
        "id": "321",
        "Title": "Robot Bounded In Circle::Link-https://leetcode.com/problems/robot-bounded-in-circle,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "math",
            "simulation",
            "string"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "322": {
        "id": "322",
        "Title": "Fraction to Recurring Decimal::Link-https://leetcode.com/problems/fraction-to-recurring-decimal,",
        "Difficulty": "M",
        "freq": "0.33",
        "topics": [
            "hash-table",
            "math",
            "string"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "323": {
        "id": "323",
        "Title": "Missing Ranges::Link-https://leetcode.com/problems/missing-ranges,",
        "Difficulty": "E",
        "freq": "0.33",
        "topics": [
            "array"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "324": {
        "id": "324",
        "Title": "Same Tree::Link-https://leetcode.com/problems/same-tree,",
        "Difficulty": "E",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=vRbbcKXCxOw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0100-same-tree.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "adobe",
            "amazon",
            "facebook",
            "google"
        ]
    },
    "325": {
        "id": "325",
        "Title": "Binary Tree Level Order Traversal::Link-https://leetcode.com/problems/binary-tree-level-order-traversal,",
        "Difficulty": "M",
        "freq": "0.33",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=6ZnyEApgFYg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0102-binary-tree-level-order-traversal.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "tree"
        ],
        "companies": [
            "adobe",
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "326": {
        "id": "326",
        "Title": "Count Primes::Link-https://leetcode.com/problems/count-primes,",
        "Difficulty": "M",
        "freq": "0.30",
        "topics": [
            "array",
            "enumeration",
            "math",
            "number-theory"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "327": {
        "id": "327",
        "Title": "First Bad Version::Link-https://leetcode.com/problems/first-bad-version,",
        "Difficulty": "E",
        "freq": "0.30",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "binary-search"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "328": {
        "id": "328",
        "Title": "Island Perimeter::Link-https://leetcode.com/problems/island-perimeter,",
        "Difficulty": "E",
        "freq": "0.30",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=fISIuAFRM2s,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0463-island-perimeter.py,",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "329": {
        "id": "329",
        "Title": "Longest Common Subsequence::Link-https://leetcode.com/problems/longest-common-subsequence,",
        "Difficulty": "M",
        "freq": "0.30",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Ua0GhsJSlWM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1143-longest-common-subsequence.py,",
        "others": [
            "neet150",
            "blind75"
        ],
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "adobe",
            "amazon",
            "microsoft"
        ]
    },
    "330": {
        "id": "330",
        "Title": "Minimum Swaps to Group All 1's Together II::Link-https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together-ii,",
        "Difficulty": "M",
        "freq": "0.30",
        "topics": [
            "array",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "tiktok"
        ]
    },
    "331": {
        "id": "331",
        "Title": "Find Leaves of Binary Tree::Link-https://leetcode.com/problems/find-leaves-of-binary-tree,",
        "Difficulty": "M",
        "freq": "0.30",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "google",
            "linkedin"
        ]
    },
    "332": {
        "id": "332",
        "Title": "Binary Tree Cameras::Link-https://leetcode.com/problems/binary-tree-cameras,",
        "Difficulty": "H",
        "freq": "0.30",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "dynamic-programming",
            "tree"
        ],
        "companies": [
            "amazon",
            "de-shaw",
            "microsoft",
            "oracle"
        ]
    },
    "333": {
        "id": "333",
        "Title": "Unique Paths II::Link-https://leetcode.com/problems/unique-paths-ii,",
        "Difficulty": "M",
        "freq": "0.30",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=d3UOz7zdE4I,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0063-unique-paths-ii.py,",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "amazon",
            "facebook",
            "pinterest",
            "tcs"
        ]
    },
    "334": {
        "id": "334",
        "Title": "Count Unreachable Pairs of Nodes in an Undirected Graph::Link-https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph,",
        "Difficulty": "M",
        "freq": "0.30",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "google"
        ]
    },
    "335": {
        "id": "335",
        "Title": "Delete Node in a BST::Link-https://leetcode.com/problems/delete-node-in-a-bst,",
        "Difficulty": "M",
        "freq": "0.30",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=LFzAoJJt92M,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0450-delete-node-in-a-bst.py,",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "tree"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "336": {
        "id": "336",
        "Title": "Reverse Substrings Between Each Pair of Parentheses::Link-https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses,",
        "Difficulty": "M",
        "freq": "0.30",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "bloomberg",
            "google",
            "microsoft"
        ]
    },
    "337": {
        "id": "337",
        "Title": "Length of Last Word::Link-https://leetcode.com/problems/length-of-last-word,",
        "Difficulty": "E",
        "freq": "0.30",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=KT9rltZTybQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0058-length-of-last-word.py,",
        "topics": [
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google"
        ]
    },
    "338": {
        "id": "338",
        "Title": "Minimum Difference Between Largest and Smallest Value in Three Moves::Link-https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves,",
        "Difficulty": "M",
        "freq": "0.30",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "339": {
        "id": "339",
        "Title": "Furthest Building You Can Reach::Link-https://leetcode.com/problems/furthest-building-you-can-reach,",
        "Difficulty": "M",
        "freq": "0.30",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=zyTeznvXCtg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1642-furthest-building-you-can-reach.py,",
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue"
        ],
        "companies": [
            "de-shaw",
            "microsoft",
            "tiktok"
        ]
    },
    "340": {
        "id": "340",
        "Title": "Excel Sheet Column Number::Link-https://leetcode.com/problems/excel-sheet-column-number,",
        "Difficulty": "E",
        "freq": "0.30",
        "topics": [
            "math",
            "string"
        ],
        "companies": [
            "microsoft",
            "zoho"
        ]
    },
    "341": {
        "id": "341",
        "Title": "Minimum Size Subarray Sum::Link-https://leetcode.com/problems/minimum-size-subarray-sum,",
        "Difficulty": "M",
        "freq": "0.30",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=aYqYMIqZx5s,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0209-minimum-size-subarray-sum.py,",
        "topics": [
            "array",
            "binary-search",
            "prefix-sum",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "342": {
        "id": "342",
        "Title": "Flood Fill::Link-https://leetcode.com/problems/flood-fill,",
        "Difficulty": "E",
        "freq": "0.30",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "microsoft"
        ]
    },
    "343": {
        "id": "343",
        "Title": "The Maze::Link-https://leetcode.com/problems/the-maze,",
        "Difficulty": "M",
        "freq": "0.30",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "facebook",
            "pinterest",
            "uber"
        ]
    },
    "344": {
        "id": "344",
        "Title": "Robot Room Cleaner::Link-https://leetcode.com/problems/robot-room-cleaner,",
        "Difficulty": "H",
        "freq": "0.30",
        "topics": [
            "backtracking"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "345": {
        "id": "345",
        "Title": "Painting the Walls::Link-https://leetcode.com/problems/painting-the-walls,",
        "Difficulty": "H",
        "freq": "0.27",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "de-shaw",
            "microsoft"
        ]
    },
    "346": {
        "id": "346",
        "Title": "Maximal Square::Link-https://leetcode.com/problems/maximal-square,",
        "Difficulty": "M",
        "freq": "0.27",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=6X7Ha2PrDmM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0221-maximal-square.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "citadel",
            "google",
            "salesforce"
        ]
    },
    "347": {
        "id": "347",
        "Title": "Coin Change II::Link-https://leetcode.com/problems/coin-change-ii,",
        "Difficulty": "M",
        "freq": "0.27",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "tiktok"
        ]
    },
    "348": {
        "id": "348",
        "Title": "3Sum Closest::Link-https://leetcode.com/problems/3sum-closest,",
        "Difficulty": "M",
        "freq": "0.27",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft",
            "zoho"
        ]
    },
    "349": {
        "id": "349",
        "Title": "Longest Path With Different Adjacent Characters::Link-https://leetcode.com/problems/longest-path-with-different-adjacent-characters,",
        "Difficulty": "H",
        "freq": "0.27",
        "topics": [
            "array",
            "depth-first-search",
            "graph",
            "string",
            "topological-sort",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "350": {
        "id": "350",
        "Title": "Design Add and Search Words Data Structure::Link-https://leetcode.com/problems/design-add-and-search-words-data-structure,",
        "Difficulty": "M",
        "freq": "0.27",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=BTf05gs_8iU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0211-design-add-and-search-words-data-structure.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "depth-first-search",
            "design",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "linkedin"
        ]
    },
    "351": {
        "id": "351",
        "Title": "Cheapest Flights Within K Stops::Link-https://leetcode.com/problems/cheapest-flights-within-k-stops,",
        "Difficulty": "M",
        "freq": "0.27",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=5eIK3zUdYmE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0787-cheapest-flights-within-k-stops.py,",
        "others": [
            "neet150",
            "grind169"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "dynamic-programming",
            "graph",
            "heap-priority-queue",
            "shortest-path"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "352": {
        "id": "352",
        "Title": "Unique Number of Occurrences::Link-https://leetcode.com/problems/unique-number-of-occurrences,",
        "Difficulty": "E",
        "freq": "0.27",
        "topics": [
            "array",
            "hash-table"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "353": {
        "id": "353",
        "Title": "Sort Array by Increasing Frequency::Link-https://leetcode.com/problems/sort-array-by-increasing-frequency,",
        "Difficulty": "E",
        "freq": "0.27",
        "topics": [
            "array",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "accenture",
            "amazon",
            "goldman-sachs"
        ]
    },
    "354": {
        "id": "354",
        "Title": "Search a 2D Matrix II::Link-https://leetcode.com/problems/search-a-2d-matrix-ii,",
        "Difficulty": "M",
        "freq": "0.27",
        "topics": [
            "array",
            "binary-search",
            "divide-and-conquer",
            "matrix"
        ],
        "companies": [
            "google",
            "microsoft",
            "oracle",
            "snapchat"
        ]
    },
    "355": {
        "id": "355",
        "Title": "Symmetric Tree::Link-https://leetcode.com/problems/symmetric-tree,",
        "Difficulty": "E",
        "freq": "0.27",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Mao9uzxwvmc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0101-symmetric-tree.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "356": {
        "id": "356",
        "Title": "Backspace String Compare::Link-https://leetcode.com/problems/backspace-string-compare,",
        "Difficulty": "E",
        "freq": "0.27",
        "others": [
            "grind169"
        ],
        "topics": [
            "simulation",
            "stack",
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "goldman-sachs",
            "oracle",
            "tinkoff"
        ]
    },
    "357": {
        "id": "357",
        "Title": "Snapshot Array::Link-https://leetcode.com/problems/snapshot-array,",
        "Difficulty": "M",
        "freq": "0.27",
        "topics": [
            "array",
            "binary-search",
            "design",
            "hash-table"
        ],
        "companies": [
            "amazon",
            "databricks",
            "google"
        ]
    },
    "358": {
        "id": "358",
        "Title": "Check if One String Swap Can Make Strings Equal::Link-https://leetcode.com/problems/check-if-one-string-swap-can-make-strings-equal,",
        "Difficulty": "E",
        "freq": "0.27",
        "topics": [
            "counting",
            "hash-table",
            "string"
        ],
        "companies": [
            "doordash"
        ]
    },
    "359": {
        "id": "359",
        "Title": "Implement Queue using Stacks::Link-https://leetcode.com/problems/implement-queue-using-stacks,",
        "Difficulty": "E",
        "freq": "0.27",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=rW4vm0-DLYc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0232-implement-queue-using-stacks.py,",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "design",
            "queue",
            "stack"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "360": {
        "id": "360",
        "Title": "Boundary of Binary Tree::Link-https://leetcode.com/problems/boundary-of-binary-tree,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "snowflake"
        ]
    },
    "361": {
        "id": "361",
        "Title": "Maximum Average Subarray I::Link-https://leetcode.com/problems/maximum-average-subarray-i,",
        "Difficulty": "E",
        "freq": "0.25",
        "topics": [
            "array",
            "sliding-window"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "362": {
        "id": "362",
        "Title": "Kth Smallest Element in a BST::Link-https://leetcode.com/problems/kth-smallest-element-in-a-bst,",
        "Difficulty": "M",
        "freq": "0.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=5LUXSvjmGCw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0230-kth-smallest-element-in-a-bst.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "uber"
        ]
    },
    "363": {
        "id": "363",
        "Title": "Average Waiting Time::Link-https://leetcode.com/problems/average-waiting-time,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "simulation"
        ],
        "companies": [
            "amazon",
            "de-shaw",
            "google"
        ]
    },
    "364": {
        "id": "364",
        "Title": "Minimum Knight Moves::Link-https://leetcode.com/problems/minimum-knight-moves,",
        "Difficulty": "M",
        "freq": "0.25",
        "others": [
            "grind169"
        ],
        "topics": [
            "breadth-first-search"
        ],
        "companies": [
            "citadel",
            "facebook",
            "linkedin",
            "microsoft"
        ]
    },
    "365": {
        "id": "365",
        "Title": "Distinct Subsequences::Link-https://leetcode.com/problems/distinct-subsequences,",
        "Difficulty": "H",
        "freq": "0.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=-RDzMJ33nx8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0115-distinct-subsequences.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "google",
            "microsoft",
            "oracle"
        ]
    },
    "366": {
        "id": "366",
        "Title": "Minimum Swaps to Group All 1's Together::Link-https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "sliding-window"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "367": {
        "id": "367",
        "Title": "Shuffle an Array::Link-https://leetcode.com/problems/shuffle-an-array,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "linkedin",
            "microsoft",
            "uber"
        ]
    },
    "368": {
        "id": "368",
        "Title": "Shortest Way to Form String::Link-https://leetcode.com/problems/shortest-way-to-form-string,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "greedy",
            "string",
            "two-pointers"
        ],
        "companies": [
            "pinterest"
        ]
    },
    "369": {
        "id": "369",
        "Title": "Grumpy Bookstore Owner::Link-https://leetcode.com/problems/grumpy-bookstore-owner,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "370": {
        "id": "370",
        "Title": "Find the Safest Path in a Grid::Link-https://leetcode.com/problems/find-the-safest-path-in-a-grid,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "binary-search",
            "breadth-first-search",
            "matrix",
            "union-find"
        ],
        "companies": [
            "google"
        ]
    },
    "371": {
        "id": "371",
        "Title": "Remove Duplicates from Sorted Array II::Link-https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii,",
        "Difficulty": "M",
        "freq": "0.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ycAq8iqh0TI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0080-remove-duplicates-from-sorted-array-ii.py,",
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google",
            "tcs"
        ]
    },
    "372": {
        "id": "372",
        "Title": "Count Binary Substrings::Link-https://leetcode.com/problems/count-binary-substrings,",
        "Difficulty": "E",
        "freq": "0.25",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "ibm",
            "salesforce"
        ]
    },
    "373": {
        "id": "373",
        "Title": "Length of Longest Subarray With at Most K Frequency::Link-https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "citadel",
            "google",
            "tiktok",
            "uber"
        ]
    },
    "374": {
        "id": "374",
        "Title": "Odd Even Linked List::Link-https://leetcode.com/problems/odd-even-linked-list,",
        "Difficulty": "M",
        "freq": "0.25",
        "others": [
            "grind169"
        ],
        "topics": [
            "linked-list"
        ],
        "companies": [
            "amazon",
            "microsoft",
            "oracle"
        ]
    },
    "375": {
        "id": "375",
        "Title": "Binary Search::Link-https://leetcode.com/problems/binary-search,",
        "Difficulty": "E",
        "freq": "0.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=s4DPM8ct1pI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0704-binary-search.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook",
            "microsoft"
        ]
    },
    "376": {
        "id": "376",
        "Title": "Find the Length of the Longest Common Prefix::Link-https://leetcode.com/problems/find-the-length-of-the-longest-common-prefix,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "hash-table",
            "string",
            "trie"
        ],
        "companies": [
            "tiktok",
            "uber"
        ]
    },
    "377": {
        "id": "377",
        "Title": "Partition List::Link-https://leetcode.com/problems/partition-list,",
        "Difficulty": "M",
        "freq": "0.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=KT1iUciJr4g,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0086-partition-list.py,",
        "topics": [
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "378": {
        "id": "378",
        "Title": "Peak Index in a Mountain Array::Link-https://leetcode.com/problems/peak-index-in-a-mountain-array,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "de-shaw",
            "google"
        ]
    },
    "379": {
        "id": "379",
        "Title": "Path Sum III::Link-https://leetcode.com/problems/path-sum-iii,",
        "Difficulty": "M",
        "freq": "0.25",
        "others": [
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "apple",
            "facebook",
            "microsoft"
        ]
    },
    "380": {
        "id": "380",
        "Title": "Construct Quad Tree::Link-https://leetcode.com/problems/construct-quad-tree,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "divide-and-conquer",
            "matrix",
            "tree"
        ],
        "companies": [
            "uber"
        ]
    },
    "381": {
        "id": "381",
        "Title": "Remove Invalid Parentheses::Link-https://leetcode.com/problems/remove-invalid-parentheses,",
        "Difficulty": "H",
        "freq": "0.25",
        "topics": [
            "backtracking",
            "breadth-first-search",
            "string"
        ],
        "companies": [
            "facebook",
            "tiktok"
        ]
    },
    "382": {
        "id": "382",
        "Title": "Find Pivot Index::Link-https://leetcode.com/problems/find-pivot-index,",
        "Difficulty": "E",
        "freq": "0.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=u89i60lYx8U,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0724-find-pivot-index.py,",
        "topics": [
            "array",
            "prefix-sum"
        ],
        "companies": [
            "facebook",
            "microsoft",
            "nvidia"
        ]
    },
    "383": {
        "id": "383",
        "Title": "Reverse Pairs::Link-https://leetcode.com/problems/reverse-pairs,",
        "Difficulty": "H",
        "freq": "0.25",
        "topics": [
            "array",
            "binary-indexed-tree",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "segment-tree"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "384": {
        "id": "384",
        "Title": "Minimum Number of Pushes to Type Word II::Link-https://leetcode.com/problems/minimum-number-of-pushes-to-type-word-ii,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "counting",
            "greedy",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon",
            "de-shaw"
        ]
    },
    "385": {
        "id": "385",
        "Title": "Path Sum II::Link-https://leetcode.com/problems/path-sum-ii,",
        "Difficulty": "M",
        "freq": "0.25",
        "others": [
            "grind169"
        ],
        "topics": [
            "backtracking",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook",
            "oracle"
        ]
    },
    "386": {
        "id": "386",
        "Title": "Range Sum Query - Immutable::Link-https://leetcode.com/problems/range-sum-query-immutable,",
        "Difficulty": "E",
        "freq": "0.25",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=2pndAmo_sMA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0303-range-sum-query-immutable.py,",
        "topics": [
            "array",
            "design",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "387": {
        "id": "387",
        "Title": "Number of Islands II::Link-https://leetcode.com/problems/number-of-islands-ii,",
        "Difficulty": "H",
        "freq": "0.25",
        "topics": [
            "array",
            "hash-table",
            "union-find"
        ],
        "companies": [
            "tiktok",
            "uber"
        ]
    },
    "388": {
        "id": "388",
        "Title": "Linked List Cycle II::Link-https://leetcode.com/problems/linked-list-cycle-ii,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "hash-table",
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "389": {
        "id": "389",
        "Title": "Minimum Cost to Hire K Workers::Link-https://leetcode.com/problems/minimum-cost-to-hire-k-workers,",
        "Difficulty": "H",
        "freq": "0.25",
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "390": {
        "id": "390",
        "Title": "Maximum Points You Can Obtain from Cards::Link-https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "prefix-sum",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "microsoft",
            "tiktok"
        ]
    },
    "391": {
        "id": "391",
        "Title": "Add Edges to Make Degrees of All Nodes Even::Link-https://leetcode.com/problems/add-edges-to-make-degrees-of-all-nodes-even,",
        "Difficulty": "H",
        "freq": "0.25",
        "topics": [
            "graph",
            "hash-table"
        ],
        "companies": [
            "uber"
        ]
    },
    "392": {
        "id": "392",
        "Title": "Minimum One Bit Operations to Make Integers Zero::Link-https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero,",
        "Difficulty": "H",
        "freq": "0.25",
        "topics": [
            "bit-manipulation",
            "dynamic-programming",
            "memoization"
        ],
        "companies": [
            "oracle"
        ]
    },
    "393": {
        "id": "393",
        "Title": "Minimum Operations to Write the Letter Y on a Grid::Link-https://leetcode.com/problems/minimum-operations-to-write-the-letter-y-on-a-grid,",
        "Difficulty": "M",
        "freq": "0.25",
        "topics": [
            "array",
            "counting",
            "hash-table",
            "matrix"
        ],
        "companies": [
            "uber"
        ]
    },
    "394": {
        "id": "394",
        "Title": "Frog Jump::Link-https://leetcode.com/problems/frog-jump,",
        "Difficulty": "H",
        "freq": "0.22",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "google",
            "tiktok"
        ]
    },
    "395": {
        "id": "395",
        "Title": "Battleships in a Board::Link-https://leetcode.com/problems/battleships-in-a-board,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "array",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "facebook",
            "google",
            "tinkoff"
        ]
    },
    "396": {
        "id": "396",
        "Title": "Palindrome Pairs::Link-https://leetcode.com/problems/palindrome-pairs,",
        "Difficulty": "H",
        "freq": "0.22",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "hash-table",
            "string",
            "trie"
        ],
        "companies": [
            "airbnb"
        ]
    },
    "397": {
        "id": "397",
        "Title": "Reconstruct Itinerary::Link-https://leetcode.com/problems/reconstruct-itinerary,",
        "Difficulty": "H",
        "freq": "0.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ZyB_gQ8vqGA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0332-reconstruct-itinerary.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "depth-first-search",
            "graph"
        ],
        "companies": [
            "amazon",
            "facebook",
            "pinterest"
        ]
    },
    "398": {
        "id": "398",
        "Title": "Flatten a Multilevel Doubly Linked List::Link-https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "depth-first-search",
            "linked-list"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "facebook"
        ]
    },
    "399": {
        "id": "399",
        "Title": "H-Index::Link-https://leetcode.com/problems/h-index,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "400": {
        "id": "400",
        "Title": "Encode and Decode Strings::Link-https://leetcode.com/problems/encode-and-decode-strings,",
        "Difficulty": "M",
        "freq": "0.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=B1k_sxOSgv8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0271-encode-and-decode-strings.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "design",
            "string"
        ],
        "companies": [
            "facebook",
            "google",
            "microsoft",
            "snowflake"
        ]
    },
    "401": {
        "id": "401",
        "Title": "01 Matrix::Link-https://leetcode.com/problems/01-matrix,",
        "Difficulty": "M",
        "freq": "0.22",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "google",
            "microsoft",
            "tiktok"
        ]
    },
    "402": {
        "id": "402",
        "Title": "Graph Valid Tree::Link-https://leetcode.com/problems/graph-valid-tree,",
        "Difficulty": "M",
        "freq": "0.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=bXsUuownnoQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0261-graph-valid-tree.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "google",
            "linkedin",
            "microsoft"
        ]
    },
    "403": {
        "id": "403",
        "Title": "Fraction Addition and Subtraction::Link-https://leetcode.com/problems/fraction-addition-and-subtraction,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "math",
            "simulation",
            "string"
        ],
        "companies": [
            "amazon",
            "ixl",
            "zopsmart"
        ]
    },
    "404": {
        "id": "404",
        "Title": "Delete and Earn::Link-https://leetcode.com/problems/delete-and-earn,",
        "Difficulty": "M",
        "freq": "0.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=7FCemBxvGw0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0740-delete-and-earn.py,",
        "topics": [
            "array",
            "dynamic-programming",
            "hash-table"
        ],
        "companies": [
            "citadel",
            "google",
            "microsoft"
        ]
    },
    "405": {
        "id": "405",
        "Title": "All Paths From Source to Target::Link-https://leetcode.com/problems/all-paths-from-source-to-target,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "backtracking",
            "breadth-first-search",
            "depth-first-search",
            "graph"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "microsoft"
        ]
    },
    "406": {
        "id": "406",
        "Title": "Guess the Word::Link-https://leetcode.com/problems/guess-the-word,",
        "Difficulty": "H",
        "freq": "0.22",
        "topics": [
            "array",
            "math",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "407": {
        "id": "407",
        "Title": "Online Stock Span::Link-https://leetcode.com/problems/online-stock-span,",
        "Difficulty": "M",
        "freq": "0.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=slYh0ZNEqSw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0901-online-stock-span.py,",
        "topics": [
            "design",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "408": {
        "id": "408",
        "Title": "Fruit Into Baskets::Link-https://leetcode.com/problems/fruit-into-baskets,",
        "Difficulty": "M",
        "freq": "0.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=yYtaV0G3mWQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0904-fruit-into-baskets.py,",
        "topics": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "adobe",
            "facebook",
            "microsoft",
            "walmart-labs"
        ]
    },
    "409": {
        "id": "409",
        "Title": "Sort Array By Parity::Link-https://leetcode.com/problems/sort-array-by-parity,",
        "Difficulty": "E",
        "freq": "0.22",
        "topics": [
            "array",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "facebook",
            "google",
            "microsoft"
        ]
    },
    "410": {
        "id": "410",
        "Title": "Largest Time for Given Digits::Link-https://leetcode.com/problems/largest-time-for-given-digits,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "array",
            "enumeration",
            "string"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "411": {
        "id": "411",
        "Title": "Minimum Area Rectangle II::Link-https://leetcode.com/problems/minimum-area-rectangle-ii,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "array",
            "geometry",
            "math"
        ],
        "companies": [
            "google"
        ]
    },
    "412": {
        "id": "412",
        "Title": "Distribute Coins in Binary Tree::Link-https://leetcode.com/problems/distribute-coins-in-binary-tree,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "413": {
        "id": "413",
        "Title": "Greatest Common Divisor of Strings::Link-https://leetcode.com/problems/greatest-common-divisor-of-strings,",
        "Difficulty": "E",
        "freq": "0.22",
        "topics": [
            "math",
            "string"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "414": {
        "id": "414",
        "Title": "Number of Steps to Reduce a Number in Binary Representation to One::Link-https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "bit-manipulation",
            "string"
        ],
        "companies": [
            "google",
            "microsoft"
        ]
    },
    "415": {
        "id": "415",
        "Title": "Diagonal Traverse II::Link-https://leetcode.com/problems/diagonal-traverse-ii,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "array",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "facebook"
        ]
    },
    "416": {
        "id": "416",
        "Title": "Minimum Time to Collect All Apples in a Tree::Link-https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "417": {
        "id": "417",
        "Title": "The kth Factor of n::Link-https://leetcode.com/problems/the-kth-factor-of-n,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "math",
            "number-theory"
        ],
        "companies": [
            "amazon",
            "salesforce"
        ]
    },
    "418": {
        "id": "418",
        "Title": "Count Sub Islands::Link-https://leetcode.com/problems/count-sub-islands,",
        "Difficulty": "M",
        "freq": "0.22",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=mLpW3qfbNJ8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1905-count-sub-islands.py,",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix",
            "union-find"
        ],
        "companies": [
            "doordash"
        ]
    },
    "419": {
        "id": "419",
        "Title": "Maximum Number of Points with Cost::Link-https://leetcode.com/problems/maximum-number-of-points-with-cost,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "420": {
        "id": "420",
        "Title": "Minimum Number of Operations to Make Array Empty::Link-https://leetcode.com/problems/minimum-number-of-operations-to-make-array-empty,",
        "Difficulty": "M",
        "freq": "0.22",
        "topics": [
            "array",
            "counting",
            "greedy",
            "hash-table"
        ],
        "companies": [
            "amazon"
        ]
    },
    "421": {
        "id": "421",
        "Title": "Number of Operations to Make Network Connected::Link-https://leetcode.com/problems/number-of-operations-to-make-network-connected,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "amazon",
            "google",
            "ibm"
        ]
    },
    "422": {
        "id": "422",
        "Title": "Employee Free Time::Link-https://leetcode.com/problems/employee-free-time,",
        "Difficulty": "H",
        "freq": "0.19",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "423": {
        "id": "423",
        "Title": "Most Stones Removed with Same Row or Column::Link-https://leetcode.com/problems/most-stones-removed-with-same-row-or-column,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "depth-first-search",
            "graph",
            "hash-table",
            "union-find"
        ],
        "companies": [
            "google",
            "phonepe",
            "tiktok"
        ]
    },
    "424": {
        "id": "424",
        "Title": "Design Search Autocomplete System::Link-https://leetcode.com/problems/design-search-autocomplete-system,",
        "Difficulty": "H",
        "freq": "0.19",
        "topics": [
            "depth-first-search",
            "design",
            "heap-priority-queue",
            "sorting",
            "string",
            "trie"
        ],
        "companies": [
            "amazon",
            "citadel",
            "pinterest"
        ]
    },
    "425": {
        "id": "425",
        "Title": "Simple Bank System::Link-https://leetcode.com/problems/simple-bank-system,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "design",
            "hash-table",
            "simulation"
        ],
        "companies": [
            "airbnb"
        ]
    },
    "426": {
        "id": "426",
        "Title": "Find Duplicate Subtrees::Link-https://leetcode.com/problems/find-duplicate-subtrees,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "google",
            "microsoft",
            "yandex"
        ]
    },
    "427": {
        "id": "427",
        "Title": "K-diff Pairs in an Array::Link-https://leetcode.com/problems/k-diff-pairs-in-an-array,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "binary-search",
            "hash-table",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "apple",
            "google"
        ]
    },
    "428": {
        "id": "428",
        "Title": "Swim in Rising Water::Link-https://leetcode.com/problems/swim-in-rising-water,",
        "Difficulty": "H",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=amvrKlMLuGY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0778-swim-in-rising-water.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "binary-search",
            "breadth-first-search",
            "depth-first-search",
            "heap-priority-queue",
            "matrix",
            "union-find"
        ],
        "companies": [
            "de-shaw",
            "google",
            "uber"
        ]
    },
    "429": {
        "id": "429",
        "Title": "Maximum Population Year::Link-https://leetcode.com/problems/maximum-population-year,",
        "Difficulty": "E",
        "freq": "0.19",
        "topics": [
            "array",
            "counting",
            "prefix-sum"
        ],
        "companies": [
            "facebook",
            "google",
            "zoho"
        ]
    },
    "430": {
        "id": "430",
        "Title": "Remove Duplicates from Sorted List::Link-https://leetcode.com/problems/remove-duplicates-from-sorted-list,",
        "Difficulty": "E",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=p10f-VpO4nE,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0083-remove-duplicates-from-sorted-list.py,",
        "topics": [
            "linked-list"
        ],
        "companies": [
            "adobe",
            "amazon",
            "google"
        ]
    },
    "431": {
        "id": "431",
        "Title": "Reverse Bits::Link-https://leetcode.com/problems/reverse-bits,",
        "Difficulty": "E",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=UcoN6UjAI64,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0190-reverse-bits.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "bit-manipulation",
            "divide-and-conquer"
        ],
        "companies": [
            "apple",
            "facebook",
            "google"
        ]
    },
    "432": {
        "id": "432",
        "Title": "Sort Characters By Frequency::Link-https://leetcode.com/problems/sort-characters-by-frequency,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "counting",
            "hash-table",
            "heap-priority-queue",
            "sorting",
            "string"
        ],
        "companies": [
            "google",
            "microsoft",
            "tcs"
        ]
    },
    "433": {
        "id": "433",
        "Title": "Minimum Deletions to Make String Balanced::Link-https://leetcode.com/problems/minimum-deletions-to-make-string-balanced,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "dynamic-programming",
            "stack",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "434": {
        "id": "434",
        "Title": "Friends Of Appropriate Ages::Link-https://leetcode.com/problems/friends-of-appropriate-ages,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "binary-search",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "facebook"
        ]
    },
    "435": {
        "id": "435",
        "Title": "Single Number III::Link-https://leetcode.com/problems/single-number-iii,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "bit-manipulation"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "436": {
        "id": "436",
        "Title": "My Calendar I::Link-https://leetcode.com/problems/my-calendar-i,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "binary-search",
            "design",
            "ordered-set",
            "segment-tree"
        ],
        "companies": [
            "uber"
        ]
    },
    "437": {
        "id": "437",
        "Title": "Optimal Partition of String::Link-https://leetcode.com/problems/optimal-partition-of-string,",
        "Difficulty": "M",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=CKZPdiXiQf0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/2405-optimal-partition-of-string.py,",
        "topics": [
            "greedy",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "438": {
        "id": "438",
        "Title": "Maximum Number of Accepted Invitations::Link-https://leetcode.com/problems/maximum-number-of-accepted-invitations,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "depth-first-search",
            "graph",
            "matrix"
        ],
        "companies": [
            "google",
            "uber"
        ]
    },
    "439": {
        "id": "439",
        "Title": "Magnetic Force Between Two Balls::Link-https://leetcode.com/problems/magnetic-force-between-two-balls,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "binary-search",
            "sorting"
        ],
        "companies": [
            "apple",
            "google",
            "salesforce"
        ]
    },
    "440": {
        "id": "440",
        "Title": "Longest String Chain::Link-https://leetcode.com/problems/longest-string-chain,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "dynamic-programming",
            "hash-table",
            "sorting",
            "string",
            "two-pointers"
        ],
        "companies": [
            "atlassian",
            "citadel"
        ]
    },
    "441": {
        "id": "441",
        "Title": "Remove Duplicate Letters::Link-https://leetcode.com/problems/remove-duplicate-letters,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "greedy",
            "monotonic-stack",
            "stack",
            "string"
        ],
        "companies": [
            "microsoft",
            "oracle"
        ]
    },
    "442": {
        "id": "442",
        "Title": "Find All Possible Recipes from Given Supplies::Link-https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "graph",
            "hash-table",
            "string",
            "topological-sort"
        ],
        "companies": [
            "google",
            "microsoft"
        ]
    },
    "443": {
        "id": "443",
        "Title": "Divide Nodes Into the Maximum Number of Groups::Link-https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups,",
        "Difficulty": "H",
        "freq": "0.19",
        "topics": [
            "breadth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "uber"
        ]
    },
    "444": {
        "id": "444",
        "Title": "Number of Good Pairs::Link-https://leetcode.com/problems/number-of-good-pairs,",
        "Difficulty": "E",
        "freq": "0.19",
        "topics": [
            "array",
            "counting",
            "hash-table",
            "math"
        ],
        "companies": [
            "amazon",
            "apple",
            "google"
        ]
    },
    "445": {
        "id": "445",
        "Title": "Largest Divisible Subset::Link-https://leetcode.com/problems/largest-divisible-subset,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "dynamic-programming",
            "math",
            "sorting"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "446": {
        "id": "446",
        "Title": "Line Reflection::Link-https://leetcode.com/problems/line-reflection,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "hash-table",
            "math"
        ],
        "companies": [
            "yandex"
        ]
    },
    "447": {
        "id": "447",
        "Title": "Pass the Pillow::Link-https://leetcode.com/problems/pass-the-pillow,",
        "Difficulty": "E",
        "freq": "0.19",
        "topics": [
            "math",
            "simulation"
        ],
        "companies": [
            "google"
        ]
    },
    "448": {
        "id": "448",
        "Title": "Minimum Number of Days to Make m Bouquets::Link-https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "bloomberg",
            "facebook",
            "google"
        ]
    },
    "449": {
        "id": "449",
        "Title": "Missing Element in Sorted Array::Link-https://leetcode.com/problems/missing-element-in-sorted-array,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "facebook"
        ]
    },
    "450": {
        "id": "450",
        "Title": "Range Sum Query 2D - Immutable::Link-https://leetcode.com/problems/range-sum-query-2d-immutable,",
        "Difficulty": "M",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=KE8MQuwE2yA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0304-range-sum-query-2d-immutable.py,",
        "topics": [
            "array",
            "design",
            "matrix",
            "prefix-sum"
        ],
        "companies": [
            "facebook"
        ]
    },
    "451": {
        "id": "451",
        "Title": "Running Sum of 1d Array::Link-https://leetcode.com/problems/running-sum-of-1d-array,",
        "Difficulty": "E",
        "freq": "0.19",
        "topics": [
            "array",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "bloomberg",
            "google"
        ]
    },
    "452": {
        "id": "452",
        "Title": "Number of Connected Components in an Undirected Graph::Link-https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph,",
        "Difficulty": "M",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=8f1XPm4WOUc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0323-number-of-connected-components-in-an-undirected-graph.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "453": {
        "id": "453",
        "Title": "Sort List::Link-https://leetcode.com/problems/sort-list,",
        "Difficulty": "M",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=TGveA1oFhrc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0148-sort-list.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "divide-and-conquer",
            "linked-list",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "facebook",
            "google",
            "tiktok"
        ]
    },
    "454": {
        "id": "454",
        "Title": "K-th Smallest Prime Fraction::Link-https://leetcode.com/problems/k-th-smallest-prime-fraction,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "binary-search",
            "heap-priority-queue",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "google",
            "microsoft"
        ]
    },
    "455": {
        "id": "455",
        "Title": "Shortest Unsorted Continuous Subarray::Link-https://leetcode.com/problems/shortest-unsorted-continuous-subarray,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "greedy",
            "monotonic-stack",
            "sorting",
            "stack",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "456": {
        "id": "456",
        "Title": "Minimum Number of Operations to Make X and Y Equal::Link-https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "breadth-first-search",
            "dynamic-programming",
            "memoization"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "457": {
        "id": "457",
        "Title": "Minimum Number of Taps to Open to Water a Garden::Link-https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden,",
        "Difficulty": "H",
        "freq": "0.19",
        "topics": [
            "array",
            "dynamic-programming",
            "greedy"
        ],
        "companies": [
            "amazon",
            "salesforce"
        ]
    },
    "458": {
        "id": "458",
        "Title": "Check if Word Can Be Placed In Crossword::Link-https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "enumeration",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    },
    "459": {
        "id": "459",
        "Title": "Maximum Number of Ways to Partition an Array::Link-https://leetcode.com/problems/maximum-number-of-ways-to-partition-an-array,",
        "Difficulty": "H",
        "freq": "0.19",
        "topics": [
            "array",
            "counting",
            "enumeration",
            "hash-table",
            "prefix-sum"
        ],
        "companies": [
            "google"
        ]
    },
    "460": {
        "id": "460",
        "Title": "Smallest Common Region::Link-https://leetcode.com/problems/smallest-common-region,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "string",
            "tree"
        ],
        "companies": [
            "airbnb",
            "tiktok"
        ]
    },
    "461": {
        "id": "461",
        "Title": "Score of Parentheses::Link-https://leetcode.com/problems/score-of-parentheses,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "bloomberg",
            "tiktok"
        ]
    },
    "462": {
        "id": "462",
        "Title": "Car Fleet::Link-https://leetcode.com/problems/car-fleet,",
        "Difficulty": "M",
        "freq": "0.19",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Pr6T-3yB9RM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0853-car-fleet.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "monotonic-stack",
            "sorting",
            "stack"
        ],
        "companies": [
            "google",
            "infosys"
        ]
    },
    "463": {
        "id": "463",
        "Title": "Delete Node in a Linked List::Link-https://leetcode.com/problems/delete-node-in-a-linked-list,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "linked-list"
        ],
        "companies": [
            "amazon",
            "microsoft",
            "oracle"
        ]
    },
    "464": {
        "id": "464",
        "Title": "Number of Digit One::Link-https://leetcode.com/problems/number-of-digit-one,",
        "Difficulty": "H",
        "freq": "0.19",
        "topics": [
            "dynamic-programming",
            "math",
            "recursion"
        ],
        "companies": [
            "amazon",
            "google",
            "salesforce"
        ]
    },
    "465": {
        "id": "465",
        "Title": "Path with Maximum Gold::Link-https://leetcode.com/problems/path-with-maximum-gold,",
        "Difficulty": "M",
        "freq": "0.19",
        "topics": [
            "array",
            "backtracking",
            "matrix"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "466": {
        "id": "466",
        "Title": "Reaching Points::Link-https://leetcode.com/problems/reaching-points,",
        "Difficulty": "H",
        "freq": "0.19",
        "topics": [
            "math"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "467": {
        "id": "467",
        "Title": "Surrounded Regions::Link-https://leetcode.com/problems/surrounded-regions,",
        "Difficulty": "M",
        "freq": "0.16",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=9z2BunfoZ5Y,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0130-surrounded-regions.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix",
            "union-find"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "468": {
        "id": "468",
        "Title": "Permutation Sequence::Link-https://leetcode.com/problems/permutation-sequence,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "math",
            "recursion"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "469": {
        "id": "469",
        "Title": "132 Pattern::Link-https://leetcode.com/problems/132-pattern,",
        "Difficulty": "M",
        "freq": "0.16",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=q5ANAl8Z458,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0456-132-pattern.py,",
        "topics": [
            "array",
            "binary-search",
            "monotonic-stack",
            "ordered-set",
            "stack"
        ],
        "companies": [
            "amazon",
            "tiktok"
        ]
    },
    "470": {
        "id": "470",
        "Title": "Transpose Matrix::Link-https://leetcode.com/problems/transpose-matrix,",
        "Difficulty": "E",
        "freq": "0.16",
        "topics": [
            "array",
            "matrix",
            "simulation"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "471": {
        "id": "471",
        "Title": "Task Scheduler II::Link-https://leetcode.com/problems/task-scheduler-ii,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "array",
            "hash-table",
            "simulation"
        ],
        "companies": [
            "nvidia",
            "uber"
        ]
    },
    "472": {
        "id": "472",
        "Title": "Kids With the Greatest Number of Candies::Link-https://leetcode.com/problems/kids-with-the-greatest-number-of-candies,",
        "Difficulty": "E",
        "freq": "0.16",
        "topics": [
            "array"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "473": {
        "id": "473",
        "Title": "Interleaving String::Link-https://leetcode.com/problems/interleaving-string,",
        "Difficulty": "M",
        "freq": "0.16",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150"
        ],
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "apple",
            "google",
            "walmart-labs"
        ]
    },
    "474": {
        "id": "474",
        "Title": "Patching Array::Link-https://leetcode.com/problems/patching-array,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "amazon",
            "uber"
        ]
    },
    "475": {
        "id": "475",
        "Title": "Stock Price Fluctuation ::Link-https://leetcode.com/problems/stock-price-fluctuation,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "design",
            "hash-table",
            "heap-priority-queue",
            "ordered-set"
        ],
        "companies": [
            "atlassian"
        ]
    },
    "476": {
        "id": "476",
        "Title": "Maximum Depth of N-ary Tree::Link-https://leetcode.com/problems/maximum-depth-of-n-ary-tree,",
        "Difficulty": "E",
        "freq": "0.16",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "datadog"
        ]
    },
    "477": {
        "id": "477",
        "Title": "Max Points on a Line::Link-https://leetcode.com/problems/max-points-on-a-line,",
        "Difficulty": "H",
        "freq": "0.16",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Bb9lOXUOnFw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0149-max-points-on-a-line.py,",
        "topics": [
            "array",
            "geometry",
            "hash-table",
            "math"
        ],
        "companies": [
            "amazon",
            "google",
            "nvidia"
        ]
    },
    "478": {
        "id": "478",
        "Title": "Amount of Time for Binary Tree to Be Infected::Link-https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "amazon",
            "flipkart"
        ]
    },
    "479": {
        "id": "479",
        "Title": "Maximum Score Words Formed by Letters::Link-https://leetcode.com/problems/maximum-score-words-formed-by-letters,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation",
            "bitmask",
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "amazon",
            "google",
            "infosys"
        ]
    },
    "480": {
        "id": "480",
        "Title": "Angle Between Hands of a Clock::Link-https://leetcode.com/problems/angle-between-hands-of-a-clock,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "math"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "481": {
        "id": "481",
        "Title": "Find K-th Smallest Pair Distance::Link-https://leetcode.com/problems/find-k-th-smallest-pair-distance,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "array",
            "binary-search",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "482": {
        "id": "482",
        "Title": "Number of Flowers in Full Bloom::Link-https://leetcode.com/problems/number-of-flowers-in-full-bloom,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "array",
            "binary-search",
            "hash-table",
            "ordered-set",
            "prefix-sum",
            "sorting"
        ],
        "companies": [
            "oracle",
            "uber"
        ]
    },
    "483": {
        "id": "483",
        "Title": "Subarrays with K Different Integers::Link-https://leetcode.com/problems/subarrays-with-k-different-integers,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "array",
            "counting",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "microsoft",
            "oracle"
        ]
    },
    "484": {
        "id": "484",
        "Title": "Find the Winner of the Circular Game::Link-https://leetcode.com/problems/find-the-winner-of-the-circular-game,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "array",
            "math",
            "queue",
            "recursion",
            "simulation"
        ],
        "companies": [
            "facebook",
            "goldman-sachs"
        ]
    },
    "485": {
        "id": "485",
        "Title": "Check Completeness of a Binary Tree::Link-https://leetcode.com/problems/check-completeness-of-a-binary-tree,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "486": {
        "id": "486",
        "Title": "Maximum Width of Binary Tree::Link-https://leetcode.com/problems/maximum-width-of-binary-tree,",
        "Difficulty": "M",
        "freq": "0.16",
        "others": [
            "grind169"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "tiktok",
            "uber"
        ]
    },
    "487": {
        "id": "487",
        "Title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance::Link-https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "dynamic-programming",
            "graph",
            "shortest-path"
        ],
        "companies": [
            "amazon",
            "facebook",
            "microsoft"
        ]
    },
    "488": {
        "id": "488",
        "Title": "Jewels and Stones::Link-https://leetcode.com/problems/jewels-and-stones,",
        "Difficulty": "E",
        "freq": "0.16",
        "topics": [
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "489": {
        "id": "489",
        "Title": "Two Sum II - Input Array Is Sorted::Link-https://leetcode.com/problems/two-sum-ii-input-array-is-sorted,",
        "Difficulty": "M",
        "freq": "0.16",
        "NeetCode": "Vid::Link-t,Code::Link-h,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "binary-search",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "490": {
        "id": "490",
        "Title": "Remove Zero Sum Consecutive Nodes from Linked List::Link-https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "hash-table",
            "linked-list"
        ],
        "companies": [
            "amazon",
            "apple"
        ]
    },
    "491": {
        "id": "491",
        "Title": "Largest BST Subtree::Link-https://leetcode.com/problems/largest-bst-subtree,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "dynamic-programming",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "492": {
        "id": "492",
        "Title": "Word Ladder II::Link-https://leetcode.com/problems/word-ladder-ii,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "backtracking",
            "breadth-first-search",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook",
            "lyft"
        ]
    },
    "493": {
        "id": "493",
        "Title": "Substring with Concatenation of All Words::Link-https://leetcode.com/problems/substring-with-concatenation-of-all-words,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "494": {
        "id": "494",
        "Title": "Maximum Sum of Distinct Subarrays With Length K::Link-https://leetcode.com/problems/maximum-sum-of-distinct-subarrays-with-length-k,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "facebook",
            "nvidia"
        ]
    },
    "495": {
        "id": "495",
        "Title": "Number of Students Unable to Eat Lunch::Link-https://leetcode.com/problems/number-of-students-unable-to-eat-lunch,",
        "Difficulty": "E",
        "freq": "0.16",
        "topics": [
            "array",
            "queue",
            "simulation",
            "stack"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "496": {
        "id": "496",
        "Title": "Make Array Non-decreasing or Non-increasing::Link-https://leetcode.com/problems/make-array-non-decreasing-or-non-increasing,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "dynamic-programming",
            "greedy"
        ],
        "companies": [
            "oracle",
            "tiktok"
        ]
    },
    "497": {
        "id": "497",
        "Title": "Number of Good Leaf Nodes Pairs::Link-https://leetcode.com/problems/number-of-good-leaf-nodes-pairs,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "498": {
        "id": "498",
        "Title": "Find if Path Exists in Graph::Link-https://leetcode.com/problems/find-if-path-exists-in-graph,",
        "Difficulty": "E",
        "freq": "0.16",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "amazon",
            "facebook",
            "google"
        ]
    },
    "499": {
        "id": "499",
        "Title": "Minimum Number of Increments on Subarrays to Form a Target Array::Link-https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "array",
            "dynamic-programming",
            "greedy",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "google"
        ]
    },
    "500": {
        "id": "500",
        "Title": "Baseball Game::Link-https://leetcode.com/problems/baseball-game,",
        "Difficulty": "E",
        "freq": "0.16",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Id_tqGdsZQI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0682-baseball-game.py,",
        "topics": [
            "array",
            "simulation",
            "stack"
        ],
        "companies": [
            "google",
            "turing"
        ]
    },
    "501": {
        "id": "501",
        "Title": "Heaters::Link-https://leetcode.com/problems/heaters,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "array",
            "binary-search",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "tiktok"
        ]
    },
    "502": {
        "id": "502",
        "Title": "Design a Text Editor::Link-https://leetcode.com/problems/design-a-text-editor,",
        "Difficulty": "H",
        "freq": "0.16",
        "topics": [
            "design",
            "linked-list",
            "simulation",
            "stack",
            "string"
        ],
        "companies": [
            "salesforce"
        ]
    },
    "503": {
        "id": "503",
        "Title": "Merge In Between Linked Lists::Link-https://leetcode.com/problems/merge-in-between-linked-lists,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "linked-list"
        ],
        "companies": [
            "arista-networks",
            "facebook",
            "microsoft"
        ]
    },
    "504": {
        "id": "504",
        "Title": "Partition Array for Maximum Sum::Link-https://leetcode.com/problems/partition-array-for-maximum-sum,",
        "Difficulty": "M",
        "freq": "0.16",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "facebook"
        ]
    },
    "505": {
        "id": "505",
        "Title": "Count Nodes Equal to Average of Subtree::Link-https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook",
            "microsoft"
        ]
    },
    "506": {
        "id": "506",
        "Title": "Search in Rotated Sorted Array II::Link-https://leetcode.com/problems/search-in-rotated-sorted-array-ii,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "507": {
        "id": "507",
        "Title": "Special Array II::Link-https://leetcode.com/problems/special-array-ii,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "binary-search",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "508": {
        "id": "508",
        "Title": "Sort the Jumbled Numbers::Link-https://leetcode.com/problems/sort-the-jumbled-numbers,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "509": {
        "id": "509",
        "Title": "Maximum Frequency Stack::Link-https://leetcode.com/problems/maximum-frequency-stack,",
        "Difficulty": "H",
        "freq": "0.14",
        "others": [
            "grind169"
        ],
        "topics": [
            "design",
            "hash-table",
            "ordered-set",
            "stack"
        ],
        "companies": [
            "microsoft",
            "tiktok"
        ]
    },
    "510": {
        "id": "510",
        "Title": "Assign Cookies::Link-https://leetcode.com/problems/assign-cookies,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array",
            "greedy",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon"
        ]
    },
    "511": {
        "id": "511",
        "Title": "Find the Maximum Length of Valid Subsequence II::Link-https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "512": {
        "id": "512",
        "Title": "Minimum Number of Arrows to Burst Balloons::Link-https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "amazon",
            "apple"
        ]
    },
    "513": {
        "id": "513",
        "Title": "Generate Binary Strings Without Adjacent Zeros::Link-https://leetcode.com/problems/generate-binary-strings-without-adjacent-zeros,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "bit-manipulation",
            "recursion",
            "string"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "514": {
        "id": "514",
        "Title": "Remove Outermost Parentheses::Link-https://leetcode.com/problems/remove-outermost-parentheses,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "515": {
        "id": "515",
        "Title": "Maximum Total Importance of Roads::Link-https://leetcode.com/problems/maximum-total-importance-of-roads,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "graph",
            "greedy",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "516": {
        "id": "516",
        "Title": "Minimum Obstacle Removal to Reach Corner::Link-https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner,",
        "Difficulty": "H",
        "freq": "0.14",
        "topics": [
            "array",
            "breadth-first-search",
            "graph",
            "heap-priority-queue",
            "matrix",
            "shortest-path"
        ],
        "companies": [
            "google",
            "tiktok"
        ]
    },
    "517": {
        "id": "517",
        "Title": "Monotonic Array::Link-https://leetcode.com/problems/monotonic-array,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array"
        ],
        "companies": [
            "facebook",
            "yandex"
        ]
    },
    "518": {
        "id": "518",
        "Title": "Add Two Numbers II::Link-https://leetcode.com/problems/add-two-numbers-ii,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "linked-list",
            "math",
            "stack"
        ],
        "companies": [
            "bloomberg",
            "microsoft"
        ]
    },
    "519": {
        "id": "519",
        "Title": "Longest Increasing Subsequence II::Link-https://leetcode.com/problems/longest-increasing-subsequence-ii,",
        "Difficulty": "H",
        "freq": "0.14",
        "topics": [
            "array",
            "binary-indexed-tree",
            "divide-and-conquer",
            "dynamic-programming",
            "queue",
            "segment-tree"
        ],
        "companies": [
            "google"
        ]
    },
    "520": {
        "id": "520",
        "Title": "Combinations::Link-https://leetcode.com/problems/combinations,",
        "Difficulty": "M",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=q0s6m7AiM7o,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0077-combinations.py,",
        "topics": [
            "backtracking"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "521": {
        "id": "521",
        "Title": "Bitwise ORs of Subarrays::Link-https://leetcode.com/problems/bitwise-ors-of-subarrays,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "bit-manipulation",
            "dynamic-programming"
        ],
        "companies": [
            "tcs"
        ]
    },
    "522": {
        "id": "522",
        "Title": "Count Palindromic Subsequences::Link-https://leetcode.com/problems/count-palindromic-subsequences,",
        "Difficulty": "H",
        "freq": "0.14",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "salesforce"
        ]
    },
    "523": {
        "id": "523",
        "Title": "Minimum Falling Path Sum::Link-https://leetcode.com/problems/minimum-falling-path-sum,",
        "Difficulty": "M",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=b_F3mz9l-uQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0931-minimum-falling-path-sum.py,",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    },
    "524": {
        "id": "524",
        "Title": "Find the Prefix Common Array of Two Arrays::Link-https://leetcode.com/problems/find-the-prefix-common-array-of-two-arrays,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "bit-manipulation",
            "hash-table"
        ],
        "companies": [
            "yandex"
        ]
    },
    "525": {
        "id": "525",
        "Title": "Number of Senior Citizens::Link-https://leetcode.com/problems/number-of-senior-citizens,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array",
            "string"
        ],
        "companies": [
            "bloomberg",
            "google"
        ]
    },
    "526": {
        "id": "526",
        "Title": "Possible Bipartition::Link-https://leetcode.com/problems/possible-bipartition,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "union-find"
        ],
        "companies": [
            "tiktok",
            "uber"
        ]
    },
    "527": {
        "id": "527",
        "Title": "Create Maximum Number::Link-https://leetcode.com/problems/create-maximum-number,",
        "Difficulty": "H",
        "freq": "0.14",
        "topics": [
            "array",
            "greedy",
            "monotonic-stack",
            "stack",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "flipkart"
        ]
    },
    "528": {
        "id": "528",
        "Title": "Find K Pairs with Smallest Sums::Link-https://leetcode.com/problems/find-k-pairs-with-smallest-sums,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "heap-priority-queue"
        ],
        "companies": [
            "google",
            "microsoft"
        ]
    },
    "529": {
        "id": "529",
        "Title": "Maximum Length of Semi-Decreasing Subarrays::Link-https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "monotonic-stack",
            "sorting",
            "stack"
        ],
        "companies": [
            "google"
        ]
    },
    "530": {
        "id": "530",
        "Title": "Shortest and Lexicographically Smallest Beautiful String::Link-https://leetcode.com/problems/shortest-and-lexicographically-smallest-beautiful-string,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "sliding-window",
            "string"
        ],
        "companies": [
            "ibm"
        ]
    },
    "531": {
        "id": "531",
        "Title": "Minimum Equal Sum of Two Arrays After Replacing Zeros::Link-https://leetcode.com/problems/minimum-equal-sum-of-two-arrays-after-replacing-zeros,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "citadel"
        ]
    },
    "532": {
        "id": "532",
        "Title": "Find Maximum Non-decreasing Array Length::Link-https://leetcode.com/problems/find-maximum-non-decreasing-array-length,",
        "Difficulty": "H",
        "freq": "0.14",
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming",
            "monotonic-stack",
            "queue",
            "stack"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "533": {
        "id": "533",
        "Title": "The Skyline Problem::Link-https://leetcode.com/problems/the-skyline-problem,",
        "Difficulty": "H",
        "freq": "0.14",
        "topics": [
            "array",
            "binary-indexed-tree",
            "divide-and-conquer",
            "heap-priority-queue",
            "ordered-set",
            "segment-tree"
        ],
        "companies": [
            "amazon",
            "uber"
        ]
    },
    "534": {
        "id": "534",
        "Title": "Maximum XOR of Two Numbers in an Array::Link-https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "bit-manipulation",
            "hash-table",
            "trie"
        ],
        "companies": [
            "goldman-sachs",
            "google"
        ]
    },
    "535": {
        "id": "535",
        "Title": "Relative Sort Array::Link-https://leetcode.com/problems/relative-sort-array,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "536": {
        "id": "536",
        "Title": "N-th Tribonacci Number::Link-https://leetcode.com/problems/n-th-tribonacci-number,",
        "Difficulty": "E",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=3lpNp5Ojvrw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1137-n-th-tribonacci-number.py,",
        "topics": [
            "dynamic-programming",
            "math",
            "memoization"
        ],
        "companies": [
            "facebook",
            "tcs"
        ]
    },
    "537": {
        "id": "537",
        "Title": "Buddy Strings::Link-https://leetcode.com/problems/buddy-strings,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "hash-table",
            "string"
        ],
        "companies": [
            "doordash"
        ]
    },
    "538": {
        "id": "538",
        "Title": "Invert Binary Tree::Link-https://leetcode.com/problems/invert-binary-tree,",
        "Difficulty": "E",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=OnSn2XEQ4MY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0226-invert-binary-tree.py,",
        "others": [
            "neet150",
            "grind75",
            "grind169",
            "blind75"
        ],
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "539": {
        "id": "539",
        "Title": "Bag of Tokens::Link-https://leetcode.com/problems/bag-of-tokens,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "greedy",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "adobe",
            "apple"
        ]
    },
    "540": {
        "id": "540",
        "Title": "Flatten Nested List Iterator::Link-https://leetcode.com/problems/flatten-nested-list-iterator,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "depth-first-search",
            "design",
            "queue",
            "stack",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "541": {
        "id": "541",
        "Title": "Smallest Range Covering Elements from K Lists::Link-https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists,",
        "Difficulty": "H",
        "freq": "0.14",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "greedy",
            "hash-table",
            "heap-priority-queue",
            "sliding-window",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "542": {
        "id": "542",
        "Title": "Convert Sorted List to Binary Search Tree::Link-https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "divide-and-conquer",
            "linked-list",
            "tree"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "543": {
        "id": "543",
        "Title": "Range Addition II::Link-https://leetcode.com/problems/range-addition-ii,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "ixl"
        ]
    },
    "544": {
        "id": "544",
        "Title": "Permutations II::Link-https://leetcode.com/problems/permutations-ii,",
        "Difficulty": "M",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=qhBVWf0YafA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0047-permutations-ii.py,",
        "topics": [
            "array",
            "backtracking"
        ],
        "companies": [
            "linkedin",
            "microsoft"
        ]
    },
    "545": {
        "id": "545",
        "Title": "Spiral Matrix III::Link-https://leetcode.com/problems/spiral-matrix-iii,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "matrix",
            "simulation"
        ],
        "companies": [
            "google"
        ]
    },
    "546": {
        "id": "546",
        "Title": "Pancake Sorting::Link-https://leetcode.com/problems/pancake-sorting,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "greedy",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "microsoft",
            "oracle"
        ]
    },
    "547": {
        "id": "547",
        "Title": "Sum of Nodes with Even-Valued Grandparent::Link-https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook",
            "salesforce"
        ]
    },
    "548": {
        "id": "548",
        "Title": "Open the Lock::Link-https://leetcode.com/problems/open-the-lock,",
        "Difficulty": "M",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Pzg3bCDY87w,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0752-open-the-lock.py,",
        "topics": [
            "array",
            "breadth-first-search",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "549": {
        "id": "549",
        "Title": "IP to CIDR::Link-https://leetcode.com/problems/ip-to-cidr,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "bit-manipulation",
            "string"
        ],
        "companies": [
            "databricks"
        ]
    },
    "550": {
        "id": "550",
        "Title": "Shortest Word Distance II::Link-https://leetcode.com/problems/shortest-word-distance-ii,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "design",
            "hash-table",
            "string",
            "two-pointers"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "551": {
        "id": "551",
        "Title": "Design a Stack With Increment Operation::Link-https://leetcode.com/problems/design-a-stack-with-increment-operation,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "design",
            "stack"
        ],
        "companies": [
            "google"
        ]
    },
    "552": {
        "id": "552",
        "Title": "Balance a Binary Search Tree::Link-https://leetcode.com/problems/balance-a-binary-search-tree,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "divide-and-conquer",
            "greedy",
            "tree"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "553": {
        "id": "553",
        "Title": "Shuffle the Array::Link-https://leetcode.com/problems/shuffle-the-array,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "554": {
        "id": "554",
        "Title": "Range Sum of Sorted Subarray Sums::Link-https://leetcode.com/problems/range-sum-of-sorted-subarray-sums,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "binary-search",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "555": {
        "id": "555",
        "Title": "One Edit Distance::Link-https://leetcode.com/problems/one-edit-distance,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "yandex"
        ]
    },
    "556": {
        "id": "556",
        "Title": "Design Parking System::Link-https://leetcode.com/problems/design-parking-system,",
        "Difficulty": "E",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=d5zCHesOrSk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1603-design-parking-system.py,",
        "topics": [
            "counting",
            "design",
            "simulation"
        ],
        "companies": [
            "amazon",
            "uber"
        ]
    },
    "557": {
        "id": "557",
        "Title": "Special Array With X Elements Greater Than or Equal X::Link-https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array",
            "binary-search",
            "sorting"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "558": {
        "id": "558",
        "Title": "Construct Binary Tree from String::Link-https://leetcode.com/problems/construct-binary-tree-from-string,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "stack",
            "string",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "559": {
        "id": "559",
        "Title": "Populating Next Right Pointers in Each Node II::Link-https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "linked-list",
            "tree"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "560": {
        "id": "560",
        "Title": "Maximum Units on a Truck::Link-https://leetcode.com/problems/maximum-units-on-a-truck,",
        "Difficulty": "E",
        "freq": "0.14",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "amazon",
            "arista-networks"
        ]
    },
    "561": {
        "id": "561",
        "Title": "Design Authentication Manager::Link-https://leetcode.com/problems/design-authentication-manager,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "design",
            "hash-table",
            "linked-list"
        ],
        "companies": [
            "oracle"
        ]
    },
    "562": {
        "id": "562",
        "Title": "Bulls and Cows::Link-https://leetcode.com/problems/bulls-and-cows,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "counting",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "563": {
        "id": "563",
        "Title": "Nearest Exit from Entrance in Maze::Link-https://leetcode.com/problems/nearest-exit-from-entrance-in-maze,",
        "Difficulty": "M",
        "freq": "0.14",
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "564": {
        "id": "564",
        "Title": "Rearrange String k Distance Apart::Link-https://leetcode.com/problems/rearrange-string-k-distance-apart,",
        "Difficulty": "H",
        "freq": "0.14",
        "topics": [
            "counting",
            "greedy",
            "hash-table",
            "heap-priority-queue",
            "sorting",
            "string"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "565": {
        "id": "565",
        "Title": "Triangle::Link-https://leetcode.com/problems/triangle,",
        "Difficulty": "M",
        "freq": "0.14",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=OM1MTokvxs4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0120-triangle.py,",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "amazon"
        ]
    },
    "566": {
        "id": "566",
        "Title": "Parsing A Boolean Expression::Link-https://leetcode.com/problems/parsing-a-boolean-expression,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "recursion",
            "stack",
            "string"
        ],
        "companies": [
            "google",
            "microsoft"
        ]
    },
    "567": {
        "id": "567",
        "Title": "Shortest Uncommon Substring in an Array::Link-https://leetcode.com/problems/shortest-uncommon-substring-in-an-array,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "hash-table",
            "string",
            "trie"
        ],
        "companies": [
            "airbnb"
        ]
    },
    "568": {
        "id": "568",
        "Title": "Number of Visible People in a Queue::Link-https://leetcode.com/problems/number-of-visible-people-in-a-queue,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "doordash"
        ]
    },
    "569": {
        "id": "569",
        "Title": "Dungeon Game::Link-https://leetcode.com/problems/dungeon-game,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "570": {
        "id": "570",
        "Title": "Meeting Rooms::Link-https://leetcode.com/problems/meeting-rooms,",
        "Difficulty": "E",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=2VLwjvODQbA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0253-meeting-rooms.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "apple",
            "oracle"
        ]
    },
    "571": {
        "id": "571",
        "Title": "Minimum Common Value::Link-https://leetcode.com/problems/minimum-common-value,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-search",
            "hash-table",
            "two-pointers"
        ],
        "companies": [
            "amazon"
        ]
    },
    "572": {
        "id": "572",
        "Title": "Employee Importance::Link-https://leetcode.com/problems/employee-importance,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "573": {
        "id": "573",
        "Title": "All Possible Full Binary Trees::Link-https://leetcode.com/problems/all-possible-full-binary-trees,",
        "Difficulty": "M",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=nZtrZPTTCAo,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0894-all-possible-full-binary-trees.py,",
        "topics": [
            "binary-tree",
            "dynamic-programming",
            "memoization",
            "recursion",
            "tree"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "574": {
        "id": "574",
        "Title": "Read N Characters Given read4 II - Call Multiple Times::Link-https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "simulation"
        ],
        "companies": [
            "lyft"
        ]
    },
    "575": {
        "id": "575",
        "Title": "Time Needed to Buy Tickets::Link-https://leetcode.com/problems/time-needed-to-buy-tickets,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array",
            "queue",
            "simulation"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "576": {
        "id": "576",
        "Title": "Count of Smaller Numbers After Self::Link-https://leetcode.com/problems/count-of-smaller-numbers-after-self,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-indexed-tree",
            "binary-search",
            "divide-and-conquer",
            "ordered-set",
            "segment-tree"
        ],
        "companies": [
            "google",
            "microsoft"
        ]
    },
    "577": {
        "id": "577",
        "Title": "Minimum Amount of Time to Collect Garbage::Link-https://leetcode.com/problems/minimum-amount-of-time-to-collect-garbage,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "prefix-sum",
            "string"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "578": {
        "id": "578",
        "Title": "Crawler Log Folder::Link-https://leetcode.com/problems/crawler-log-folder,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "flipkart"
        ]
    },
    "579": {
        "id": "579",
        "Title": "Find the Number of Good Pairs II::Link-https://leetcode.com/problems/find-the-number-of-good-pairs-ii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "hash-table"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "580": {
        "id": "580",
        "Title": "Second Minimum Time to Reach Destination::Link-https://leetcode.com/problems/second-minimum-time-to-reach-destination,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "breadth-first-search",
            "graph",
            "shortest-path"
        ],
        "companies": [
            "google",
            "microsoft"
        ]
    },
    "581": {
        "id": "581",
        "Title": "Minimum Cost For Tickets::Link-https://leetcode.com/problems/minimum-cost-for-tickets,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "facebook",
            "turing"
        ]
    },
    "582": {
        "id": "582",
        "Title": "Largest Palindromic Number::Link-https://leetcode.com/problems/largest-palindromic-number,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "counting",
            "greedy",
            "hash-table",
            "string"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "583": {
        "id": "583",
        "Title": "Construct Smallest Number From DI String::Link-https://leetcode.com/problems/construct-smallest-number-from-di-string,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "backtracking",
            "greedy",
            "stack",
            "string"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "584": {
        "id": "584",
        "Title": "Path With Minimum Effort::Link-https://leetcode.com/problems/path-with-minimum-effort,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-search",
            "breadth-first-search",
            "depth-first-search",
            "heap-priority-queue",
            "matrix",
            "union-find"
        ],
        "companies": [
            "facebook",
            "tiktok"
        ]
    },
    "585": {
        "id": "585",
        "Title": "Ugly Number::Link-https://leetcode.com/problems/ugly-number,",
        "Difficulty": "E",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=M0Zay1Qr9ws,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0263-ugly-number.py,",
        "topics": [
            "math"
        ],
        "companies": [
            "amazon",
            "apple"
        ]
    },
    "586": {
        "id": "586",
        "Title": "Maximize Happiness of Selected Children::Link-https://leetcode.com/problems/maximize-happiness-of-selected-children,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "587": {
        "id": "587",
        "Title": "Palindrome Permutation::Link-https://leetcode.com/problems/palindrome-permutation,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "bit-manipulation",
            "hash-table",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "588": {
        "id": "588",
        "Title": "Unique Binary Search Trees II::Link-https://leetcode.com/problems/unique-binary-search-trees-ii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "backtracking",
            "binary-search-tree",
            "binary-tree",
            "dynamic-programming",
            "tree"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "589": {
        "id": "589",
        "Title": "Remove Duplicates from Sorted List II::Link-https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "bloomberg",
            "microsoft"
        ]
    },
    "590": {
        "id": "590",
        "Title": "Flip String to Monotone Increasing::Link-https://leetcode.com/problems/flip-string-to-monotone-increasing,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "591": {
        "id": "591",
        "Title": "Kth Largest Element in a Stream::Link-https://leetcode.com/problems/kth-largest-element-in-a-stream,",
        "Difficulty": "E",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=hOjcdrqMoQ8,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0703-kth-largest-element-in-a-stream.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "design",
            "heap-priority-queue",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "592": {
        "id": "592",
        "Title": "Determine if Two Strings Are Close::Link-https://leetcode.com/problems/determine-if-two-strings-are-close,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "counting",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon",
            "apple"
        ]
    },
    "593": {
        "id": "593",
        "Title": "Snakes and Ladders::Link-https://leetcode.com/problems/snakes-and-ladders,",
        "Difficulty": "M",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=6lH4nO3JfLk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0909-snakes-and-ladders.py,",
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon",
            "apple"
        ]
    },
    "594": {
        "id": "594",
        "Title": "Remove Comments::Link-https://leetcode.com/problems/remove-comments,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "string"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "595": {
        "id": "595",
        "Title": "Apply Discount to Prices::Link-https://leetcode.com/problems/apply-discount-to-prices,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "596": {
        "id": "596",
        "Title": "Minimum Number of K Consecutive Bit Flips::Link-https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "bit-manipulation",
            "prefix-sum",
            "queue",
            "sliding-window"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "597": {
        "id": "597",
        "Title": "Swapping Nodes in a Linked List::Link-https://leetcode.com/problems/swapping-nodes-in-a-linked-list,",
        "Difficulty": "M",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=4LsrgMyQIjQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1721-swapping-nodes-in-a-linked-list.py,",
        "topics": [
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "598": {
        "id": "598",
        "Title": "Minesweeper::Link-https://leetcode.com/problems/minesweeper,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "facebook"
        ]
    },
    "599": {
        "id": "599",
        "Title": "Peeking Iterator::Link-https://leetcode.com/problems/peeking-iterator,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "design"
        ],
        "companies": [
            "facebook",
            "tiktok"
        ]
    },
    "600": {
        "id": "600",
        "Title": "Number of Ways to Build Sturdy Brick Wall::Link-https://leetcode.com/problems/number-of-ways-to-build-sturdy-brick-wall,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "bit-manipulation",
            "bitmask",
            "dynamic-programming"
        ],
        "companies": [
            "google"
        ]
    },
    "601": {
        "id": "601",
        "Title": "Cousins in Binary Tree::Link-https://leetcode.com/problems/cousins-in-binary-tree,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "microsoft",
            "tiktok"
        ]
    },
    "602": {
        "id": "602",
        "Title": "Rearrange Array Elements by Sign::Link-https://leetcode.com/problems/rearrange-array-elements-by-sign,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "simulation",
            "two-pointers"
        ],
        "companies": [
            "google"
        ]
    },
    "603": {
        "id": "603",
        "Title": "Repeated Substring Pattern::Link-https://leetcode.com/problems/repeated-substring-pattern,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "string",
            "string-matching"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "604": {
        "id": "604",
        "Title": "Russian Doll Envelopes::Link-https://leetcode.com/problems/russian-doll-envelopes,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "605": {
        "id": "605",
        "Title": "Invalid Transactions::Link-https://leetcode.com/problems/invalid-transactions,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "606": {
        "id": "606",
        "Title": "Count Complete Tree Nodes::Link-https://leetcode.com/problems/count-complete-tree-nodes,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "binary-search",
            "binary-tree",
            "bit-manipulation",
            "tree"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "607": {
        "id": "607",
        "Title": "Super Egg Drop::Link-https://leetcode.com/problems/super-egg-drop,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "binary-search",
            "dynamic-programming",
            "math"
        ],
        "companies": [
            "amazon",
            "goldman-sachs"
        ]
    },
    "608": {
        "id": "608",
        "Title": "Relative Ranks::Link-https://leetcode.com/problems/relative-ranks,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "609": {
        "id": "609",
        "Title": "Shortest Path in a Hidden Grid::Link-https://leetcode.com/problems/shortest-path-in-a-hidden-grid,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph"
        ],
        "companies": [
            "facebook"
        ]
    },
    "610": {
        "id": "610",
        "Title": "Maximum Product of Three Numbers::Link-https://leetcode.com/problems/maximum-product-of-three-numbers,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array",
            "math",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "611": {
        "id": "611",
        "Title": "Add One Row to Tree::Link-https://leetcode.com/problems/add-one-row-to-tree,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "612": {
        "id": "612",
        "Title": "Strange Printer::Link-https://leetcode.com/problems/strange-printer,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "google",
            "uber"
        ]
    },
    "613": {
        "id": "613",
        "Title": "Longest Mountain in Array::Link-https://leetcode.com/problems/longest-mountain-in-array,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming",
            "enumeration",
            "two-pointers"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "614": {
        "id": "614",
        "Title": "Stone Game II::Link-https://leetcode.com/problems/stone-game-ii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming",
            "math",
            "prefix-sum"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "615": {
        "id": "615",
        "Title": "Exam Room::Link-https://leetcode.com/problems/exam-room,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "design",
            "heap-priority-queue",
            "ordered-set"
        ],
        "companies": [
            "uber"
        ]
    },
    "616": {
        "id": "616",
        "Title": "Valid Parenthesis String::Link-https://leetcode.com/problems/valid-parenthesis-string,",
        "Difficulty": "M",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=WTzjTskDFMg,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0678-valid-parenthesis-string.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "dynamic-programming",
            "greedy",
            "stack",
            "string"
        ],
        "companies": [
            "amazon",
            "microsoft"
        ]
    },
    "617": {
        "id": "617",
        "Title": "Defanging an IP Address::Link-https://leetcode.com/problems/defanging-an-ip-address,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "618": {
        "id": "618",
        "Title": "Find Nearest Point That Has the Same X or Y Coordinate::Link-https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array"
        ],
        "companies": [
            "doordash"
        ]
    },
    "619": {
        "id": "619",
        "Title": "Element Appearing More Than 25% In Sorted Array::Link-https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array"
        ],
        "companies": [
            "facebook"
        ]
    },
    "620": {
        "id": "620",
        "Title": "N-ary Tree Postorder Traversal::Link-https://leetcode.com/problems/n-ary-tree-postorder-traversal,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "depth-first-search",
            "stack",
            "tree"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "621": {
        "id": "621",
        "Title": "Single Number II::Link-https://leetcode.com/problems/single-number-ii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "bit-manipulation"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "622": {
        "id": "622",
        "Title": "Jump Game III::Link-https://leetcode.com/problems/jump-game-iii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "623": {
        "id": "623",
        "Title": "Delete the Middle Node of a Linked List::Link-https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "linked-list",
            "two-pointers"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "624": {
        "id": "624",
        "Title": "House Robber III::Link-https://leetcode.com/problems/house-robber-iii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "dynamic-programming",
            "tree"
        ],
        "companies": [
            "google",
            "phonepe"
        ]
    },
    "625": {
        "id": "625",
        "Title": "Increasing Triplet Subsequence::Link-https://leetcode.com/problems/increasing-triplet-subsequence,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "amazon",
            "facebook"
        ]
    },
    "626": {
        "id": "626",
        "Title": "Delete Leaves With a Given Value::Link-https://leetcode.com/problems/delete-leaves-with-a-given-value,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon",
            "google"
        ]
    },
    "627": {
        "id": "627",
        "Title": "Find the Difference::Link-https://leetcode.com/problems/find-the-difference,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "bit-manipulation",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "bloomberg",
            "google"
        ]
    },
    "628": {
        "id": "628",
        "Title": "Check if the Sentence Is Pangram::Link-https://leetcode.com/problems/check-if-the-sentence-is-pangram,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "hash-table",
            "string"
        ],
        "companies": [
            "bloomberg",
            "goldman-sachs"
        ]
    },
    "629": {
        "id": "629",
        "Title": "Rank Transform of an Array::Link-https://leetcode.com/problems/rank-transform-of-an-array,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "630": {
        "id": "630",
        "Title": "Longest Absolute File Path::Link-https://leetcode.com/problems/longest-absolute-file-path,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "depth-first-search",
            "stack",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "631": {
        "id": "631",
        "Title": "Count Elements With Maximum Frequency::Link-https://leetcode.com/problems/count-elements-with-maximum-frequency,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "array",
            "counting",
            "hash-table"
        ],
        "companies": [
            "amazon"
        ]
    },
    "632": {
        "id": "632",
        "Title": "Largest Multiple of Three::Link-https://leetcode.com/problems/largest-multiple-of-three,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming",
            "greedy"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "633": {
        "id": "633",
        "Title": "Car Pooling::Link-https://leetcode.com/problems/car-pooling,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "heap-priority-queue",
            "prefix-sum",
            "simulation",
            "sorting"
        ],
        "companies": [
            "facebook",
            "google"
        ]
    },
    "634": {
        "id": "634",
        "Title": "Minimum Number of Food Buckets to Feed the Hamsters::Link-https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "dynamic-programming",
            "greedy",
            "string"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "635": {
        "id": "635",
        "Title": "Goat Latin::Link-https://leetcode.com/problems/goat-latin,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "636": {
        "id": "636",
        "Title": "Cinema Seat Allocation::Link-https://leetcode.com/problems/cinema-seat-allocation,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "bit-manipulation",
            "greedy",
            "hash-table"
        ],
        "companies": [
            "microsoft",
            "zoho"
        ]
    },
    "637": {
        "id": "637",
        "Title": "Count Number of Teams::Link-https://leetcode.com/problems/count-number-of-teams,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-indexed-tree",
            "dynamic-programming",
            "segment-tree"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "638": {
        "id": "638",
        "Title": "Design Underground System::Link-https://leetcode.com/problems/design-underground-system,",
        "Difficulty": "M",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=W5QOLqXskZM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1396-design-underground-system.py,",
        "topics": [
            "design",
            "hash-table",
            "string"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "639": {
        "id": "639",
        "Title": "Sum of Two Integers::Link-https://leetcode.com/problems/sum-of-two-integers,",
        "Difficulty": "M",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=gVUrDV4tZfY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0371-sum-of-two-integers.py,",
        "others": [
            "neet150",
            "blind75"
        ],
        "topics": [
            "bit-manipulation",
            "math"
        ],
        "companies": [
            "apple",
            "google"
        ]
    },
    "640": {
        "id": "640",
        "Title": "Strobogrammatic Number II::Link-https://leetcode.com/problems/strobogrammatic-number-ii,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "recursion",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "641": {
        "id": "641",
        "Title": "Leftmost Column with at Least a One::Link-https://leetcode.com/problems/leftmost-column-with-at-least-a-one,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-search",
            "matrix"
        ],
        "companies": [
            "uber"
        ]
    },
    "642": {
        "id": "642",
        "Title": "First Unique Number::Link-https://leetcode.com/problems/first-unique-number,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "design",
            "hash-table",
            "queue"
        ],
        "companies": [
            "amazon"
        ]
    },
    "643": {
        "id": "643",
        "Title": "Cherry Pickup::Link-https://leetcode.com/problems/cherry-pickup,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "google",
            "snowflake"
        ]
    },
    "644": {
        "id": "644",
        "Title": "Find And Replace in String::Link-https://leetcode.com/problems/find-and-replace-in-string,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "645": {
        "id": "645",
        "Title": "Shortest Palindrome::Link-https://leetcode.com/problems/shortest-palindrome,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "hash-function",
            "rolling-hash",
            "string",
            "string-matching"
        ],
        "companies": [
            "amazon",
            "tiktok"
        ]
    },
    "646": {
        "id": "646",
        "Title": "Best Meeting Point::Link-https://leetcode.com/problems/best-meeting-point,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "math",
            "matrix",
            "sorting"
        ],
        "companies": [
            "doordash"
        ]
    },
    "647": {
        "id": "647",
        "Title": "Longest Non-decreasing Subarray From Two Arrays::Link-https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "citadel"
        ]
    },
    "648": {
        "id": "648",
        "Title": "Allocate Mailboxes::Link-https://leetcode.com/problems/allocate-mailboxes,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "dynamic-programming",
            "math",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "649": {
        "id": "649",
        "Title": "Guess Number Higher or Lower::Link-https://leetcode.com/problems/guess-number-higher-or-lower,",
        "Difficulty": "E",
        "freq": "0.11",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=xW4QsTtaCa4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0374-guess-number-higher-or-lower.py,",
        "topics": [
            "binary-search"
        ],
        "companies": [
            "amazon",
            "bloomberg"
        ]
    },
    "650": {
        "id": "650",
        "Title": "Minimum Operations to Make Numbers Non-positive::Link-https://leetcode.com/problems/minimum-operations-to-make-numbers-non-positive,",
        "Difficulty": "H",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "citadel"
        ]
    },
    "651": {
        "id": "651",
        "Title": "Lexicographically Smallest Palindrome::Link-https://leetcode.com/problems/lexicographically-smallest-palindrome,",
        "Difficulty": "E",
        "freq": "0.11",
        "topics": [
            "greedy",
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon"
        ]
    },
    "652": {
        "id": "652",
        "Title": "Minimum Operations to Make All Array Elements Equal::Link-https://leetcode.com/problems/minimum-operations-to-make-all-array-elements-equal,",
        "Difficulty": "M",
        "freq": "0.11",
        "topics": [
            "array",
            "binary-search",
            "prefix-sum",
            "sorting"
        ],
        "companies": [
            "jpmorgan"
        ]
    },
    "653": {
        "id": "653",
        "Title": "Minimum Falling Path Sum II::Link-https://leetcode.com/problems/minimum-falling-path-sum-ii,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "amazon"
        ]
    },
    "654": {
        "id": "654",
        "Title": "Keys and Rooms::Link-https://leetcode.com/problems/keys-and-rooms,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph"
        ],
        "companies": [
            "tinkoff"
        ]
    },
    "655": {
        "id": "655",
        "Title": "Longest Ideal Subsequence::Link-https://leetcode.com/problems/longest-ideal-subsequence,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "dynamic-programming",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "656": {
        "id": "656",
        "Title": "Find the Town Judge::Link-https://leetcode.com/problems/find-the-town-judge,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array",
            "graph",
            "hash-table"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "657": {
        "id": "657",
        "Title": "Number of Wonderful Substrings::Link-https://leetcode.com/problems/number-of-wonderful-substrings,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "bit-manipulation",
            "hash-table",
            "prefix-sum",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "658": {
        "id": "658",
        "Title": "Maximize Greatness of an Array::Link-https://leetcode.com/problems/maximize-greatness-of-an-array,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "greedy",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "salesforce"
        ]
    },
    "659": {
        "id": "659",
        "Title": "Maximum Value at a Given Index in a Bounded Array::Link-https://leetcode.com/problems/maximum-value-at-a-given-index-in-a-bounded-array,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "binary-search",
            "greedy"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "660": {
        "id": "660",
        "Title": "Clone Binary Tree With Random Pointer::Link-https://leetcode.com/problems/clone-binary-tree-with-random-pointer,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "661": {
        "id": "661",
        "Title": "Android Unlock Patterns::Link-https://leetcode.com/problems/android-unlock-patterns,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "backtracking",
            "bit-manipulation",
            "bitmask",
            "dynamic-programming"
        ],
        "companies": [
            "google"
        ]
    },
    "662": {
        "id": "662",
        "Title": "Detonate the Maximum Bombs::Link-https://leetcode.com/problems/detonate-the-maximum-bombs,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "geometry",
            "graph",
            "math"
        ],
        "companies": [
            "google"
        ]
    },
    "663": {
        "id": "663",
        "Title": "Construct Binary Search Tree from Preorder Traversal::Link-https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "binary-search-tree",
            "binary-tree",
            "monotonic-stack",
            "stack",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "664": {
        "id": "664",
        "Title": "Counting Bits::Link-https://leetcode.com/problems/counting-bits,",
        "Difficulty": "E",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=RyBM56RIWrM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0338-counting-bits.py,",
        "others": [
            "neet150",
            "grind169",
            "blind75"
        ],
        "topics": [
            "bit-manipulation",
            "dynamic-programming"
        ],
        "companies": [
            "amazon"
        ]
    },
    "665": {
        "id": "665",
        "Title": "Count Ways to Group Overlapping Ranges::Link-https://leetcode.com/problems/count-ways-to-group-overlapping-ranges,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "ibm"
        ]
    },
    "666": {
        "id": "666",
        "Title": "Power of Two::Link-https://leetcode.com/problems/power-of-two,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "bit-manipulation",
            "math",
            "recursion"
        ],
        "companies": [
            "facebook"
        ]
    },
    "667": {
        "id": "667",
        "Title": "Palindrome Permutation II::Link-https://leetcode.com/problems/palindrome-permutation-ii,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "backtracking",
            "hash-table",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "668": {
        "id": "668",
        "Title": "Shortest Path to Get All Keys::Link-https://leetcode.com/problems/shortest-path-to-get-all-keys,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "bit-manipulation",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "airbnb"
        ]
    },
    "669": {
        "id": "669",
        "Title": "Maximum Subsequence Score::Link-https://leetcode.com/problems/maximum-subsequence-score,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "670": {
        "id": "670",
        "Title": "Reformat Date::Link-https://leetcode.com/problems/reformat-date,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "string"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "671": {
        "id": "671",
        "Title": "Closest Binary Search Tree Value II::Link-https://leetcode.com/problems/closest-binary-search-tree-value-ii,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "heap-priority-queue",
            "stack",
            "tree",
            "two-pointers"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "672": {
        "id": "672",
        "Title": "Number of Lines To Write String::Link-https://leetcode.com/problems/number-of-lines-to-write-string,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "673": {
        "id": "673",
        "Title": "Maximum Sum Circular Subarray::Link-https://leetcode.com/problems/maximum-sum-circular-subarray,",
        "Difficulty": "M",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=fxT9KjakYPM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0918-maximum-sum-circular-subarray.py,",
        "topics": [
            "array",
            "divide-and-conquer",
            "dynamic-programming",
            "queue"
        ],
        "companies": [
            "facebook"
        ]
    },
    "674": {
        "id": "674",
        "Title": "Best Time to Buy and Sell Stock III::Link-https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "675": {
        "id": "675",
        "Title": "Paint House::Link-https://leetcode.com/problems/paint-house,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "676": {
        "id": "676",
        "Title": "Find Largest Value in Each Tree Row::Link-https://leetcode.com/problems/find-largest-value-in-each-tree-row,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "677": {
        "id": "677",
        "Title": "Count the Number of Good Subarrays::Link-https://leetcode.com/problems/count-the-number-of-good-subarrays,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "uber"
        ]
    },
    "678": {
        "id": "678",
        "Title": "Time Taken to Cross the Door::Link-https://leetcode.com/problems/time-taken-to-cross-the-door,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "queue",
            "simulation"
        ],
        "companies": [
            "google"
        ]
    },
    "679": {
        "id": "679",
        "Title": "Count Pairs Of Similar Strings::Link-https://leetcode.com/problems/count-pairs-of-similar-strings,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array",
            "bit-manipulation",
            "hash-table",
            "string"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "680": {
        "id": "680",
        "Title": "Binary Tree Upside Down::Link-https://leetcode.com/problems/binary-tree-upside-down,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "681": {
        "id": "681",
        "Title": "Reorder Data in Log Files::Link-https://leetcode.com/problems/reorder-data-in-log-files,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "sorting",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "682": {
        "id": "682",
        "Title": "N-ary Tree Level Order Traversal::Link-https://leetcode.com/problems/n-ary-tree-level-order-traversal,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "breadth-first-search",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "683": {
        "id": "683",
        "Title": "Maximum Number of Intersections on the Chart::Link-https://leetcode.com/problems/maximum-number-of-intersections-on-the-chart,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "binary-indexed-tree",
            "geometry",
            "math"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "684": {
        "id": "684",
        "Title": "Maximum Good People Based on Statements::Link-https://leetcode.com/problems/maximum-good-people-based-on-statements,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation",
            "enumeration"
        ],
        "companies": [
            "oracle"
        ]
    },
    "685": {
        "id": "685",
        "Title": "Kill Process::Link-https://leetcode.com/problems/kill-process,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "686": {
        "id": "686",
        "Title": "Append Characters to String to Make Subsequence::Link-https://leetcode.com/problems/append-characters-to-string-to-make-subsequence,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "greedy",
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon"
        ]
    },
    "687": {
        "id": "687",
        "Title": "Product of the Last K Numbers::Link-https://leetcode.com/problems/product-of-the-last-k-numbers,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "design",
            "math",
            "queue"
        ],
        "companies": [
            "facebook"
        ]
    },
    "688": {
        "id": "688",
        "Title": "Maximum Number of Events That Can Be Attended::Link-https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "689": {
        "id": "689",
        "Title": "Number of Substrings Containing All Three Characters::Link-https://leetcode.com/problems/number-of-substrings-containing-all-three-characters,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "690": {
        "id": "690",
        "Title": "Number of Closed Islands::Link-https://leetcode.com/problems/number-of-closed-islands,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix",
            "union-find"
        ],
        "companies": [
            "google"
        ]
    },
    "691": {
        "id": "691",
        "Title": "Design Twitter::Link-https://leetcode.com/problems/design-twitter,",
        "Difficulty": "M",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=pNichitDD2E,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0355-design-twitter.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "design",
            "hash-table",
            "heap-priority-queue",
            "linked-list"
        ],
        "companies": [
            "coupang"
        ]
    },
    "692": {
        "id": "692",
        "Title": "Find the Median of the Uniqueness Array::Link-https://leetcode.com/problems/find-the-median-of-the-uniqueness-array,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "binary-search",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "amazon"
        ]
    },
    "693": {
        "id": "693",
        "Title": "Maximum Sum BST in Binary Tree::Link-https://leetcode.com/problems/maximum-sum-bst-in-binary-tree,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "dynamic-programming",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "694": {
        "id": "694",
        "Title": "Time Needed to Inform All Employees::Link-https://leetcode.com/problems/time-needed-to-inform-all-employees,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "695": {
        "id": "695",
        "Title": "Min Cost Climbing Stairs::Link-https://leetcode.com/problems/min-cost-climbing-stairs,",
        "Difficulty": "E",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=ktmzAZWkEZ0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0746-min-cost-climbing-stairs.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "google"
        ]
    },
    "696": {
        "id": "696",
        "Title": "Height of Binary Tree After Subtree Removal Queries::Link-https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "697": {
        "id": "697",
        "Title": "Longest Substring with At Most Two Distinct Characters::Link-https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "698": {
        "id": "698",
        "Title": "The Latest Time to Catch a Bus::Link-https://leetcode.com/problems/the-latest-time-to-catch-a-bus,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "binary-search",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "699": {
        "id": "699",
        "Title": "Two City Scheduling::Link-https://leetcode.com/problems/two-city-scheduling,",
        "Difficulty": "M",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=d-B_gk_gJtQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1029-two-city-scheduling.py,",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "700": {
        "id": "700",
        "Title": "Design A Leaderboard::Link-https://leetcode.com/problems/design-a-leaderboard,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "design",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "701": {
        "id": "701",
        "Title": "Largest Positive Integer That Exists With Its Negative::Link-https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array",
            "hash-table",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "amazon"
        ]
    },
    "702": {
        "id": "702",
        "Title": "Rotate String::Link-https://leetcode.com/problems/rotate-string,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "string",
            "string-matching"
        ],
        "companies": [
            "facebook"
        ]
    },
    "703": {
        "id": "703",
        "Title": "Partition to K Equal Sum Subsets::Link-https://leetcode.com/problems/partition-to-k-equal-sum-subsets,",
        "Difficulty": "M",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=mBk4I0X46oI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0698-partition-to-k-equal-sum-subsets.py,",
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation",
            "bitmask",
            "dynamic-programming",
            "memoization"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "704": {
        "id": "704",
        "Title": "Inorder Successor in BST II::Link-https://leetcode.com/problems/inorder-successor-in-bst-ii,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "705": {
        "id": "705",
        "Title": "Max Chunks To Make Sorted II::Link-https://leetcode.com/problems/max-chunks-to-make-sorted-ii,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "greedy",
            "monotonic-stack",
            "sorting",
            "stack"
        ],
        "companies": [
            "apple"
        ]
    },
    "706": {
        "id": "706",
        "Title": "Maximum Vacation Days::Link-https://leetcode.com/problems/maximum-vacation-days,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "datadog"
        ]
    },
    "707": {
        "id": "707",
        "Title": "Replace Words::Link-https://leetcode.com/problems/replace-words,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "hash-table",
            "string",
            "trie"
        ],
        "companies": [
            "google"
        ]
    },
    "708": {
        "id": "708",
        "Title": "Flatten 2D Vector::Link-https://leetcode.com/problems/flatten-2d-vector,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "design",
            "two-pointers"
        ],
        "companies": [
            "airbnb"
        ]
    },
    "709": {
        "id": "709",
        "Title": "Minimize Malware Spread::Link-https://leetcode.com/problems/minimize-malware-spread,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "hash-table",
            "union-find"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "710": {
        "id": "710",
        "Title": "Partition Array Into Three Parts With Equal Sum::Link-https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "facebook"
        ]
    },
    "711": {
        "id": "711",
        "Title": "Find Triangular Sum of an Array::Link-https://leetcode.com/problems/find-triangular-sum-of-an-array,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "combinatorics",
            "math",
            "simulation"
        ],
        "companies": [
            "zoho"
        ]
    },
    "712": {
        "id": "712",
        "Title": "Minimum Genetic Mutation::Link-https://leetcode.com/problems/minimum-genetic-mutation,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "breadth-first-search",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "713": {
        "id": "713",
        "Title": "Rotated Digits::Link-https://leetcode.com/problems/rotated-digits,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "dynamic-programming",
            "math"
        ],
        "companies": [
            "arista-networks"
        ]
    },
    "714": {
        "id": "714",
        "Title": "Network Delay Time::Link-https://leetcode.com/problems/network-delay-time,",
        "Difficulty": "M",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=EaphyqKU4PQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0743-network-delay-time.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "heap-priority-queue",
            "shortest-path"
        ],
        "companies": [
            "amazon"
        ]
    },
    "715": {
        "id": "715",
        "Title": "Count Hills and Valleys in an Array::Link-https://leetcode.com/problems/count-hills-and-valleys-in-an-array,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array"
        ],
        "companies": [
            "facebook"
        ]
    },
    "716": {
        "id": "716",
        "Title": "Maximum Number of Operations to Move Ones to the End::Link-https://leetcode.com/problems/maximum-number-of-operations-to-move-ones-to-the-end,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "counting",
            "greedy",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "717": {
        "id": "717",
        "Title": "Count the Number of Substrings With Dominant Ones::Link-https://leetcode.com/problems/count-the-number-of-substrings-with-dominant-ones,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "enumeration",
            "sliding-window",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "718": {
        "id": "718",
        "Title": "Number of Unique Good Subsequences::Link-https://leetcode.com/problems/number-of-unique-good-subsequences,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "719": {
        "id": "719",
        "Title": "Water and Jug Problem::Link-https://leetcode.com/problems/water-and-jug-problem,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "math"
        ],
        "companies": [
            "google"
        ]
    },
    "720": {
        "id": "720",
        "Title": "Print Binary Tree::Link-https://leetcode.com/problems/print-binary-tree,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "721": {
        "id": "721",
        "Title": "Minimum Number of Moves to Seat Everyone::Link-https://leetcode.com/problems/minimum-number-of-moves-to-seat-everyone,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "722": {
        "id": "722",
        "Title": "Maximum Score From Removing Substrings::Link-https://leetcode.com/problems/maximum-score-from-removing-substrings,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "greedy",
            "stack",
            "string"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "723": {
        "id": "723",
        "Title": "Double a Number Represented as a Linked List::Link-https://leetcode.com/problems/double-a-number-represented-as-a-linked-list,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "linked-list",
            "math",
            "stack"
        ],
        "companies": [
            "google"
        ]
    },
    "724": {
        "id": "724",
        "Title": "Water Bottles II::Link-https://leetcode.com/problems/water-bottles-ii,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "math",
            "simulation"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "725": {
        "id": "725",
        "Title": "Find The K-th Lucky Number::Link-https://leetcode.com/problems/find-the-k-th-lucky-number,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "bit-manipulation",
            "math",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "726": {
        "id": "726",
        "Title": "Merge Two Binary Trees::Link-https://leetcode.com/problems/merge-two-binary-trees,",
        "Difficulty": "E",
        "freq": "0.08",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=QHH6rIK3dDQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0617-merge-two-binary-trees.py,",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "727": {
        "id": "727",
        "Title": "Insert Delete GetRandom O(1) - Duplicates allowed::Link-https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "array",
            "design",
            "hash-table",
            "math"
        ],
        "companies": [
            "facebook"
        ]
    },
    "728": {
        "id": "728",
        "Title": "Shortest Path to Get Food::Link-https://leetcode.com/problems/shortest-path-to-get-food,",
        "Difficulty": "M",
        "freq": "0.08",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "breadth-first-search",
            "matrix"
        ],
        "companies": [
            "doordash"
        ]
    },
    "729": {
        "id": "729",
        "Title": "Valid Triangle Number::Link-https://leetcode.com/problems/valid-triangle-number,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "binary-search",
            "greedy",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "730": {
        "id": "730",
        "Title": "Reachable Nodes In Subdivided Graph::Link-https://leetcode.com/problems/reachable-nodes-in-subdivided-graph,",
        "Difficulty": "H",
        "freq": "0.08",
        "topics": [
            "graph",
            "heap-priority-queue",
            "shortest-path"
        ],
        "companies": [
            "phonepe"
        ]
    },
    "731": {
        "id": "731",
        "Title": "Maximize Total Cost of Alternating Subarrays::Link-https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays,",
        "Difficulty": "M",
        "freq": "0.08",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "google"
        ]
    },
    "732": {
        "id": "732",
        "Title": "DI String Match::Link-https://leetcode.com/problems/di-string-match,",
        "Difficulty": "E",
        "freq": "0.08",
        "topics": [
            "array",
            "greedy",
            "string",
            "two-pointers"
        ],
        "companies": [
            "google"
        ]
    },
    "733": {
        "id": "733",
        "Title": "Rectangle Overlap::Link-https://leetcode.com/problems/rectangle-overlap,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "geometry",
            "math"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "734": {
        "id": "734",
        "Title": "Fair Candy Swap::Link-https://leetcode.com/problems/fair-candy-swap,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "735": {
        "id": "735",
        "Title": "RLE Iterator::Link-https://leetcode.com/problems/rle-iterator,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "counting",
            "design"
        ],
        "companies": [
            "google"
        ]
    },
    "736": {
        "id": "736",
        "Title": "Strong Password Checker::Link-https://leetcode.com/problems/strong-password-checker,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "greedy",
            "heap-priority-queue",
            "string"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "737": {
        "id": "737",
        "Title": "Sentence Screen Fitting::Link-https://leetcode.com/problems/sentence-screen-fitting,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "738": {
        "id": "738",
        "Title": "Third Maximum Number::Link-https://leetcode.com/problems/third-maximum-number,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "739": {
        "id": "739",
        "Title": "Arithmetic Slices::Link-https://leetcode.com/problems/arithmetic-slices,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "amazon"
        ]
    },
    "740": {
        "id": "740",
        "Title": "Flipping an Image::Link-https://leetcode.com/problems/flipping-an-image,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "matrix",
            "simulation",
            "two-pointers"
        ],
        "companies": [
            "google"
        ]
    },
    "741": {
        "id": "741",
        "Title": "Masking Personal Information::Link-https://leetcode.com/problems/masking-personal-information,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "string"
        ],
        "companies": [
            "salesforce"
        ]
    },
    "742": {
        "id": "742",
        "Title": "Find Eventual Safe States::Link-https://leetcode.com/problems/find-eventual-safe-states,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "topological-sort"
        ],
        "companies": [
            "amazon"
        ]
    },
    "743": {
        "id": "743",
        "Title": "Long Pressed Name::Link-https://leetcode.com/problems/long-pressed-name,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "google"
        ]
    },
    "744": {
        "id": "744",
        "Title": "Minimize Malware Spread II::Link-https://leetcode.com/problems/minimize-malware-spread-ii,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "hash-table",
            "union-find"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "745": {
        "id": "745",
        "Title": "Unique Email Addresses::Link-https://leetcode.com/problems/unique-email-addresses,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=TC_xLIWl7qY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0929-unique-email-addresses.py,",
        "topics": [
            "array",
            "hash-table",
            "string"
        ],
        "companies": [
            "apple"
        ]
    },
    "746": {
        "id": "746",
        "Title": "Number of Matching Subsequences::Link-https://leetcode.com/problems/number-of-matching-subsequences,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming",
            "hash-table",
            "sorting",
            "string",
            "trie"
        ],
        "companies": [
            "google"
        ]
    },
    "747": {
        "id": "747",
        "Title": "Number of Recent Calls::Link-https://leetcode.com/problems/number-of-recent-calls,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "design",
            "queue"
        ],
        "companies": [
            "yandex"
        ]
    },
    "748": {
        "id": "748",
        "Title": "Knight Dialer::Link-https://leetcode.com/problems/knight-dialer,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "dynamic-programming"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "749": {
        "id": "749",
        "Title": "Valid Mountain Array::Link-https://leetcode.com/problems/valid-mountain-array,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array"
        ],
        "companies": [
            "amazon"
        ]
    },
    "750": {
        "id": "750",
        "Title": "Rabbits in Forest::Link-https://leetcode.com/problems/rabbits-in-forest,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "hash-table",
            "math"
        ],
        "companies": [
            "amazon"
        ]
    },
    "751": {
        "id": "751",
        "Title": "K-th Symbol in Grammar::Link-https://leetcode.com/problems/k-th-symbol-in-grammar,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "bit-manipulation",
            "math",
            "recursion"
        ],
        "companies": [
            "amazon"
        ]
    },
    "752": {
        "id": "752",
        "Title": "Max Chunks To Make Sorted::Link-https://leetcode.com/problems/max-chunks-to-make-sorted,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "monotonic-stack",
            "sorting",
            "stack"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "753": {
        "id": "753",
        "Title": "Convert Sorted Array to Binary Search Tree::Link-https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=0K0uCMYq5ng,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0108-convert-sorted-array-to-binary-search-tree.py,",
        "others": [
            "grind169"
        ],
        "topics": [
            "array",
            "binary-search-tree",
            "binary-tree",
            "divide-and-conquer",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "754": {
        "id": "754",
        "Title": "Binary Tree Preorder Traversal::Link-https://leetcode.com/problems/binary-tree-preorder-traversal,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=afTpieEZXck,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0144-binary-tree-preorder-traversal.py,",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "stack",
            "tree"
        ],
        "companies": [
            "yahoo"
        ]
    },
    "755": {
        "id": "755",
        "Title": "Partition Labels::Link-https://leetcode.com/problems/partition-labels,",
        "Difficulty": "M",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=B7m8UmZE-vw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0763-partition-labels.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "greedy",
            "hash-table",
            "string",
            "two-pointers"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "756": {
        "id": "756",
        "Title": "Subarray Sums Divisible by K::Link-https://leetcode.com/problems/subarray-sums-divisible-by-k,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "companies": [
            "amazon"
        ]
    },
    "757": {
        "id": "757",
        "Title": "Binary Tree Postorder Traversal::Link-https://leetcode.com/problems/binary-tree-postorder-traversal,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=QhszUQhGGlA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0145-binary-tree-postorder-traversal.py,",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "stack",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "758": {
        "id": "758",
        "Title": "Read N Characters Given Read4::Link-https://leetcode.com/problems/read-n-characters-given-read4,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "simulation"
        ],
        "companies": [
            "amazon"
        ]
    },
    "759": {
        "id": "759",
        "Title": "Recover Binary Search Tree::Link-https://leetcode.com/problems/recover-binary-search-tree,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "760": {
        "id": "760",
        "Title": "Number of Atoms::Link-https://leetcode.com/problems/number-of-atoms,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "hash-table",
            "sorting",
            "stack",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "761": {
        "id": "761",
        "Title": "Candy Crush::Link-https://leetcode.com/problems/candy-crush,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix",
            "simulation",
            "two-pointers"
        ],
        "companies": [
            "uber"
        ]
    },
    "762": {
        "id": "762",
        "Title": "Add to Array-Form of Integer::Link-https://leetcode.com/problems/add-to-array-form-of-integer,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "zoho"
        ]
    },
    "763": {
        "id": "763",
        "Title": "Satisfiability of Equality Equations::Link-https://leetcode.com/problems/satisfiability-of-equality-equations,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "graph",
            "string",
            "union-find"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "764": {
        "id": "764",
        "Title": "Maximum Length of Repeated Subarray::Link-https://leetcode.com/problems/maximum-length-of-repeated-subarray,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming",
            "hash-function",
            "rolling-hash",
            "sliding-window"
        ],
        "companies": [
            "google"
        ]
    },
    "765": {
        "id": "765",
        "Title": "Best Time to Buy and Sell Stock with Transaction Fee::Link-https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "greedy"
        ],
        "companies": [
            "amazon"
        ]
    },
    "766": {
        "id": "766",
        "Title": "Repeated DNA Sequences::Link-https://leetcode.com/problems/repeated-dna-sequences,",
        "Difficulty": "M",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=FzTYfsmtOso,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0187-repeated-dna-sequences.py,",
        "topics": [
            "bit-manipulation",
            "hash-function",
            "hash-table",
            "rolling-hash",
            "sliding-window",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "767": {
        "id": "767",
        "Title": "Minimum Domino Rotations For Equal Row::Link-https://leetcode.com/problems/minimum-domino-rotations-for-equal-row,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy"
        ],
        "companies": [
            "google"
        ]
    },
    "768": {
        "id": "768",
        "Title": "Minimum Substring Partition of Equal Character Frequency::Link-https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "counting",
            "dynamic-programming",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "769": {
        "id": "769",
        "Title": "Minimum Cost to Equalize Array::Link-https://leetcode.com/problems/minimum-cost-to-equalize-array,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "enumeration",
            "greedy"
        ],
        "companies": [
            "amazon"
        ]
    },
    "770": {
        "id": "770",
        "Title": "Find the Maximum Length of Valid Subsequence I::Link-https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "google"
        ]
    },
    "771": {
        "id": "771",
        "Title": "Next Greater Node In Linked List::Link-https://leetcode.com/problems/next-greater-node-in-linked-list,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "linked-list",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "772": {
        "id": "772",
        "Title": "Binary Search Tree to Greater Sum Tree::Link-https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "773": {
        "id": "773",
        "Title": "Insert into a Binary Search Tree::Link-https://leetcode.com/problems/insert-into-a-binary-search-tree,",
        "Difficulty": "M",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Cpg8f79luEA,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0701-insert-into-a-binary-search-tree.py,",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "774": {
        "id": "774",
        "Title": "Search in a Binary Search Tree::Link-https://leetcode.com/problems/search-in-a-binary-search-tree,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "tree"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "775": {
        "id": "775",
        "Title": "Remove Linked List Elements::Link-https://leetcode.com/problems/remove-linked-list-elements,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=JI71sxtHTng,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0203-remove-linked-list-elements.py,",
        "topics": [
            "linked-list",
            "recursion"
        ],
        "companies": [
            "amazon"
        ]
    },
    "776": {
        "id": "776",
        "Title": "Longest Strictly Increasing or Strictly Decreasing Subarray::Link-https://leetcode.com/problems/longest-strictly-increasing-or-strictly-decreasing-subarray,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array"
        ],
        "companies": [
            "yandex"
        ]
    },
    "777": {
        "id": "777",
        "Title": "Minimize Manhattan Distances::Link-https://leetcode.com/problems/minimize-manhattan-distances,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "geometry",
            "math",
            "ordered-set",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "778": {
        "id": "778",
        "Title": "Count Alternating Subarrays::Link-https://leetcode.com/problems/count-alternating-subarrays,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "facebook"
        ]
    },
    "779": {
        "id": "779",
        "Title": "Height Checker::Link-https://leetcode.com/problems/height-checker,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "780": {
        "id": "780",
        "Title": "Next Closest Time::Link-https://leetcode.com/problems/next-closest-time,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "backtracking",
            "enumeration",
            "hash-table",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "781": {
        "id": "781",
        "Title": "Confusing Number::Link-https://leetcode.com/problems/confusing-number,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "math"
        ],
        "companies": [
            "google"
        ]
    },
    "782": {
        "id": "782",
        "Title": "Number of Valid Subarrays::Link-https://leetcode.com/problems/number-of-valid-subarrays,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "amazon"
        ]
    },
    "783": {
        "id": "783",
        "Title": "Duplicate Zeros::Link-https://leetcode.com/problems/duplicate-zeros,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "two-pointers"
        ],
        "companies": [
            "amazon"
        ]
    },
    "784": {
        "id": "784",
        "Title": "Combination Sum III::Link-https://leetcode.com/problems/combination-sum-iii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "backtracking"
        ],
        "companies": [
            "amazon"
        ]
    },
    "785": {
        "id": "785",
        "Title": "24 Game::Link-https://leetcode.com/problems/24-game,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "backtracking",
            "math"
        ],
        "companies": [
            "google"
        ]
    },
    "786": {
        "id": "786",
        "Title": "Shortest Common Supersequence ::Link-https://leetcode.com/problems/shortest-common-supersequence,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "787": {
        "id": "787",
        "Title": "Distribute Candies to People::Link-https://leetcode.com/problems/distribute-candies-to-people,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "math",
            "simulation"
        ],
        "companies": [
            "amazon"
        ]
    },
    "788": {
        "id": "788",
        "Title": "Filling Bookcase Shelves::Link-https://leetcode.com/problems/filling-bookcase-shelves,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "google"
        ]
    },
    "789": {
        "id": "789",
        "Title": "Connecting Cities With Minimum Cost::Link-https://leetcode.com/problems/connecting-cities-with-minimum-cost,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "graph",
            "heap-priority-queue",
            "union-find"
        ],
        "companies": [
            "amazon"
        ]
    },
    "790": {
        "id": "790",
        "Title": "Number of Longest Increasing Subsequence::Link-https://leetcode.com/problems/number-of-longest-increasing-subsequence,",
        "Difficulty": "M",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Tuc-rjJbsXU,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0673-number-of-longest-increasing-subsequence.py,",
        "topics": [
            "array",
            "binary-indexed-tree",
            "dynamic-programming",
            "segment-tree"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "791": {
        "id": "791",
        "Title": "Contains Duplicate III::Link-https://leetcode.com/problems/contains-duplicate-iii,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "ordered-set",
            "sliding-window",
            "sorting"
        ],
        "companies": [
            "yandex"
        ]
    },
    "792": {
        "id": "792",
        "Title": "Number of Dice Rolls With Target Sum::Link-https://leetcode.com/problems/number-of-dice-rolls-with-target-sum,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "dynamic-programming"
        ],
        "companies": [
            "adobe"
        ]
    },
    "793": {
        "id": "793",
        "Title": "Swap For Longest Repeated Character Substring::Link-https://leetcode.com/problems/swap-for-longest-repeated-character-substring,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "794": {
        "id": "794",
        "Title": "Rectangle Area::Link-https://leetcode.com/problems/rectangle-area,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "geometry",
            "math"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "795": {
        "id": "795",
        "Title": "Maximum Number of Balloons::Link-https://leetcode.com/problems/maximum-number-of-balloons,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=G9xeB2-7PqY,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1189-maximum-number-of-balloons.py,",
        "topics": [
            "counting",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "796": {
        "id": "796",
        "Title": "Implement Stack using Queues::Link-https://leetcode.com/problems/implement-stack-using-queues,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=rW4vm0-DLYc,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0225-implement-stack-using-queues.py,",
        "topics": [
            "design",
            "queue",
            "stack"
        ],
        "companies": [
            "amazon"
        ]
    },
    "797": {
        "id": "797",
        "Title": "Critical Connections in a Network::Link-https://leetcode.com/problems/critical-connections-in-a-network,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "depth-first-search",
            "graph"
        ],
        "companies": [
            "google"
        ]
    },
    "798": {
        "id": "798",
        "Title": "Two Sum IV - Input is a BST::Link-https://leetcode.com/problems/two-sum-iv-input-is-a-bst,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree",
            "two-pointers"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "799": {
        "id": "799",
        "Title": "2 Keys Keyboard::Link-https://leetcode.com/problems/2-keys-keyboard,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "dynamic-programming",
            "math"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "800": {
        "id": "800",
        "Title": "Design Skiplist::Link-https://leetcode.com/problems/design-skiplist,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "design",
            "linked-list"
        ],
        "companies": [
            "facebook"
        ]
    },
    "801": {
        "id": "801",
        "Title": "Majority Element II::Link-https://leetcode.com/problems/majority-element-ii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "counting",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "adobe"
        ]
    },
    "802": {
        "id": "802",
        "Title": "Set Mismatch::Link-https://leetcode.com/problems/set-mismatch,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "facebook"
        ]
    },
    "803": {
        "id": "803",
        "Title": "Design Circular Deque::Link-https://leetcode.com/problems/design-circular-deque,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "design",
            "linked-list",
            "queue"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "804": {
        "id": "804",
        "Title": "Decode Ways II::Link-https://leetcode.com/problems/decode-ways-ii,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "phonepe"
        ]
    },
    "805": {
        "id": "805",
        "Title": "Longest Arithmetic Subsequence of Given Difference::Link-https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "hash-table"
        ],
        "companies": [
            "google"
        ]
    },
    "806": {
        "id": "806",
        "Title": "Split a String in Balanced Strings::Link-https://leetcode.com/problems/split-a-string-in-balanced-strings,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "counting",
            "greedy",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "807": {
        "id": "807",
        "Title": "Tree Diameter::Link-https://leetcode.com/problems/tree-diameter,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "topological-sort",
            "tree"
        ],
        "companies": [
            "apple"
        ]
    },
    "808": {
        "id": "808",
        "Title": "Spiral Matrix II::Link-https://leetcode.com/problems/spiral-matrix-ii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix",
            "simulation"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "809": {
        "id": "809",
        "Title": "Find Duplicate File in System::Link-https://leetcode.com/problems/find-duplicate-file-in-system,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "810": {
        "id": "810",
        "Title": "Find Winner on a Tic Tac Toe Game::Link-https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "matrix",
            "simulation"
        ],
        "companies": [
            "apple"
        ]
    },
    "811": {
        "id": "811",
        "Title": "Count Square Submatrices with All Ones::Link-https://leetcode.com/problems/count-square-submatrices-with-all-ones,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    },
    "812": {
        "id": "812",
        "Title": "Group the People Given the Group Size They Belong To::Link-https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table"
        ],
        "companies": [
            "amazon"
        ]
    },
    "813": {
        "id": "813",
        "Title": "Find the Smallest Divisor Given a Threshold::Link-https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search"
        ],
        "companies": [
            "paypal"
        ]
    },
    "814": {
        "id": "814",
        "Title": "Different Ways to Add Parentheses::Link-https://leetcode.com/problems/different-ways-to-add-parentheses,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "dynamic-programming",
            "math",
            "memoization",
            "recursion",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "815": {
        "id": "815",
        "Title": "Find N Unique Integers Sum up to Zero::Link-https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "amazon"
        ]
    },
    "816": {
        "id": "816",
        "Title": "Verbal Arithmetic Puzzle::Link-https://leetcode.com/problems/verbal-arithmetic-puzzle,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "backtracking",
            "math",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "817": {
        "id": "817",
        "Title": "Decrypt String from Alphabet to Integer Mapping::Link-https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "818": {
        "id": "818",
        "Title": "Minimum Insertion Steps to Make a String Palindrome::Link-https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "819": {
        "id": "819",
        "Title": "Decompress Run-Length Encoded List::Link-https://leetcode.com/problems/decompress-run-length-encoded-list,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array"
        ],
        "companies": [
            "amazon"
        ]
    },
    "820": {
        "id": "820",
        "Title": "Break a Palindrome::Link-https://leetcode.com/problems/break-a-palindrome,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "greedy",
            "string"
        ],
        "companies": [
            "nvidia"
        ]
    },
    "821": {
        "id": "821",
        "Title": "Sort the Matrix Diagonally::Link-https://leetcode.com/problems/sort-the-matrix-diagonally,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "822": {
        "id": "822",
        "Title": "Lucky Numbers in a Matrix::Link-https://leetcode.com/problems/lucky-numbers-in-a-matrix,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix"
        ],
        "companies": [
            "cisco"
        ]
    },
    "823": {
        "id": "823",
        "Title": "Maximum Performance of a Team::Link-https://leetcode.com/problems/maximum-performance-of-a-team,",
        "Difficulty": "H",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Y7UTvogADH0,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1383-maximum-performance-of-a-team.py,",
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "de-shaw"
        ]
    },
    "824": {
        "id": "824",
        "Title": "Count Submatrices With Equal Frequency of X and Y::Link-https://leetcode.com/problems/count-submatrices-with-equal-frequency-of-x-and-y,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix",
            "prefix-sum"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "825": {
        "id": "825",
        "Title": "Count Triplets That Can Form Two Arrays of Equal XOR::Link-https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "hash-table",
            "math",
            "prefix-sum"
        ],
        "companies": [
            "google"
        ]
    },
    "826": {
        "id": "826",
        "Title": "Maximum Number of Vowels in a Substring of Given Length::Link-https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length,",
        "Difficulty": "M",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=kEfPSzgL-Ss,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1456-maximum-number-of-vowels-in-a-substring-of-given-length.py,",
        "topics": [
            "sliding-window",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "827": {
        "id": "827",
        "Title": "Pseudo-Palindromic Paths in a Binary Tree::Link-https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "binary-tree",
            "bit-manipulation",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "828": {
        "id": "828",
        "Title": "Make Two Arrays Equal by Reversing Subarrays::Link-https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "829": {
        "id": "829",
        "Title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts::Link-https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "ixl"
        ]
    },
    "830": {
        "id": "830",
        "Title": "Find the Sum of Subsequence Powers::Link-https://leetcode.com/problems/find-the-sum-of-subsequence-powers,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "831": {
        "id": "831",
        "Title": "Subrectangle Queries::Link-https://leetcode.com/problems/subrectangle-queries,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "design",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    },
    "832": {
        "id": "832",
        "Title": "Nth Digit::Link-https://leetcode.com/problems/nth-digit,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "binary-search",
            "math"
        ],
        "companies": [
            "google"
        ]
    },
    "833": {
        "id": "833",
        "Title": "Longest Common Suffix Queries::Link-https://leetcode.com/problems/longest-common-suffix-queries,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "string",
            "trie"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "834": {
        "id": "834",
        "Title": "Path Crossing::Link-https://leetcode.com/problems/path-crossing,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "835": {
        "id": "835",
        "Title": "Water Bottles::Link-https://leetcode.com/problems/water-bottles,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "math",
            "simulation"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "836": {
        "id": "836",
        "Title": "Diameter of N-Ary Tree::Link-https://leetcode.com/problems/diameter-of-n-ary-tree,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "doordash"
        ]
    },
    "837": {
        "id": "837",
        "Title": "Get the Maximum Score::Link-https://leetcode.com/problems/get-the-maximum-score,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "greedy",
            "two-pointers"
        ],
        "companies": [
            "oracle"
        ]
    },
    "838": {
        "id": "838",
        "Title": "Binary Tree Paths::Link-https://leetcode.com/problems/binary-tree-paths,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "backtracking",
            "binary-tree",
            "depth-first-search",
            "string",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "839": {
        "id": "839",
        "Title": "Add Digits::Link-https://leetcode.com/problems/add-digits,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "math",
            "number-theory",
            "simulation"
        ],
        "companies": [
            "google"
        ]
    },
    "840": {
        "id": "840",
        "Title": "Minimum Insertions to Balance a Parentheses String::Link-https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "greedy",
            "stack",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "841": {
        "id": "841",
        "Title": "Make The String Great::Link-https://leetcode.com/problems/make-the-string-great,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "accenture"
        ]
    },
    "842": {
        "id": "842",
        "Title": "Minimum Number of Days to Disconnect Island::Link-https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "amazon"
        ]
    },
    "843": {
        "id": "843",
        "Title": "Matrix Diagonal Sum::Link-https://leetcode.com/problems/matrix-diagonal-sum,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix"
        ],
        "companies": [
            "amazon"
        ]
    },
    "844": {
        "id": "844",
        "Title": "Remove Max Number of Edges to Keep Graph Fully Traversable::Link-https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "graph",
            "union-find"
        ],
        "companies": [
            "google"
        ]
    },
    "845": {
        "id": "845",
        "Title": "Find Valid Matrix Given Row and Column Sums::Link-https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    },
    "846": {
        "id": "846",
        "Title": "Find Servers That Handled Most Number of Requests::Link-https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "heap-priority-queue",
            "ordered-set"
        ],
        "companies": [
            "amazon"
        ]
    },
    "847": {
        "id": "847",
        "Title": "Maximum Nesting Depth of the Parentheses::Link-https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "stack",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "848": {
        "id": "848",
        "Title": "Find the Maximum Sum of Node Values::Link-https://leetcode.com/problems/find-the-maximum-sum-of-node-values,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "dynamic-programming",
            "greedy",
            "sorting",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "849": {
        "id": "849",
        "Title": "Lowest Common Ancestor of a Binary Tree II::Link-https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "850": {
        "id": "850",
        "Title": "Minimum Jumps to Reach Home::Link-https://leetcode.com/problems/minimum-jumps-to-reach-home,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "breadth-first-search",
            "dynamic-programming"
        ],
        "companies": [
            "amazon"
        ]
    },
    "851": {
        "id": "851",
        "Title": "Richest Customer Wealth::Link-https://leetcode.com/problems/richest-customer-wealth,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix"
        ],
        "companies": [
            "amazon"
        ]
    },
    "852": {
        "id": "852",
        "Title": "Find the Most Competitive Subsequence::Link-https://leetcode.com/problems/find-the-most-competitive-subsequence,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "monotonic-stack",
            "stack"
        ],
        "companies": [
            "uber"
        ]
    },
    "853": {
        "id": "853",
        "Title": "Max Number of K-Sum Pairs::Link-https://leetcode.com/problems/max-number-of-k-sum-pairs,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "sorting",
            "two-pointers"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "854": {
        "id": "854",
        "Title": "Find the Highest Altitude::Link-https://leetcode.com/problems/find-the-highest-altitude,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "prefix-sum"
        ],
        "companies": [
            "amazon"
        ]
    },
    "855": {
        "id": "855",
        "Title": "Minimum Length of String After Deleting Similar Ends::Link-https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "string",
            "two-pointers"
        ],
        "companies": [
            "amazon"
        ]
    },
    "856": {
        "id": "856",
        "Title": "Maximum Number of Events That Can Be Attended II::Link-https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "dynamic-programming",
            "sorting"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "857": {
        "id": "857",
        "Title": "Longest Uncommon Subsequence II::Link-https://leetcode.com/problems/longest-uncommon-subsequence-ii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "sorting",
            "string",
            "two-pointers"
        ],
        "companies": [
            "google"
        ]
    },
    "858": {
        "id": "858",
        "Title": "Design Most Recently Used Queue::Link-https://leetcode.com/problems/design-most-recently-used-queue,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-indexed-tree",
            "design",
            "hash-table",
            "ordered-set",
            "stack"
        ],
        "companies": [
            "google"
        ]
    },
    "859": {
        "id": "859",
        "Title": "Longest Palindromic Subsequence::Link-https://leetcode.com/problems/longest-palindromic-subsequence,",
        "Difficulty": "M",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=bUr8cNWI09Q,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0516-longest-palindromic-subsequence.py,",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "linkedin"
        ]
    },
    "860": {
        "id": "860",
        "Title": "Freedom Trail::Link-https://leetcode.com/problems/freedom-trail,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "861": {
        "id": "861",
        "Title": "Inorder Successor in BST::Link-https://leetcode.com/problems/inorder-successor-in-bst,",
        "Difficulty": "M",
        "freq": "0.05",
        "others": [
            "grind169"
        ],
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "862": {
        "id": "862",
        "Title": "Find Center of Star Graph::Link-https://leetcode.com/problems/find-center-of-star-graph,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "graph"
        ],
        "companies": [
            "amazon"
        ]
    },
    "863": {
        "id": "863",
        "Title": "Find Mode in Binary Search Tree::Link-https://leetcode.com/problems/find-mode-in-binary-search-tree,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "binary-search-tree",
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "864": {
        "id": "864",
        "Title": "Word Pattern::Link-https://leetcode.com/problems/word-pattern,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=W_akoecmCbM,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0290-word-pattern.py,",
        "topics": [
            "hash-table",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "865": {
        "id": "865",
        "Title": "Word Pattern II::Link-https://leetcode.com/problems/word-pattern-ii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "backtracking",
            "hash-table",
            "string"
        ],
        "companies": [
            "oracle"
        ]
    },
    "866": {
        "id": "866",
        "Title": "Random Point in Non-overlapping Rectangles::Link-https://leetcode.com/problems/random-point-in-non-overlapping-rectangles,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "math",
            "ordered-set",
            "prefix-sum"
        ],
        "companies": [
            "google"
        ]
    },
    "867": {
        "id": "867",
        "Title": "Total Hamming Distance::Link-https://leetcode.com/problems/total-hamming-distance,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "math"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "868": {
        "id": "868",
        "Title": "Longest Substring Of All Vowels in Order::Link-https://leetcode.com/problems/longest-substring-of-all-vowels-in-order,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "sliding-window",
            "string"
        ],
        "companies": [
            "oracle"
        ]
    },
    "869": {
        "id": "869",
        "Title": "Minimum Interval to Include Each Query::Link-https://leetcode.com/problems/minimum-interval-to-include-each-query,",
        "Difficulty": "H",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=5hQ5WWW5awQ,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/1851-minimum-interval-to-include-each-query.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "binary-search",
            "heap-priority-queue",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "870": {
        "id": "870",
        "Title": "Sum of All Subset XOR Totals::Link-https://leetcode.com/problems/sum-of-all-subset-xor-totals,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation",
            "combinatorics",
            "enumeration",
            "math"
        ],
        "companies": [
            "amazon"
        ]
    },
    "871": {
        "id": "871",
        "Title": "Process Tasks Using Servers::Link-https://leetcode.com/problems/process-tasks-using-servers,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "heap-priority-queue"
        ],
        "companies": [
            "amazon"
        ]
    },
    "872": {
        "id": "872",
        "Title": "Maximum Number of Removable Characters::Link-https://leetcode.com/problems/maximum-number-of-removable-characters,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "string",
            "two-pointers"
        ],
        "companies": [
            "snowflake"
        ]
    },
    "873": {
        "id": "873",
        "Title": "Valid Perfect Square::Link-https://leetcode.com/problems/valid-perfect-square,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=Cg_wWPHJ2Sk,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0367-valid-perfect-square.py,",
        "topics": [
            "binary-search",
            "math"
        ],
        "companies": [
            "facebook"
        ]
    },
    "874": {
        "id": "874",
        "Title": "Count Good Numbers::Link-https://leetcode.com/problems/count-good-numbers,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "math",
            "recursion"
        ],
        "companies": [
            "amazon"
        ]
    },
    "875": {
        "id": "875",
        "Title": "Queue Reconstruction by Height::Link-https://leetcode.com/problems/queue-reconstruction-by-height,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-indexed-tree",
            "segment-tree",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "876": {
        "id": "876",
        "Title": "Find All Groups of Farmland::Link-https://leetcode.com/problems/find-all-groups-of-farmland,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "matrix"
        ],
        "companies": [
            "facebook"
        ]
    },
    "877": {
        "id": "877",
        "Title": "Final Value of Variable After Performing Operations::Link-https://leetcode.com/problems/final-value-of-variable-after-performing-operations,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "simulation",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "878": {
        "id": "878",
        "Title": "Hamming Distance::Link-https://leetcode.com/problems/hamming-distance,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "bit-manipulation"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "879": {
        "id": "879",
        "Title": "Maximum Difference Between Increasing Elements::Link-https://leetcode.com/problems/maximum-difference-between-increasing-elements,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array"
        ],
        "companies": [
            "cisco"
        ]
    },
    "880": {
        "id": "880",
        "Title": "Check if the Rectangle Corner Is Reachable::Link-https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "breadth-first-search",
            "depth-first-search",
            "geometry",
            "math",
            "union-find"
        ],
        "companies": [
            "amazon"
        ]
    },
    "881": {
        "id": "881",
        "Title": "Find the Minimum and Maximum Number of Nodes Between Critical Points::Link-https://leetcode.com/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "linked-list"
        ],
        "companies": [
            "amazon"
        ]
    },
    "882": {
        "id": "882",
        "Title": "Check if an Original String Exists Given Two Encoded Strings::Link-https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "dynamic-programming",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "883": {
        "id": "883",
        "Title": "Count Vowel Substrings of a String::Link-https://leetcode.com/problems/count-vowel-substrings-of-a-string,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "hash-table",
            "string"
        ],
        "companies": [
            "paypal"
        ]
    },
    "884": {
        "id": "884",
        "Title": "Maximum Path Quality of a Graph::Link-https://leetcode.com/problems/maximum-path-quality-of-a-graph,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "backtracking",
            "graph"
        ],
        "companies": [
            "doordash"
        ]
    },
    "885": {
        "id": "885",
        "Title": "Finding 3-Digit Even Numbers::Link-https://leetcode.com/problems/finding-3-digit-even-numbers,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "enumeration",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "886": {
        "id": "886",
        "Title": "Step-By-Step Directions From a Binary Tree Node to Another::Link-https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "string",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "887": {
        "id": "887",
        "Title": "Valid Arrangement of Pairs::Link-https://leetcode.com/problems/valid-arrangement-of-pairs,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "depth-first-search",
            "graph"
        ],
        "companies": [
            "facebook"
        ]
    },
    "888": {
        "id": "888",
        "Title": "Check if a Parentheses String Can Be Valid::Link-https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "greedy",
            "stack",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "889": {
        "id": "889",
        "Title": "Sort Even and Odd Indices Independently::Link-https://leetcode.com/problems/sort-even-and-odd-indices-independently,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "sorting"
        ],
        "companies": [
            "zoho"
        ]
    },
    "890": {
        "id": "890",
        "Title": "Create Binary Tree From Descriptions::Link-https://leetcode.com/problems/create-binary-tree-from-descriptions,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-tree",
            "hash-table",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "891": {
        "id": "891",
        "Title": "Circular Array Loop::Link-https://leetcode.com/problems/circular-array-loop,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "two-pointers"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "892": {
        "id": "892",
        "Title": "Find Closest Number to Zero::Link-https://leetcode.com/problems/find-closest-number-to-zero,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array"
        ],
        "companies": [
            "google"
        ]
    },
    "893": {
        "id": "893",
        "Title": "Design an ATM Machine::Link-https://leetcode.com/problems/design-an-atm-machine,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "design",
            "greedy"
        ],
        "companies": [
            "yandex"
        ]
    },
    "894": {
        "id": "894",
        "Title": "Count Number of Rectangles Containing Each Point::Link-https://leetcode.com/problems/count-number-of-rectangles-containing-each-point,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-indexed-tree",
            "binary-search",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "895": {
        "id": "895",
        "Title": "Minimum Average Difference::Link-https://leetcode.com/problems/minimum-average-difference,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "prefix-sum"
        ],
        "companies": [
            "amazon"
        ]
    },
    "896": {
        "id": "896",
        "Title": "Remove Digit From Number to Maximize Result::Link-https://leetcode.com/problems/remove-digit-from-number-to-maximize-result,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "enumeration",
            "greedy",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "897": {
        "id": "897",
        "Title": "Total Appeal of A String::Link-https://leetcode.com/problems/total-appeal-of-a-string,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "dynamic-programming",
            "hash-table",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "898": {
        "id": "898",
        "Title": "Largest Combination With Bitwise AND Greater Than Zero::Link-https://leetcode.com/problems/largest-combination-with-bitwise-and-greater-than-zero,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "counting",
            "hash-table"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "899": {
        "id": "899",
        "Title": "Sum of Total Strength of Wizards::Link-https://leetcode.com/problems/sum-of-total-strength-of-wizards,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "monotonic-stack",
            "prefix-sum",
            "stack"
        ],
        "companies": [
            "amazon"
        ]
    },
    "900": {
        "id": "900",
        "Title": "Fair Distribution of Cookies::Link-https://leetcode.com/problems/fair-distribution-of-cookies,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "backtracking",
            "bit-manipulation",
            "bitmask",
            "dynamic-programming"
        ],
        "companies": [
            "amazon"
        ]
    },
    "901": {
        "id": "901",
        "Title": "Evaluate Boolean Binary Tree::Link-https://leetcode.com/problems/evaluate-boolean-binary-tree,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "google"
        ]
    },
    "902": {
        "id": "902",
        "Title": "Maximum Energy Boost From Two Drinks::Link-https://leetcode.com/problems/maximum-energy-boost-from-two-drinks,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "903": {
        "id": "903",
        "Title": "Equal Row and Column Pairs::Link-https://leetcode.com/problems/equal-row-and-column-pairs,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "matrix",
            "simulation"
        ],
        "companies": [
            "google"
        ]
    },
    "904": {
        "id": "904",
        "Title": "Make Array Zero by Subtracting Equal Amounts::Link-https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "hash-table",
            "heap-priority-queue",
            "simulation",
            "sorting"
        ],
        "companies": [
            "amazon"
        ]
    },
    "905": {
        "id": "905",
        "Title": "Number of Arithmetic Triplets::Link-https://leetcode.com/problems/number-of-arithmetic-triplets,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "enumeration",
            "hash-table",
            "two-pointers"
        ],
        "companies": [
            "google"
        ]
    },
    "906": {
        "id": "906",
        "Title": "Largest Local Values in a Matrix::Link-https://leetcode.com/problems/largest-local-values-in-a-matrix,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    },
    "907": {
        "id": "907",
        "Title": "Find All Numbers Disappeared in an Array::Link-https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array,",
        "Difficulty": "E",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=8i-f24YFWC4,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0448-find-all-numbers-disappeared-in-an-array.py,",
        "topics": [
            "array",
            "hash-table"
        ],
        "companies": [
            "amazon"
        ]
    },
    "908": {
        "id": "908",
        "Title": "Sort the People::Link-https://leetcode.com/problems/sort-the-people,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "sorting",
            "string"
        ],
        "companies": [
            "facebook"
        ]
    },
    "909": {
        "id": "909",
        "Title": "Remove Letter To Equalize Frequency::Link-https://leetcode.com/problems/remove-letter-to-equalize-frequency,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "counting",
            "hash-table",
            "string"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "910": {
        "id": "910",
        "Title": "The Employee That Worked on the Longest Task::Link-https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array"
        ],
        "companies": [
            "ibm"
        ]
    },
    "911": {
        "id": "911",
        "Title": "Find The Original Array of Prefix Xor::Link-https://leetcode.com/problems/find-the-original-array-of-prefix-xor,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation"
        ],
        "companies": [
            "amazon"
        ]
    },
    "912": {
        "id": "912",
        "Title": "Minimum Height Trees::Link-https://leetcode.com/problems/minimum-height-trees,",
        "Difficulty": "M",
        "freq": "0.05",
        "others": [
            "grind75",
            "grind169"
        ],
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "topological-sort"
        ],
        "companies": [
            "google"
        ]
    },
    "913": {
        "id": "913",
        "Title": "Sparse Matrix Multiplication::Link-https://leetcode.com/problems/sparse-matrix-multiplication,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "matrix"
        ],
        "companies": [
            "pinterest"
        ]
    },
    "914": {
        "id": "914",
        "Title": "Burst Balloons::Link-https://leetcode.com/problems/burst-balloons,",
        "Difficulty": "H",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=VFskby7lUbw,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0312-burst-balloons.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "amazon"
        ]
    },
    "915": {
        "id": "915",
        "Title": "Minimum Fuel Cost to Report to the Capital::Link-https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "graph",
            "tree"
        ],
        "companies": [
            "amazon"
        ]
    },
    "916": {
        "id": "916",
        "Title": "Find the Pivot Integer::Link-https://leetcode.com/problems/find-the-pivot-integer,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "math",
            "prefix-sum"
        ],
        "companies": [
            "amazon"
        ]
    },
    "917": {
        "id": "917",
        "Title": "Remove Nodes From Linked List::Link-https://leetcode.com/problems/remove-nodes-from-linked-list,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "linked-list",
            "monotonic-stack",
            "recursion",
            "stack"
        ],
        "companies": [
            "facebook"
        ]
    },
    "918": {
        "id": "918",
        "Title": "Frog Jump II::Link-https://leetcode.com/problems/frog-jump-ii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "greedy"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "919": {
        "id": "919",
        "Title": "Design Memory Allocator::Link-https://leetcode.com/problems/design-memory-allocator,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "design",
            "hash-table",
            "simulation"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "920": {
        "id": "920",
        "Title": "Difference Between Element Sum and Digit Sum of an Array::Link-https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "amazon"
        ]
    },
    "921": {
        "id": "921",
        "Title": "Rearranging Fruits::Link-https://leetcode.com/problems/rearranging-fruits,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "hash-table"
        ],
        "companies": [
            "oracle"
        ]
    },
    "922": {
        "id": "922",
        "Title": "Sliding Subarray Beauty::Link-https://leetcode.com/problems/sliding-subarray-beauty,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "sliding-window"
        ],
        "companies": [
            "amazon"
        ]
    },
    "923": {
        "id": "923",
        "Title": "Frequency Tracker::Link-https://leetcode.com/problems/frequency-tracker,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "design",
            "hash-table"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "924": {
        "id": "924",
        "Title": "Minimum String Length After Removing Substrings::Link-https://leetcode.com/problems/minimum-string-length-after-removing-substrings,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "simulation",
            "stack",
            "string"
        ],
        "companies": [
            "jpmorgan"
        ]
    },
    "925": {
        "id": "925",
        "Title": "Maximum Product of Word Lengths::Link-https://leetcode.com/problems/maximum-product-of-word-lengths,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "926": {
        "id": "926",
        "Title": "Minimum Absolute Difference Between Elements With Constraint::Link-https://leetcode.com/problems/minimum-absolute-difference-between-elements-with-constraint,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "ordered-set"
        ],
        "companies": [
            "uber"
        ]
    },
    "927": {
        "id": "927",
        "Title": "Minimum Moves to Spread Stones Over Grid::Link-https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "breadth-first-search",
            "dynamic-programming",
            "matrix"
        ],
        "companies": [
            "tiktok"
        ]
    },
    "928": {
        "id": "928",
        "Title": "Maximum Odd Binary Number::Link-https://leetcode.com/problems/maximum-odd-binary-number,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "greedy",
            "math",
            "string"
        ],
        "companies": [
            "amazon"
        ]
    },
    "929": {
        "id": "929",
        "Title": "Length of the Longest Subsequence That Sums to Target::Link-https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming"
        ],
        "companies": [
            "facebook"
        ]
    },
    "930": {
        "id": "930",
        "Title": "Distribute Candies Among Children I::Link-https://leetcode.com/problems/distribute-candies-among-children-i,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "combinatorics",
            "enumeration",
            "math"
        ],
        "companies": [
            "amazon"
        ]
    },
    "931": {
        "id": "931",
        "Title": "Maximum Size Subarray Sum Equals k::Link-https://leetcode.com/problems/maximum-size-subarray-sum-equals-k,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "prefix-sum"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "932": {
        "id": "932",
        "Title": "Count Subarrays Where Max Element Appears at Least K Times::Link-https://leetcode.com/problems/count-subarrays-where-max-element-appears-at-least-k-times,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "sliding-window"
        ],
        "companies": [
            "apple"
        ]
    },
    "933": {
        "id": "933",
        "Title": "Divide Array Into Arrays With Max Difference::Link-https://leetcode.com/problems/divide-array-into-arrays-with-max-difference,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "greedy",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "934": {
        "id": "934",
        "Title": "Count the Number of Incremovable Subarrays II::Link-https://leetcode.com/problems/count-the-number-of-incremovable-subarrays-ii,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "two-pointers"
        ],
        "companies": [
            "de-shaw"
        ]
    },
    "935": {
        "id": "935",
        "Title": "Minimum Cost to Convert String I::Link-https://leetcode.com/problems/minimum-cost-to-convert-string-i,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "graph",
            "shortest-path",
            "string"
        ],
        "companies": [
            "google"
        ]
    },
    "936": {
        "id": "936",
        "Title": "Minimum Number of Operations to Make Array XOR Equal to K::Link-https://leetcode.com/problems/minimum-number-of-operations-to-make-array-xor-equal-to-k,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation"
        ],
        "companies": [
            "facebook"
        ]
    },
    "937": {
        "id": "937",
        "Title": "Serialize and Deserialize N-ary Tree::Link-https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "breadth-first-search",
            "depth-first-search",
            "string",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "938": {
        "id": "938",
        "Title": "Maximum Number of Operations With the Same Score II::Link-https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "memoization"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "939": {
        "id": "939",
        "Title": "Elimination Game::Link-https://leetcode.com/problems/elimination-game,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "math",
            "recursion"
        ],
        "companies": [
            "amazon"
        ]
    },
    "940": {
        "id": "940",
        "Title": "Longest Substring with At Most K Distinct Characters::Link-https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "hash-table",
            "sliding-window",
            "string"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "941": {
        "id": "941",
        "Title": "Valid Word Square::Link-https://leetcode.com/problems/valid-word-square,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "matrix"
        ],
        "companies": [
            "apple"
        ]
    },
    "942": {
        "id": "942",
        "Title": "Minimum Number of Refueling Stops::Link-https://leetcode.com/problems/minimum-number-of-refueling-stops,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "greedy",
            "heap-priority-queue"
        ],
        "companies": [
            "goldman-sachs"
        ]
    },
    "943": {
        "id": "943",
        "Title": "Leaf-Similar Trees::Link-https://leetcode.com/problems/leaf-similar-trees,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "binary-tree",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "microsoft"
        ]
    },
    "944": {
        "id": "944",
        "Title": "Smallest Subtree with all the Deepest Nodes::Link-https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "hash-table",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "945": {
        "id": "945",
        "Title": "Find Minimum Operations to Make All Elements Divisible by Three::Link-https://leetcode.com/problems/find-minimum-operations-to-make-all-elements-divisible-by-three,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "array",
            "math"
        ],
        "companies": [
            "tcs"
        ]
    },
    "946": {
        "id": "946",
        "Title": "Find Subarray With Bitwise OR Closest to K::Link-https://leetcode.com/problems/find-subarray-with-bitwise-or-closest-to-k,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "array",
            "binary-search",
            "bit-manipulation",
            "segment-tree"
        ],
        "companies": [
            "salesforce"
        ]
    },
    "947": {
        "id": "947",
        "Title": "Score After Flipping Matrix::Link-https://leetcode.com/problems/score-after-flipping-matrix,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "bit-manipulation",
            "greedy",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    },
    "948": {
        "id": "948",
        "Title": "Hand of Straights::Link-https://leetcode.com/problems/hand-of-straights,",
        "Difficulty": "M",
        "freq": "0.05",
        "NeetCode": "Vid::Link-https://www.youtube.com/watch?v=amnrMCVd2YI,Code::Link-https://github.com/neetcode-gh/leetcode/blob/main/python/0846-hand-of-straights.py,",
        "others": [
            "neet150"
        ],
        "topics": [
            "array",
            "greedy",
            "hash-table",
            "sorting"
        ],
        "companies": [
            "google"
        ]
    },
    "949": {
        "id": "949",
        "Title": "Minimum Depth of Binary Tree::Link-https://leetcode.com/problems/minimum-depth-of-binary-tree,",
        "Difficulty": "E",
        "freq": "0.05",
        "topics": [
            "binary-tree",
            "breadth-first-search",
            "depth-first-search",
            "tree"
        ],
        "companies": [
            "facebook"
        ]
    },
    "950": {
        "id": "950",
        "Title": "Stone Game::Link-https://leetcode.com/problems/stone-game,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "dynamic-programming",
            "math"
        ],
        "companies": [
            "bloomberg"
        ]
    },
    "951": {
        "id": "951",
        "Title": "Nth Magical Number::Link-https://leetcode.com/problems/nth-magical-number,",
        "Difficulty": "H",
        "freq": "0.05",
        "topics": [
            "binary-search",
            "math"
        ],
        "companies": [
            "google"
        ]
    },
    "952": {
        "id": "952",
        "Title": "Magic Squares In Grid::Link-https://leetcode.com/problems/magic-squares-in-grid,",
        "Difficulty": "M",
        "freq": "0.05",
        "topics": [
            "array",
            "hash-table",
            "math",
            "matrix"
        ],
        "companies": [
            "google"
        ]
    }
}